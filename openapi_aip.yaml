openapi: 3.1.0
info:
  title: TCN Operator API
  description: TCN Operator API
paths:
  /tcn/bi/businessIntelligence/v1alpha1/orgs/{org}/regions/{region}/dashboards/{dashboard}:publish:
    post:
      tags:
      - BusinessIntelligenceService
      summary: PublishDashboard
      description: PublishDashboard publishes a dashboard.
      operationId: BusinessIntelligenceService_PublishDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboard
        in: path
        description: The dashboard id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                destination_standard_dashboard_id:
                  type: string
                  title: destination_standard_dashboard_id
                  description: (OPTIONAL) Optional. The destination standard dashboard
                    id to publish over.
              title: PublishDashboardRequest
              additionalProperties: false
              description: Request to publish a dashboard.
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.PublishDashboardResponse'
  /tcn/bi/businessIntelligence/v1alpha1/orgs/{org}/regions/{region}/users/{user}/defaultDashboard:upsert:
    post:
      tags:
      - BusinessIntelligenceService
      summary: UpsertDefaultDashboard
      description: Creates or updates the default dashboard for a user.
      operationId: BusinessIntelligenceService_UpsertDefaultDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: default_dashboard
              description: DefaultDashboard to create
              $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.DefaultDashboard'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.UpsertDefaultDashboardResponse'
  /tcn/bi/businessIntelligence/v1alpha1/orgs/{org}/regions/{region}/users/{user}/defaultDashboard:
    get:
      tags:
      - BusinessIntelligenceService
      - BusinessIntelligenceService
      summary: GetDefaultDashboard
      description: Gets the default dashboard for a user.
      operationId: BusinessIntelligenceService_ListDefaultDashboards
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) filter
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.ListDefaultDashboardsResponse'
  /tcn/bi/businessIntelligence/v1alpha1/orgs/{org}/regions/{region}/dashboards:
    get:
      tags:
      - BusinessIntelligenceService
      summary: ListDashboards
      description: ListDashboards lists dashboards.
      operationId: BusinessIntelligenceService_ListDashboards
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: "The maximum number of books to return. The service may return
          fewer than\n this value.\n If unspecified, at most 50 dashboards will be
          returned.\n The maximum value is 1000; values above 1000 will be coerced
          to 1000."
        schema:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) The maximum number of books to return. The service
            may return fewer than\n this value.\n If unspecified, at most 50 dashboards
            will be returned.\n The maximum value is 1000; values above 1000 will
            be coerced to 1000."
      - name: page_token
        in: query
        description: "A page token, received from a previous `ListDashboards` call.\n
          Provide this to retrieve the subsequent page."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) A page token, received from a previous `ListDashboards`
            call.\n Provide this to retrieve the subsequent page."
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.ListDashboardsResponse'
    post:
      tags:
      - BusinessIntelligenceService
      summary: CreateDashboard
      description: CreateDashboard creates a new dashboard.
      operationId: BusinessIntelligenceService_CreateDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: dashboard
              description: Required. The dashboard to create.
              $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.Dashboard'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.Dashboard'
  /tcn/bi/businessIntelligence/v1alpha1/orgs/{org}/regions/{region}/dashboards/{dashboard}:
    get:
      tags:
      - BusinessIntelligenceService
      summary: GetDashboard
      description: GetDashboard gets a dashboard.
      operationId: BusinessIntelligenceService_GetDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboard
        in: path
        description: The dashboard id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.Dashboard'
    delete:
      tags:
      - BusinessIntelligenceService
      summary: DeleteDashboard
      description: DeleteDashboard deletes a dashboard.
      operationId: BusinessIntelligenceService_DeleteDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboard
        in: path
        description: The dashboard id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
    patch:
      tags:
      - BusinessIntelligenceService
      summary: UpdateDashboard
      description: UpdateDashboard updates a dashboard.
      operationId: BusinessIntelligenceService_UpdateDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboard
        in: path
        description: The dashboard id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: dashboard
              description: Required. The dashboard to update.
              $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.Dashboard'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.Dashboard'
  /tcn/bi/businessIntelligence/v1alpha1/orgs/{org}/regions/{region}/applications/{application}/applicationDashboards:
    get:
      tags:
      - BusinessIntelligenceService
      summary: ListApplicationDashboards
      description: ListApplicationDashboards lists applications and assigned dashboards.
      operationId: BusinessIntelligenceService_ListApplicationDashboards
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: application
        in: path
        description: The application id.
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) filter
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.ListApplicationDashboardsResponse'
    post:
      tags:
      - BusinessIntelligenceService
      summary: CreateApplicationDashboard
      description: CreateApplicationDashboard assigns a dashboard to an application.
      operationId: BusinessIntelligenceService_CreateApplicationDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: application
        in: path
        description: The application id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: application_dashboard
              description: ApplicationDashboard to create
              $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.ApplicationDashboard'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.ApplicationDashboard'
  ? /tcn/bi/businessIntelligence/v1alpha1/orgs/{org}/regions/{region}/applications/{application}/applicationDashboards/{applicationDashboard}
  : get:
      tags:
      - BusinessIntelligenceService
      summary: GetApplicationDashboard
      description: GetApplicationDashboard gets a dashboard assigned to an application.
      operationId: BusinessIntelligenceService_GetApplicationDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: application
        in: path
        description: The application id.
        required: true
        schema:
          type: string
      - name: applicationDashboard
        in: path
        description: The applicationDashboard id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.ApplicationDashboard'
    delete:
      tags:
      - BusinessIntelligenceService
      summary: DeleteApplicationDashboard
      description: DeleteApplicationDashboard deletes a dashboard assigned to an application.
      operationId: BusinessIntelligenceService_DeleteApplicationDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: application
        in: path
        description: The application id.
        required: true
        schema:
          type: string
      - name: applicationDashboard
        in: path
        description: The applicationDashboard id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
  /tcn/bi/dashboards/v1alpha1/orgs/{org}/regions/{region}/dashboards:
    get:
      tags:
      - DashboardsService
      summary: ListDashboards
      description: ListDashboards lists dashboards.
      operationId: DashboardsService_ListDashboards
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: "The maximum number of books to return. The service may return
          fewer than\n this value.\n If unspecified, at most 50 dashboards will be
          returned.\n The maximum value is 1000; values above 1000 will be coerced
          to 1000."
        schema:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) The maximum number of books to return. The service
            may return fewer than\n this value.\n If unspecified, at most 50 dashboards
            will be returned.\n The maximum value is 1000; values above 1000 will
            be coerced to 1000."
      - name: page_token
        in: query
        description: "A page token, received from a previous `ListDashboards` call.\n
          Provide this to retrieve the subsequent page."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) A page token, received from a previous `ListDashboards`
            call.\n Provide this to retrieve the subsequent page."
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.ListDashboardsResponse'
    post:
      tags:
      - DashboardsService
      summary: CreateDashboard
      description: CreateDashboard creates a new dashboard.
      operationId: DashboardsService_CreateDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      requestBody:
        description: Required. The dashboard to create.
        content:
          application/json:
            schema:
              title: dashboard
              description: Required. The dashboard to create.
              $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
  /tcn/bi/dashboards/v1alpha1/orgs/{org}/regions/{region}/dashboards/{dashboard}:
    get:
      tags:
      - DashboardsService
      summary: GetDashboard
      description: GetDashboard gets a dashboard.
      operationId: DashboardsService_GetDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboard
        in: path
        description: The dashboard id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
    delete:
      tags:
      - DashboardsService
      summary: DeleteDashboard
      description: DeleteDashboard deletes a dashboard.
      operationId: DashboardsService_DeleteDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboard
        in: path
        description: The dashboard id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
    patch:
      tags:
      - DashboardsService
      summary: UpdateDashboard
      description: UpdateDashboard updates a dashboard.
      operationId: DashboardsService_UpdateDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboard
        in: path
        description: The dashboard id.
        required: true
        schema:
          type: string
      requestBody:
        description: Required. The dashboard to update.
        content:
          application/json:
            schema:
              title: dashboard
              description: Required. The dashboard to update.
              $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
  /tcn/bi/dashboards/v1alpha1/orgs/{org}/regions/{region}/dashboard/{dashboard}:publish:
    post:
      tags:
      - DashboardsService
      summary: PublishDashboard
      description: PublishDashboard publishes a dashboard.
      operationId: DashboardsService_PublishDashboard
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: dashboard
        in: path
        description: The dashboard id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.PublishDashboardResponse'
  /tcn/bi/dashboards/v1alpha1/default:markDefaultDashboard:
    post:
      tags:
      - DashboardsService
      summary: MarkDefaultDashboard
      description: Sets a dashboard as the user's default
      operationId: DashboardsService_MarkDefaultDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.MarkDefaultDashboardRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.MarkDefaultDashboardResponse'
  /tcn/bi/dashboards/v1alpha1/default:loadDefaultDashboard:
    get:
      tags:
      - DashboardsService
      summary: LoadDefaultDashboard
      description: LoadDefaultDashboard gets the user's default dashboard.
      operationId: DashboardsService_LoadDefaultDashboard
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.LoadDefaultDashboardResponse'
  /tcn/delivery/credential/v1alpha1/orgs/{org}/credentials:
    get:
      tags:
      - CredentialService
      summary: ListCredentials
      description: list credentials
      operationId: CredentialService_ListCredentials
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: how many credentials to get
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) how many credentials to get
      - name: page_token
        in: query
        description: pagination token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) pagination token
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.ListCredentialsResponse'
    post:
      tags:
      - CredentialService
      summary: CreateCredential
      description: create credential
      operationId: CredentialService_CreateCredential
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: credential to create
        content:
          application/json:
            schema:
              title: credential
              description: credential to create
              $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential'
  /tcn/delivery/credential/v1alpha1/orgs/{org}/credentials/{credential}:
    get:
      tags:
      - CredentialService
      summary: GetCredential
      description: get credential
      operationId: CredentialService_GetCredential
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: credential
        in: path
        description: The credential id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential'
    delete:
      tags:
      - CredentialService
      summary: DeleteCredential
      description: delete credential
      operationId: CredentialService_DeleteCredential
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: credential
        in: path
        description: The credential id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential'
    patch:
      tags:
      - CredentialService
      summary: UpdateCredential
      description: update credential
      operationId: CredentialService_UpdateCredential
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: credential
        in: path
        description: The credential id.
        required: true
        schema:
          type: string
      requestBody:
        description: credential to update based on
        content:
          application/json:
            schema:
              title: credential
              description: credential to update based on
              $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential'
  /tcn/delivery/encryption/v1alpha1/orgs/{org}/encryptions:
    get:
      tags:
      - EncryptionService
      summary: ListEncryptions
      description: list encryptions
      operationId: EncryptionService_ListEncryptions
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: Returned page.
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
      - name: page_token
        in: query
        description: Used to specify the page token.
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.encryption.v1alpha1.ListEncryptionsResponse'
    post:
      tags:
      - EncryptionService
      summary: CreateEncryption
      description: create an encryption
      operationId: EncryptionService_CreateEncryption
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: encryption to create
        content:
          application/json:
            schema:
              title: encryption
              description: encryption to create
              $ref: '#/components/schemas/tcn.delivery.encryption.v1alpha1.Encryption'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.encryption.v1alpha1.Encryption'
  /tcn/delivery/encryption/v1alpha1/orgs/{org}/encryptions/{encryption}:
    get:
      tags:
      - EncryptionService
      summary: GetEncryption
      description: get an encryption
      operationId: EncryptionService_GetEncryption
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: encryption
        in: path
        description: The encryption id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.encryption.v1alpha1.Encryption'
    delete:
      tags:
      - EncryptionService
      summary: DeleteEncryption
      description: delete an encryption
      operationId: EncryptionService_DeleteEncryption
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: encryption
        in: path
        description: The encryption id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.encryption.v1alpha1.Encryption'
  /tcn/delivery/encryption/v1alpha1/orgs/{org}/encryption/{encryption}:
    patch:
      tags:
      - EncryptionService
      summary: UpdateEncryption
      description: update an encryption
      operationId: EncryptionService_UpdateEncryption
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: encryption
        in: path
        description: The encryption id.
        required: true
        schema:
          type: string
      requestBody:
        description: encryption to update based on
        content:
          application/json:
            schema:
              title: encryption
              description: encryption to update based on
              $ref: '#/components/schemas/tcn.delivery.encryption.v1alpha1.Encryption'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.encryption.v1alpha1.Encryption'
  /tcn/delivery/transportschema/v1alpha1/orgs/{org}/transportSchemas:
    post:
      tags:
      - TransportSchemaService
      summary: CreateTransportSchema
      description: create transport schema
      operationId: TransportSchemaService_CreateTransportSchema
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: transport schema to create
        content:
          application/json:
            schema:
              title: transport_schema
              description: transport schema to create
              $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema'
  /tcn/delivery/transportschema/v1alpha1/orgs/{org}/transportSchemas/{transportSchema}:
    get:
      tags:
      - TransportSchemaService
      - TransportSchemaService
      summary: GetTransaction
      description: get transactions
      operationId: TransportSchemaService_GetTransportSchema
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: transportSchema
        in: path
        description: The transportSchema id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: transportSchema
        in: path
        description: The transportSchema id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema'
    patch:
      tags:
      - TransportSchemaService
      summary: UpdateTransportSchema
      description: update transport schema
      operationId: TransportSchemaService_UpdateTransportSchema
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: transportSchema
        in: path
        description: The transportSchema id.
        required: true
        schema:
          type: string
      requestBody:
        description: fields to update
        content:
          application/json:
            schema:
              title: transport_schema
              description: fields to update
              $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema'
  /tcn/delivery/transportschema/v1alpha1/orgs/{org}/transportSchema/{transportSchema}:
    get:
      tags:
      - TransportSchemaService
      summary: ListTransactions
      description: list transactions
      operationId: TransportSchemaService_ListTransactions
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: transportSchema
        in: path
        description: The transportSchema id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.ListTransactionsResponse'
    delete:
      tags:
      - TransportSchemaService
      summary: DeleteTransportSchema
      description: delete transport schema
      operationId: TransportSchemaService_DeleteTransportSchema
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: transportSchema
        in: path
        description: The transportSchema id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema'
  /tcn/delivery/transportschema/v1alpha1/orgs/{org}/transportSchemas/{transportSchema}/*:
    get:
      tags:
      - TransportSchemaService
      summary: ListTransportSchemas
      description: list transport schemas
      operationId: TransportSchemaService_ListTransportSchemas
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: transportSchema
        in: path
        description: The transportSchema id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) the page token
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.ListTransportSchemasResponse'
  /tcn/delivery/transportschema/v1alpha1/orgs/{org}/transportSchemas/{transportSchema}:validate:
    get:
      tags:
      - TransportSchemaService
      summary: ValidateTransportSchema
      description: send a test outbound delivery
      operationId: TransportSchemaService_ValidateTransportSchema
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: transportSchema
        in: path
        description: The transportSchema id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.ValidateTransportSchemaResponse'
  /tcn/delivery/transportschema/v1alpha1/orgs/{org}/smsNumbers:
    get:
      tags:
      - TransportSchemaService
      summary: ListSMSNumbers
      description: list sms numbers
      operationId: TransportSchemaService_ListSMSNumbers
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: Returned page.
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
      - name: page_token
        in: query
        description: Used to specify the page token.
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.ListSMSNumbersResponse'
  /tcn/journey/project/v1beta1/orgs/{org}/collection/{collection}/jobs:
    get:
      tags:
      - JobsService
      summary: ListJobs
      description: ListJobs
      operationId: JobsService_ListJobs
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: collection
        in: path
        description: The collection id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: Returned page.
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
      - name: page_token
        in: query
        description: Used to specify the page token.
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.journey.jobs.v1beta1.ListJobsResponse'
  /tcn/journey/jobs/v1beta1/orgs/{org}/jobs:
    post:
      tags:
      - JobsService
      summary: CreateJob
      description: CreateJob
      operationId: JobsService_CreateJob
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: Job to create
        content:
          application/json:
            schema:
              title: job
              description: Job to create
              $ref: '#/components/schemas/tcn.journey.jobs.v1beta1.Job'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.journey.jobs.v1beta1.Job'
  /tcn/journey/project/v1beta1/orgs/{org}/collection/{collection}/source/{source}/job/{job}/record/{record}/rejections:
    get:
      tags:
      - RejectionsService
      summary: ListRejections
      description: Method to list skill groups
      operationId: RejectionsService_ListRejections
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: collection
        in: path
        description: The collection id.
        required: true
        schema:
          type: string
      - name: source
        in: path
        description: The source id.
        required: true
        schema:
          type: string
      - name: job
        in: path
        description: The job id.
        required: true
        schema:
          type: string
      - name: record
        in: path
        description: The record id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: Returned page.
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
      - name: page_token
        in: query
        description: Used to specify the page token.
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.journey.rejection.v1beta1.ListRejectionsResponse'
  /tcn/omni/attachment/v1alpha1/orgs/{org}/attachments:
    post:
      tags:
      - AttachmentService
      summary: CreateAttachment
      description: Method to create attachments -
      operationId: AttachmentService_CreateAttachment
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the attachment to be created
        content:
          application/json:
            schema:
              title: attachment
              description: the attachment to be created
              $ref: '#/components/schemas/tcn.omni.attachment.v1alpha1.Attachment'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.attachment.v1alpha1.Attachment'
  /tcn/omni/attachments/v1alpha1/orgs/{org}/attachments:
    get:
      tags:
      - AttachmentService
      summary: ListAttachments
      description: Method to list attachments
      operationId: AttachmentService_ListAttachments
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.attachment.v1alpha1.ListAttachmentsResponse'
  /tcn/omni/attachments/v1alpha1/orgs/{org}/attachments/{attachment}:
    get:
      tags:
      - AttachmentService
      summary: GetAttachment
      description: Method to get attachment
      operationId: AttachmentService_GetAttachment
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: attachment
        in: path
        description: The attachment id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.attachment.v1alpha1.Attachment'
  /tcn/omni/campaigns/v1alpha1/orgs/{org}/campaigns:
    get:
      tags:
      - CampaignService
      summary: ListCampaigns
      description: Method to list campaigns
      operationId: CampaignService_ListCampaigns
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.ListCampaignsResponse'
  /tcn/omni/campaigns/v1alpha1/orgs/{org}/campaigns/{campaign}:
    get:
      tags:
      - CampaignService
      summary: GetCampaign
      description: Method to get campaign
      operationId: CampaignService_GetCampaign
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: campaign
        in: path
        description: The campaign id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign'
  /tcn/omni/cannedmessage/v1alpha1/orgs/{org}/cannedMessageGroups/{cannedMessageGroup}/cannedMessages:
    get:
      tags:
      - CannedMessageService
      summary: ListCannedMessages
      description: ListCannedMessages -
      operationId: CannedMessageService_ListCannedMessages
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.ListCannedMessagesResponse'
    post:
      tags:
      - CannedMessageService
      summary: CreateCannedMessage
      description: CreateCannedMessage -
      operationId: CannedMessageService_CreateCannedMessage
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      requestBody:
        description: the canned message to be created
        content:
          application/json:
            schema:
              title: canned_message
              description: the canned message to be created
              $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
  /tcn/omni/cannedmessage/v1alpha1/orgs/{org}/cannedMessageGroups/{cannedMessageGroup}/cannedMessages/{cannedMessage}:
    get:
      tags:
      - CannedMessageService
      summary: GetCannedMessage
      description: GetCannedMessage -
      operationId: CannedMessageService_GetCannedMessage
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      - name: cannedMessage
        in: path
        description: The cannedMessage id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
    delete:
      tags:
      - CannedMessageService
      summary: DeleteCannedMessage
      description: DeleteCannedMessage -
      operationId: CannedMessageService_DeleteCannedMessage
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      - name: cannedMessage
        in: path
        description: The cannedMessage id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
    patch:
      tags:
      - CannedMessageService
      summary: UpdateCannedMessage
      description: UpdateCannedMessage -
      operationId: CannedMessageService_UpdateCannedMessage
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      - name: cannedMessage
        in: path
        description: The cannedMessage id.
        required: true
        schema:
          type: string
      requestBody:
        description: the canned message to be updated
        content:
          application/json:
            schema:
              title: canned_message
              description: the canned message to be updated
              $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
  /tcn/omni/cannedmessage/v1alpha1/orgs/{org}/cannedMessageGroups:
    get:
      tags:
      - CannedMessageService
      summary: ListCannedMessageGroups
      description: ListCannedMessageGroups
      operationId: CannedMessageService_ListCannedMessageGroups
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.ListCannedMessageGroupsResponse'
    post:
      tags:
      - CannedMessageService
      summary: CreateCannedMessageGroup
      description: CreateCannedMessageGroup
      operationId: CannedMessageService_CreateCannedMessageGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the canned message group to be created
        content:
          application/json:
            schema:
              title: canned_message_group
              description: the canned message group to be created
              $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
  /tcn/omni/cannedmessage/v1alpha1/orgs/{org}/cannedMessageGroups/{cannedMessageGroup}:
    get:
      tags:
      - CannedMessageService
      summary: GetCannedMessageGroup
      description: GetCannedMessageGroup
      operationId: CannedMessageService_GetCannedMessageGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
    delete:
      tags:
      - CannedMessageService
      summary: DeleteCannedMessageGroup
      description: DeleteCannedMessageGroup
      operationId: CannedMessageService_DeleteCannedMessageGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: force delete the canned message group
        schema:
          type: boolean
          title: force
          description: (OPTIONAL) force delete the canned message group
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
    patch:
      tags:
      - CannedMessageService
      summary: UpdateCannedMessageGroup
      description: UpdateCannedMessageGroup
      operationId: CannedMessageService_UpdateCannedMessageGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: cannedMessageGroup
        in: path
        description: The cannedMessageGroup id.
        required: true
        schema:
          type: string
      requestBody:
        description: The canned message group to be updated.
        content:
          application/json:
            schema:
              title: canned_message_group
              description: The canned message group to be updated.
              $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
  /tcn/omni/chatwidget/v1alpha1/orgs/{org}/chatWidgets:
    get:
      tags:
      - ChatWidgetService
      summary: ListChatWidgets
      description: method to list chat widgets
      operationId: ChatWidgetService_ListChatWidgets
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      - name: filter
        in: query
        description: filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ListChatWidgetsResponse'
    post:
      tags:
      - ChatWidgetService
      summary: CreateChatWidget
      description: method to create a chat widget
      operationId: ChatWidgetService_CreateChatWidget
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the chat widget to be created
        content:
          application/json:
            schema:
              title: chat_widget
              description: the chat widget to be created
              $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget'
  /tcn/omni/chatwidget/v1alpha1/orgs/{org}/chatWidgets/{chatWidget}:
    get:
      tags:
      - ChatWidgetService
      summary: GetChatWidget
      description: method to get a chat widget
      operationId: ChatWidgetService_GetChatWidget
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: chatWidget
        in: path
        description: The chatWidget id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget'
    delete:
      tags:
      - ChatWidgetService
      summary: DeleteChatWidget
      description: method to delete a chat widget
      operationId: ChatWidgetService_DeleteChatWidget
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: chatWidget
        in: path
        description: The chatWidget id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget'
    patch:
      tags:
      - ChatWidgetService
      summary: UpdateChatWidget
      description: method to update a chat widget
      operationId: ChatWidgetService_UpdateChatWidget
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: chatWidget
        in: path
        description: The chatWidget id.
        required: true
        schema:
          type: string
      requestBody:
        description: the chat widget we are updating
        content:
          application/json:
            schema:
              title: chat_widget
              description: the chat widget we are updating
              $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget'
  /tcn/omni/compliance/v1alpha1/orgs/{org}/complianceConfigs:
    get:
      tags:
      - ComplianceService
      summary: ListComplianceConfigs
      description: Method to list complianceConfigs
      operationId: ComplianceService_ListComplianceConfigs
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ListComplianceConfigsResponse'
    post:
      tags:
      - ComplianceService
      summary: CreateComplianceConfig
      description: Method to create complianceConfig
      operationId: ComplianceService_CreateComplianceConfig
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the complianceConfig to be created
        content:
          application/json:
            schema:
              title: compliance_config
              description: the complianceConfig to be created
              $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig'
  /tcn/omni/compliance/v1alpha1/orgs/{org}/complianceConfigs/{complianceConfig}:
    get:
      tags:
      - ComplianceService
      summary: GetComplianceConfig
      description: Method to get complianceConfig
      operationId: ComplianceService_GetComplianceConfig
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: complianceConfig
        in: path
        description: The complianceConfig id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig'
  /tcn/omni/connectedinbox/v1alpha1/orgs/{org}/connectedInboxes:
    get:
      tags:
      - ConnectedInboxService
      summary: ListConnectedInboxes
      description: method to list connected inbox
      operationId: ConnectedInboxService_ListConnectedInboxes
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      - name: filter
        in: query
        description: filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ListConnectedInboxesResponse'
    post:
      tags:
      - ConnectedInboxService
      summary: CreateConnectedInbox
      description: method to create a connected inbox
      operationId: ConnectedInboxService_CreateConnectedInbox
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the connected inbox to be created
        content:
          application/json:
            schema:
              title: connected_inbox
              description: the connected inbox to be created
              $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
  /tcn/omni/connectedinbox/v1alpha1/orgs/{org}/connectedInboxes/{connectedInboxe}:
    get:
      tags:
      - ConnectedInboxService
      summary: GetConnectedInbox
      description: method to get connected inbox
      operationId: ConnectedInboxService_GetConnectedInbox
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: connectedInboxe
        in: path
        description: The connectedInboxe id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
    delete:
      tags:
      - ConnectedInboxService
      summary: DeleteConnectedInbox
      description: method to delete a connected inbox
      operationId: ConnectedInboxService_DeleteConnectedInbox
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: connectedInboxe
        in: path
        description: The connectedInboxe id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
    patch:
      tags:
      - ConnectedInboxService
      summary: UpdateConnectedInbox
      description: method to update a connected inbox
      operationId: ConnectedInboxService_UpdateConnectedInbox
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: connectedInboxe
        in: path
        description: The connectedInboxe id.
        required: true
        schema:
          type: string
      requestBody:
        description: the connected inbox we are updating
        content:
          application/json:
            schema:
              title: connected_inbox
              description: the connected inbox we are updating
              $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
  /tcn/omni/connectedinbox/v1alpha1/orgs/{org}/connectedInboxes/{connectedInboxe}:describe:
    get:
      tags:
      - ConnectedInboxService
      summary: DescribeConnectedInboxCredentials
      description: method to describe the connected inbox email salt and password
      operationId: ConnectedInboxService_DescribeConnectedInboxCredentials
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: connectedInboxe
        in: path
        description: The connectedInboxe id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.DescribeConnectedInboxCredentialsResponse'
  /tcn/omni/connectedinbox/v1alpha1/orgs/{org}/connectedInboxes/{connectedInboxe}:test:
    get:
      tags:
      - ConnectedInboxService
      summary: TestConnectedInbox
      description: method to test the connected inbox
      operationId: ConnectedInboxService_TestConnectedInbox
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: connectedInboxe
        in: path
        description: The connectedInboxe id.
        required: true
        schema:
          type: string
      - name: connected_inbox.name
        in: query
        description: the connected inbox identifier
        schema:
          type: string
          title: name
          description: (IDENTIFIER) the connected inbox identifier
      - name: connected_inbox.email_address
        in: query
        description: email address of the connected inbox
        required: true
        schema:
          type: string
          title: email_address
          description: (IMMUTABLE) email address of the connected inbox
      - name: connected_inbox.username
        in: query
        description: username of accessing email
        schema:
          type: string
          title: username
          description: (OPTIONAL) username of accessing email
      - name: connected_inbox.password
        in: query
        description: password for accessing email,
        schema:
          type: string
          title: password
          description: (OPTIONAL) password for accessing email,
          writeOnly: true
      - name: connected_inbox.check_frequency_minutes
        in: query
        description: how often the email should be checked (in minutes)
        required: true
        schema:
          type:
          - integer
          - string
          title: check_frequency_minutes
          format: int64
          description: how often the email should be checked (in minutes)
      - name: connected_inbox.server
        in: query
        description: server name the email is located on
        required: true
        schema:
          type: string
          title: server
          description: server name the email is located on
      - name: connected_inbox.server_port
        in: query
        description: server port the email is located on
        required: true
        schema:
          type:
          - integer
          - string
          title: server_port
          format: int64
          description: server port the email is located on
      - name: connected_inbox.last_scheduled_time.seconds
        in: query
        description: "Represents seconds of UTC time since Unix epoch\n 1970-01-01T00:00:00Z.
          Must be from 0001-01-01T00:00:00Z to\n 9999-12-31T23:59:59Z inclusive."
        schema:
          type:
          - integer
          - string
          title: seconds
          format: int64
          description: "Represents seconds of UTC time since Unix epoch\n 1970-01-01T00:00:00Z.
            Must be from 0001-01-01T00:00:00Z to\n 9999-12-31T23:59:59Z inclusive."
      - name: connected_inbox.last_scheduled_time.nanos
        in: query
        description: "Non-negative fractions of a second at nanosecond resolution.
          Negative\n second values with fractions must still have non-negative nanos
          values\n that count forward in time. Must be from 0 to 999,999,999\n inclusive."
        schema:
          type: integer
          title: nanos
          format: int32
          description: "Non-negative fractions of a second at nanosecond resolution.
            Negative\n second values with fractions must still have non-negative nanos
            values\n that count forward in time. Must be from 0 to 999,999,999\n inclusive."
      - name: connected_inbox.purge_threshold
        in: query
        description: how many emails should build up before getting purged
        schema:
          type:
          - integer
          - string
          title: purge_threshold
          format: int64
          description: (OPTIONAL) how many emails should build up before getting purged
      - name: connected_inbox.consecutive_failures
        in: query
        description: number of consecutive failures allowed before entering an ERROR_STANDBY
          state
        schema:
          type: integer
          title: consecutive_failures
          format: int32
          description: (OPTIONAL) number of consecutive failures allowed before entering
            an ERROR_STANDBY state
      - name: connected_inbox.last_error.value
        in: query
        description: The string value.
        schema:
          type: string
          title: value
          description: The string value.
      - name: connected_inbox.max_message_size
        in: query
        description: maximum message size
        required: true
        schema:
          type: integer
          title: max_message_size
          format: int32
          description: maximum message size
      - name: connected_inbox.max_messages
        in: query
        description: maximum number of messages
        required: true
        schema:
          type: integer
          title: max_messages
          format: int32
          description: maximum number of messages
      - name: connected_inbox.authentication_type
        in: query
        description: type of authentication that should be used
        schema:
          title: authentication_type
          description: (OPTIONAL) type of authentication that should be used
          $ref: '#/components/schemas/tcn.omni.type.ConnectedInboxAuthenticationType'
      - name: connected_inbox.deleted
        in: query
        description: if the connected inbox deleted
        schema:
          type: boolean
          title: deleted
          description: if the connected inbox deleted
          readOnly: true
      - name: connected_inbox.oauth_reference_id
        in: query
        description: the id used to reference the oauth information
        schema:
          type: string
          title: oauth_reference_id
          description: (OPTIONAL) the id used to reference the oauth information
      - name: connected_inbox.processed_folder
        in: query
        description: optional custom folder name for messages that are successfully
          processed
        schema:
          type: string
          title: processed_folder
          description: (OPTIONAL) optional custom folder name for messages that are
            successfully processed
      - name: connected_inbox.failed_folder
        in: query
        description: optional custom folder name for messages that have failed to
          send
        schema:
          type: string
          title: failed_folder
          description: (OPTIONAL) optional custom folder name for messages that have
            failed to send
      - name: connected_inbox.sendername
        in: query
        description: the display name that will be shown to recipients when emails
          are sent from this address
        schema:
          type: string
          title: sendername
          description: (OPTIONAL) the display name that will be shown to recipients
            when emails are sent from this address
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.TestConnectedInboxResponse'
  /tcn/omni/contactlist/v1alpha1/orgs/{org}/contactLists:
    get:
      tags:
      - ContactListService
      summary: ListContactLists
      description: ListContactLists - retrieves all the contact lists
      operationId: ContactListService_ListContactLists
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.contactlist.v1alpha1.ListContactListsResponse'
  /tcn/omni/contactlist/v1alpha1/orgs/{org}/contactLists/{contactList}:
    get:
      tags:
      - ContactListService
      summary: GetContactList
      description: GetContactList - retrieves contact list
      operationId: ContactListService_GetContactList
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: contactList
        in: path
        description: The contactList id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.contactlist.v1alpha1.ContactList'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations:
    get:
      tags:
      - ConversationService
      summary: ListConversations
      description: Method to list conversations
      operationId: ConversationService_ListConversations
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.ListConversationsResponse'
    post:
      tags:
      - ConversationService
      summary: CreateConversation
      description: CreateConversation creates a new conversation for an ORG.
      operationId: ConversationService_CreateConversation
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the conversation to create
        content:
          application/json:
            schema:
              title: conversation
              description: the conversation to create
              $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}:
    get:
      tags:
      - ConversationService
      summary: GetConversation
      description: Method to get conversation
      operationId: ConversationService_GetConversation
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/collectedData:
    get:
      tags:
      - ConversationService
      summary: ListCollectedData
      description: Method to list collected data
      operationId: ConversationService_ListCollectedData
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.ListCollectedDataResponse'
    post:
      tags:
      - ConversationService
      summary: CreateCollectedData
      description: Method to create collected data
      operationId: ConversationService_CreateCollectedData
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      requestBody:
        description: the collected data to be created
        content:
          application/json:
            schema:
              title: collected_data
              description: the collected data to be created
              $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CollectedData'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CollectedData'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/collectedData/{collectedData}:
    get:
      tags:
      - ConversationService
      summary: GetCollectedData
      description: Method to get collected data
      operationId: ConversationService_GetCollectedData
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: collectedData
        in: path
        description: The collectedData id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CollectedData'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/users/{user}/assignments/{assignment}:
    get:
      tags:
      - ConversationService
      summary: GetAssignment
      description: Method to get conversation assignment
      operationId: ConversationService_GetAssignment
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      - name: assignment
        in: path
        description: The assignment id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Assignment'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/assignments:
    get:
      tags:
      - ConversationService
      summary: ListAssignments
      description: Method to list conversation assignments
      operationId: ConversationService_ListAssignments
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.ListAssignmentsResponse'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/metadata:
    get:
      tags:
      - ConversationService
      summary: ListMetadata
      description: ListMetadata retrieves metadata for a conversation.
      operationId: ConversationService_ListMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.ListMetadataResponse'
    post:
      tags:
      - ConversationService
      summary: CreateMetadata
      description: "CreateMetadata inserts a new metadata for a conversation when
        it doesn't exist,\n or updates it if it does."
      operationId: ConversationService_CreateMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      requestBody:
        description: the metadata to create
        content:
          application/json:
            schema:
              title: metadata
              description: the metadata to create
              $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/metadata:batchCreate:
    post:
      tags:
      - ConversationService
      summary: BatchCreateMetadata
      description: "BatchCreateMetadata inserts a new metadata for a conversation
        when it doesn't exist,\n or updates it if it does."
      operationId: ConversationService_BatchCreateMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requests:
                  type: array
                  items:
                    $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CreateMetadataRequest'
                  title: requests
                  description: "the metadata to create\n (-- api-linter: core::0233::request-requests-field=disabled\n
                    \    aip.dev/not-precedent: This is not metadatum. --)"
              title: BatchCreateMetadataRequest
              required:
              - requests
              additionalProperties: false
              description: BatchCreateMetadataRequest is a request to update or insert
                a new metadata.
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.BatchCreateMetadataResponse'
  /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/metadata/{metadata}:
    get:
      tags:
      - ConversationService
      summary: GetMetadata
      description: GetMetadata retrieves metadata for a conversation.
      operationId: ConversationService_GetMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: metadata
        in: path
        description: The metadata id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata'
  ? /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/users/{user}/assignments/{assignment}/assignmentMetadata
  : get:
      tags:
      - ConversationService
      summary: ListAssignmentMetadata
      description: ListAssignmentMetadata retrieves metadata for a conversation.
      operationId: ConversationService_ListAssignmentMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      - name: assignment
        in: path
        description: The assignment id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.ListAssignmentMetadataResponse'
    post:
      tags:
      - ConversationService
      summary: CreateAssignmentMetadata
      description: "CreateAssignmentMetadata inserts a new metadata for a conversation
        when it doesn't exist,\n or updates it if it does."
      operationId: ConversationService_CreateAssignmentMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      - name: assignment
        in: path
        description: The assignment id.
        required: true
        schema:
          type: string
      requestBody:
        description: the assignment_metadata to create
        content:
          application/json:
            schema:
              title: assignment_metadata
              description: the assignment_metadata to create
              $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata'
  ? /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/users/{user}/assignments/{assignment}/assignmentMetadata:batchCreate
  : post:
      tags:
      - ConversationService
      summary: BatchCreateAssignmentMetadata
      description: "BatchCreateAssignmentMetadata inserts a new metadata for a conversation
        when it doesn't exist,\n or updates it if it does."
      operationId: ConversationService_BatchCreateAssignmentMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      - name: assignment
        in: path
        description: The assignment id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requests:
                  type: array
                  items:
                    $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CreateAssignmentMetadataRequest'
                  title: requests
                  description: "the assignment_metadata to create\n (-- api-linter:
                    core::0233::request-requests-field=disabled\n     aip.dev/not-precedent:
                    This is not assignmentMetadatum. --)"
              title: BatchCreateAssignmentMetadataRequest
              required:
              - requests
              additionalProperties: false
              description: BatchCreateAssignmentMetadataRequest is a request to update
                or insert a new assignment_metadata.
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.BatchCreateAssignmentMetadataResponse'
  ? /tcn/omni/conversations/v1alpha1/orgs/{org}/conversations/{conversation}/users/{user}/assignments/{assignment}/assignmentMetadata/{assignmentMetadata}
  : get:
      tags:
      - ConversationService
      summary: GetAssignmentMetadata
      description: GetAssignmentMetadata retrieves metadata for a conversation.
      operationId: ConversationService_GetAssignmentMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      - name: assignment
        in: path
        description: The assignment id.
        required: true
        schema:
          type: string
      - name: assignmentMetadata
        in: path
        description: The assignmentMetadata id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata'
  /tcn/omni/dispositions/v1alpha1/orgs/{org}/dispositions:
    get:
      tags:
      - DispositionService
      summary: ListDispositions
      description: Method to list dispositions
      operationId: DispositionService_ListDispositions
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.ListDispositionsResponse'
  /tcn/omni/dispositions/v1alpha1/orgs/{org}/dispositions/{disposition}:
    get:
      tags:
      - DispositionService
      summary: GetDisposition
      description: Method to get disposition
      operationId: DispositionService_GetDisposition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: disposition
        in: path
        description: The disposition id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
  /tcn/omni/disposition/v1alpha1/orgs/{org}/dispositions:
    post:
      tags:
      - DispositionService
      summary: CreateDisposition
      description: Method to create disposition
      operationId: DispositionService_CreateDisposition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the disposition to be created
        content:
          application/json:
            schema:
              title: disposition
              description: the disposition to be created
              $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
  /tcn/omni/disposition/v1alpha1/orgs/{org}/dispositions/{disposition}:
    delete:
      tags:
      - DispositionService
      summary: DeleteDisposition
      description: method to delete a disposition
      operationId: DispositionService_DeleteDisposition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: disposition
        in: path
        description: The disposition id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
    patch:
      tags:
      - DispositionService
      summary: UpdateDisposition
      description: method to update a disposition
      operationId: DispositionService_UpdateDisposition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: disposition
        in: path
        description: The disposition id.
        required: true
        schema:
          type: string
      requestBody:
        description: the disposition we are updating
        content:
          application/json:
            schema:
              title: disposition
              description: the disposition we are updating
              $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
  /tcn/omni/eventlog/v1alpha1:processOmniEventLog:
    post:
      tags:
      - EventlogService
      summary: ProcessOmniEventLog
      description: Process an Omni Event Log
      operationId: EventlogService_ProcessOmniEventLog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.eventlog.v1alpha1.ProcessOmniEventLogRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.eventlog.v1alpha1.ProcessOmniEventLogResponse'
  /tcn/omni/message/v1alpha1/orgs/{org}/campaigns/{campaign}/conversations/{conversation}/messages:
    get:
      tags:
      - MessageService
      summary: ListMessages
      description: method to list messages
      operationId: MessageService_ListMessages
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: campaign
        in: path
        description: The campaign id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      - name: filter
        in: query
        description: filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.message.v1alpha1.ListMessagesResponse'
  /tcn/omni/message/v1alpha1/orgs/{org}/campaigns/{campaign}/conversations/{conversation}/messages/{message}:
    get:
      tags:
      - MessageService
      summary: GetMessage
      description: method to get message
      operationId: MessageService_GetMessage
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: campaign
        in: path
        description: The campaign id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: message
        in: path
        description: The message id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message'
  /tcn/omni/message/v1alpha1/orgs/{org}/campaigns/{campaign}/conversations/{conversation}/messages:stream:
    get:
      tags:
      - MessageService
      summary: StreamMessages
      description: method to stream messages
      operationId: MessageService_StreamMessages
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: campaign
        in: path
        description: The campaign id.
        required: true
        schema:
          type: string
      - name: conversation
        in: path
        description: The conversation id.
        required: true
        schema:
          type: string
      - name: conversation
        in: query
        description: the name of the conversation to stream messages for
        required: true
        schema:
          type: string
          title: conversation
          description: the name of the conversation to stream messages for
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.message.v1alpha1.StreamMessagesResponse'
  /tcn/omni/message/v1alpha1/orgs/{org}/messages:send:
    post:
      tags:
      - MessageService
      summary: SendMessage
      description: sends a message
      operationId: MessageService_SendMessage
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.message.v1alpha1.SendMessageResponse'
  /tcn/omni/msgtextcleaner/v1alpha1:cleanMsgTexts:
    post:
      tags:
      - MsgTextCleanerService
      summary: CleanMsgTexts
      description: "Cleans msg texts.\n Caller specifies the channel type, determining
        the actions performed to clean the texts."
      operationId: MsgTextCleanerService_CleanMsgTexts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.msgtextcleaner.v1alpha1.CleanMsgTextsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.msgtextcleaner.v1alpha1.CleanMsgTextsResponse'
  /tcn/omni/msgtextcleaner/v1alpha1:cleanStoredMsgTexts:
    post:
      tags:
      - MsgTextCleanerService
      summary: CleanStoredMsgTexts
      description: "Cleans stored msg texts.\n Caller specifies the channel type,
        determining the actions performed to clean the stored texts."
      operationId: MsgTextCleanerService_CleanStoredMsgTexts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.msgtextcleaner.v1alpha1.CleanStoredMsgTextsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.msgtextcleaner.v1alpha1.CleanStoredMsgTextsResponse'
  /tcn/omni/oauth/v1alpha1/orgs/{org}/oauthConfigs:
    get:
      tags:
      - OauthService
      summary: ListOauthConfigs
      description: Method to list oauthConfigs
      operationId: OauthService_ListOauthConfigs
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.oauth.v1alpha1.ListOauthConfigsResponse'
  /tcn/omni/oauth/v1alpha1/orgs/{org}/oauthConfigs/{oauthConfig}:
    get:
      tags:
      - OauthService
      summary: GetOauthConfig
      description: Method to get oauthConfig
      operationId: OauthService_GetOauthConfig
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: oauthConfig
        in: path
        description: The oauthConfig id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.oauth.v1alpha1.OauthConfig'
    patch:
      tags:
      - OauthService
      summary: UpdateOauthConfig
      description: method to update an oauth config
      operationId: OauthService_UpdateOauthConfig
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: oauthConfig
        in: path
        description: The oauthConfig id.
        required: true
        schema:
          type: string
      requestBody:
        description: the oauth config we are updating
        content:
          application/json:
            schema:
              title: oauth_config
              description: the oauth config we are updating
              $ref: '#/components/schemas/tcn.omni.oauth.v1alpha1.OauthConfig'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.oauth.v1alpha1.OauthConfig'
  /tcn/omni/p3scheduler/v1alpha1/orgs/{org}/region/{region}/campaignScheduleDetails/{campaignScheduleDetail}:scheduleCampaign:
    get:
      tags:
      - P3SchedulerService
      summary: ScheduleCampaign
      description: Defines a Remote Procedure Call (RPC) named ScheduleCampaign.
      operationId: P3SchedulerService_ScheduleCampaign
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: campaignScheduleDetail
        in: path
        description: The campaignScheduleDetail id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.p3scheduler.v1alpha1.ScheduleCampaignResponse'
  /tcn/omni/project/v1alpha1/orgs/{org}/projects:
    get:
      tags:
      - ProjectService
      summary: ListProjects
      description: Method to list projects
      operationId: ProjectService_ListProjects
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.project.v1alpha1.ListProjectsResponse'
    post:
      tags:
      - ProjectService
      summary: CreateProject
      description: Method to create a project
      operationId: ProjectService_CreateProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the project to be created
        content:
          application/json:
            schema:
              title: project
              description: the project to be created
              $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
  /tcn/omni/project/v1alpha1/orgs/{org}/projects/{project}:
    get:
      tags:
      - ProjectService
      summary: GetProject
      description: Method to get a rpoject
      operationId: ProjectService_GetProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
    delete:
      tags:
      - ProjectService
      summary: DeleteProject
      description: Method to delete a project
      operationId: ProjectService_DeleteProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
    patch:
      tags:
      - ProjectService
      summary: UpdateProject
      description: Method to update a project
      operationId: ProjectService_UpdateProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      requestBody:
        description: the project to be updated
        content:
          application/json:
            schema:
              title: project
              description: the project to be updated
              $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
  /tcn/omni/routingrule/v1alpha1/orgs/{org}/routingRules:
    get:
      tags:
      - RoutingRuleService
      summary: ListRoutingRules
      description: method to list routing rules
      operationId: RoutingRuleService_ListRoutingRules
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      - name: filter
        in: query
        description: filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.ListRoutingRulesResponse'
    post:
      tags:
      - RoutingRuleService
      summary: CreateRoutingRule
      description: method to create a routing rule
      operationId: RoutingRuleService_CreateRoutingRule
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the routing rule to be created
        content:
          application/json:
            schema:
              title: routing_rule
              description: the routing rule to be created
              $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.RoutingRule'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.RoutingRule'
  /tcn/omni/routingrule/v1alpha1/orgs/{org}/routingRules/{routingRule}:
    get:
      tags:
      - RoutingRuleService
      summary: GetRoutingRule
      description: method to get a routing rule
      operationId: RoutingRuleService_GetRoutingRule
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: routingRule
        in: path
        description: The routingRule id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.RoutingRule'
    delete:
      tags:
      - RoutingRuleService
      summary: DeleteRoutingRule
      description: method to delete a routing rule
      operationId: RoutingRuleService_DeleteRoutingRule
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: routingRule
        in: path
        description: The routingRule id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.RoutingRule'
    patch:
      tags:
      - RoutingRuleService
      summary: UpdateRoutingRule
      description: method to update a routing rule
      operationId: RoutingRuleService_UpdateRoutingRule
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: routingRule
        in: path
        description: The routingRule id.
        required: true
        schema:
          type: string
      requestBody:
        description: the routing rule we are updating
        content:
          application/json:
            schema:
              title: routing_rule
              description: the routing rule we are updating
              $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.RoutingRule'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.RoutingRule'
  /tcn/omni/sendgrid/v1alpha1:performSendgridAccountChecks:
    post:
      tags:
      - SendgridService
      summary: PerformSendgridAccountChecks
      description: Perform sendgrid account checks
      operationId: SendgridService_PerformSendgridAccountChecks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.omni.sendgrid.v1alpha1.PerformSendgridAccountChecksRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.sendgrid.v1alpha1.PerformSendgridAccountChecksResponse'
  /tcn/omni/signatures/v1alpha1/orgs/{org}/signatures:
    get:
      tags:
      - SignatureService
      summary: ListSignatures
      description: Method to list signatures
      operationId: SignatureService_ListSignatures
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.ListSignaturesResponse'
    post:
      tags:
      - SignatureService
      summary: CreateSignature
      description: Method to create a signature
      operationId: SignatureService_CreateSignature
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the signature to be created
        content:
          application/json:
            schema:
              title: signature
              description: the signature to be created
              $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
  /tcn/omni/signatures/v1alpha1/orgs/{org}/signatures/{signature}:
    get:
      tags:
      - SignatureService
      summary: GetSignature
      description: Method to get signature
      operationId: SignatureService_GetSignature
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: signature
        in: path
        description: The signature id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
  /tcn/omni/signature/v1alpha1/orgs/{org}/signatures/{signature}:
    delete:
      tags:
      - SignatureService
      summary: DeleteSignature
      description: Method to delete a signature
      operationId: SignatureService_DeleteSignature
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: signature
        in: path
        description: The signature id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
    patch:
      tags:
      - SignatureService
      summary: UpdateSignature
      description: Method to update a signature
      operationId: SignatureService_UpdateSignature
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: signature
        in: path
        description: The signature id.
        required: true
        schema:
          type: string
      requestBody:
        description: the signature we are updating
        content:
          application/json:
            schema:
              title: signature
              description: the signature we are updating
              $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
  /tcn/omni/smsnumber/v1alpha1/orgs/{org}/smsNumbers:
    get:
      tags:
      - SmsNumberService
      summary: ListSmsNumbers
      description: method to list sms number
      operationId: SmsNumberService_ListSmsNumbers
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      - name: filter
        in: query
        description: filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.smsnumber.v1alpha1.ListSmsNumbersResponse'
  /tcn/omni/smsnumber/v1alpha1/orgs/{org}/smsNumbers/{smsNumber}:
    get:
      tags:
      - SmsNumberService
      summary: GetSmsNumber
      description: method to get sms number
      operationId: SmsNumberService_GetSmsNumber
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: smsNumber
        in: path
        description: The smsNumber id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.smsnumber.v1alpha1.SmsNumber'
  /tcn/omni/task/v1alpha1/orgs/{org}/tasks:
    get:
      tags:
      - TaskService
      summary: ListTasks
      description: method to list tasks
      operationId: TaskService_ListTasks
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      - name: filter
        in: query
        description: filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) filter
      - name: order_by
        in: query
        description: order by
        schema:
          type: string
          title: order_by
          description: (OPTIONAL) order by
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.task.v1alpha1.ListTasksResponse'
  /tcn/omni/task/v1alpha1/orgs/{org}/tasks/{task}:
    get:
      tags:
      - TaskService
      summary: GetTask
      description: method to get task
      operationId: TaskService_GetTask
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: task
        in: path
        description: The task id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task'
  /tcn/omni/taskcounts/v1alpha1/orgs/{org}/projects/{project}/campaigns/{campaign}/taskCounts:
    get:
      tags:
      - TaskCountsService
      summary: ListTaskCounts
      description: method to list taskcounts
      operationId: TaskCountsService_ListTaskCounts
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: campaign
        in: path
        description: The campaign id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.taskcounts.v1alpha1.ListTaskCountsResponse'
  /tcn/omni/taskcounts/v1alpha1/orgs/{org}/projects/{project}/campaigns/{campaign}/taskCounts/{taskCount}:
    get:
      tags:
      - TaskCountsService
      summary: GetTaskCounts
      description: method to get taskcounts
      operationId: TaskCountsService_GetTaskCounts
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: campaign
        in: path
        description: The campaign id.
        required: true
        schema:
          type: string
      - name: taskCount
        in: path
        description: The taskCount id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.taskcounts.v1alpha1.TaskCounts'
  /tcn/omni/unsubscribelinks/v1alpha1/orgs/{org}/unsubscribeLinks:
    get:
      tags:
      - UnsubscribeLinkService
      summary: ListUnsubscribeLinks
      description: Method to list unsubscribe links
      operationId: UnsubscribeLinkService_ListUnsubscribeLinks
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.ListUnsubscribeLinksResponse'
    post:
      tags:
      - UnsubscribeLinkService
      summary: CreateUnsubscribeLink
      description: Method to create unsubscribe link
      operationId: UnsubscribeLinkService_CreateUnsubscribeLink
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the unsubscribe link to be created
        content:
          application/json:
            schema:
              title: unsubscribe_link
              description: the unsubscribe link to be created
              $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
  /tcn/omni/unsubscribelinks/v1alpha1/orgs/{org}/unsubscribeLinks/{unsubscribeLink}:
    get:
      tags:
      - UnsubscribeLinkService
      summary: GetUnsubscribeLink
      description: Method to get unsubscribe link
      operationId: UnsubscribeLinkService_GetUnsubscribeLink
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: unsubscribeLink
        in: path
        description: The unsubscribeLink id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
    delete:
      tags:
      - UnsubscribeLinkService
      summary: DeleteUnsubscribeLink
      description: Method to delete unsubscribe link
      operationId: UnsubscribeLinkService_DeleteUnsubscribeLink
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: unsubscribeLink
        in: path
        description: The unsubscribeLink id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
    patch:
      tags:
      - UnsubscribeLinkService
      summary: UpdateUnsubscribeLink
      description: Method to update unsubscribe link
      operationId: UnsubscribeLinkService_UpdateUnsubscribeLink
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: unsubscribeLink
        in: path
        description: The unsubscribeLink id.
        required: true
        schema:
          type: string
      requestBody:
        description: the unsubscribe link to be updated
        content:
          application/json:
            schema:
              title: unsubscribe_link
              description: the unsubscribe link to be updated
              $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
  /tcn/omni/verifiedemail/v1alpha1/orgs/{org}/verifiedEmails:
    get:
      tags:
      - VerifiedEmailService
      summary: ListVerifiedEmails
      description: method to list verified email
      operationId: VerifiedEmailService_ListVerifiedEmails
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      - name: filter
        in: query
        description: filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.ListVerifiedEmailsResponse'
  /tcn/omni/verifiedemail/v1alpha1/orgs/{org}/verifiedEmails/{verifiedEmail}:
    get:
      tags:
      - VerifiedEmailService
      summary: GetVerifiedEmail
      description: method to get verified email
      operationId: VerifiedEmailService_GetVerifiedEmail
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: verifiedEmail
        in: path
        description: The verifiedEmail id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
    patch:
      tags:
      - VerifiedEmailService
      summary: UpdateVerifiedEmail
      description: method to update verified email
      operationId: VerifiedEmailService_UpdateVerifiedEmail
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: verifiedEmail
        in: path
        description: The verifiedEmail id.
        required: true
        schema:
          type: string
      requestBody:
        description: the verified email we are updating
        content:
          application/json:
            schema:
              title: verified_email
              description: the verified email we are updating
              $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
  /tcn/omni/verifiedemail/v1alpha/orgs/{org}/verifiedEmails:
    post:
      tags:
      - VerifiedEmailService
      summary: CreateVerifiedEmail
      description: Method to create a verified email
      operationId: VerifiedEmailService_CreateVerifiedEmail
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the verified email to be created
        content:
          application/json:
            schema:
              title: verified_email
              description: the verified email to be created
              $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
  /tcn/omni/verifiedemail/v1alpha/orgs/{org}/verifiedEmails/{verifiedEmail}:
    delete:
      tags:
      - VerifiedEmailService
      summary: DeleteVerifiedEmail
      description: method to delete verified email
      operationId: VerifiedEmailService_DeleteVerifiedEmail
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: verifiedEmail
        in: path
        description: The verifiedEmail id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
  /tcn/omni/verifiedemail/v1alpha1/orgs/{org}/verifiedEmails/{verifiedEmail}:resend:
    get:
      tags:
      - VerifiedEmailService
      summary: ResendVerifiedEmail
      description: method to resend the verification email
      operationId: VerifiedEmailService_ResendVerifiedEmail
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: verifiedEmail
        in: path
        description: The verifiedEmail id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.ResendVerifiedEmailResponse'
  /tcn/omni/whatsappnumber/v1alpha1/orgs/{org}/whatsAppNumbers:
    get:
      tags:
      - WhatsAppNumberService
      summary: ListWhatsAppNumbers
      description: method to list whatsApp number
      operationId: WhatsAppNumberService_ListWhatsAppNumbers
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: page size
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
      - name: page_token
        in: query
        description: page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      - name: filter
        in: query
        description: filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.whatsappnumber.v1alpha1.ListWhatsAppNumbersResponse'
  /tcn/omni/whatsappnumber/v1alpha1/orgs/{org}/whatsAppNumbers/{whatsAppNumber}:
    get:
      tags:
      - WhatsAppNumberService
      summary: GetWhatsAppNumber
      description: method to get whatsApp number
      operationId: WhatsAppNumberService_GetWhatsAppNumber
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: whatsAppNumber
        in: path
        description: The whatsAppNumber id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.omni.whatsappnumber.v1alpha1.WhatsAppNumber'
  /tcn/org/agentProfileGroups/v1alpha1/orgs/{org}/agentProfileGroups/{agentProfileGroup}:
    get:
      tags:
      - AgentProfileGroupsService
      summary: GetAgentProfileGroup
      description: Method to get an agent profile group
      operationId: AgentProfileGroupsService_GetAgentProfileGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: agentProfileGroup
        in: path
        description: The agentProfileGroup id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.agentprofilegroups.v1alpha1.AgentProfileGroup'
    delete:
      tags:
      - AgentProfileGroupsService
      summary: DeleteAgentProfileGroup
      description: Method to delete an agent profile group
      operationId: AgentProfileGroupsService_DeleteAgentProfileGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: agentProfileGroup
        in: path
        description: The agentProfileGroup id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
    patch:
      tags:
      - AgentProfileGroupsService
      summary: UpdateAgentProfileGroup
      description: Method to update an agent profile group
      operationId: AgentProfileGroupsService_UpdateAgentProfileGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: agentProfileGroup
        in: path
        description: The agentProfileGroup id.
        required: true
        schema:
          type: string
      requestBody:
        description: agent profile group to update
        content:
          application/json:
            schema:
              title: agent_profile_group
              description: agent profile group to update
              $ref: '#/components/schemas/tcn.org.agentprofilegroups.v1alpha1.AgentProfileGroup'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.agentprofilegroups.v1alpha1.AgentProfileGroup'
  /tcn/org/agentProfileGroups/v1alpha1/orgs/{org}/agentProfileGroups:
    get:
      tags:
      - AgentProfileGroupsService
      summary: ListAgentProfileGroups
      description: Method to list agent profile groups
      operationId: AgentProfileGroupsService_ListAgentProfileGroups
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: Returned page.
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
      - name: page_token
        in: query
        description: Used to specify the page token.
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      - name: filter
        in: query
        description: The filter to apply to list results.
        schema:
          type: string
          title: filter
          description: (OPTIONAL) The filter to apply to list results.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.agentprofilegroups.v1alpha1.ListAgentProfileGroupsResponse'
    post:
      tags:
      - AgentProfileGroupsService
      summary: CreateAgentProfileGroup
      description: Method to create an agent profile group
      operationId: AgentProfileGroupsService_CreateAgentProfileGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: agent profile group to create
        content:
          application/json:
            schema:
              title: agent_profile_group
              description: agent profile group to create
              $ref: '#/components/schemas/tcn.org.agentprofilegroups.v1alpha1.AgentProfileGroup'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.agentprofilegroups.v1alpha1.AgentProfileGroup'
  /tcn/org/agentProfileGroups/v1alpha1/orgs/{org}/agentProfileGroups/{agentProfileGroup}:assign:
    post:
      tags:
      - AgentProfileGroupsService
      summary: AssignAgentProfileGroup
      description: Method to Assign an agent profile group to one or more users
      operationId: AgentProfileGroupsService_AssignAgentProfileGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: agentProfileGroup
        in: path
        description: The agentProfileGroup id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_ids:
                  type: array
                  items:
                    type: string
                  title: user_ids
                  description: users to assign the agent profile group
              title: AssignAgentProfileGroupRequest
              required:
              - user_ids
              additionalProperties: false
              description: request message AssignAgentProfileGroupRequest
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.agentprofilegroups.v1alpha1.AssignAgentProfileGroupResponse'
  /tcn/org/billing/billingplan/v1alpha5/orgs/{org}/billingPlans/{billingPlan}:apply:
    post:
      tags:
      - BillingPlanService
      summary: ApplyBillingPlanDraft
      description: "ApplyBillingPlanDraft applies an ORG billing plan draft to a billing
        cycle, making a new active ORG billing\n plan for the cycle using the draft
        as the template.\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid, or the plan is not a draft.\n
        \  - grpc.NotFound: The draft billing plan was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingPlanService_ApplyBillingPlanDraft
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  title: start_date
                  description: (OPTIONAL) the date when the applied billing plan will
                    become active, or null to apply immediately
                  $ref: '#/components/schemas/google.type.Date'
              title: ApplyBillingPlanDraftRequest
              additionalProperties: false
              description: ApplyBillingPlanDraftRequest -
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.ApplyBillingPlanDraftResponse'
  /tcn/org/billing/billingplan/v1alpha5/defaultBillingPlans/{defaultBillingPlan}:apply:
    post:
      tags:
      - BillingPlanService
      summary: ApplyDefaultBillingPlanDraft
      description: "ApplyDefaultBillingPlanDraft applies a default billing plan draft
        to a billing cycle, making a new active\n default billing plan for the cycle
        using the draft as the template. This will also propagate changes (excluding\n
        customized rates) for all ORG billing plans.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid,
        or the plan is not a draft.\n   - grpc.NotFound: The draft billing plan was
        not found.\n   - grpc.PermissionDenied: The caller does not have the required
        permissions.\n   - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingPlanService_ApplyDefaultBillingPlanDraft
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  title: start_date
                  description: (OPTIONAL) the date when the applied billing plan will
                    become active
                  $ref: '#/components/schemas/google.type.Date'
              title: ApplyDefaultBillingPlanDraftRequest
              additionalProperties: false
              description: ApplyDefaultBillingPlanDraftRequest -
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.ApplyDefaultBillingPlanDraftResponse'
  /tcn/org/billing/billingplan/v1alpha5/orgs/{org}/billingPlans/{billingPlan}:copy:
    post:
      tags:
      - BillingPlanService
      summary: CopyBillingPlan
      description: "CopyBillingPlan creates a duplicate of an ORG billing plan.\n
        Errors:\n   - grpc.AlreadyExits: A billing plan with the same title already
        exists.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingPlanService_CopyBillingPlan
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  title: title
                  description: the title of the billing plan being created.
              title: CopyBillingPlanRequest
              required:
              - title
              additionalProperties: false
              description: CopyBillingPlanRequest -
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.CopyBillingPlanResponse'
  /tcn/org/billing/billingplan/v1alpha5/defaultBillingPlans/{defaultBillingPlan}:copy:
    post:
      tags:
      - BillingPlanService
      summary: CopyDefaultBillingPlan
      description: "CopyDefaultBillingPlan creates a duplicate of a default billing
        plan.\n Errors:\n   - grpc.AlreadyExits: A billing plan with the same title
        already exists.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingPlanService_CopyDefaultBillingPlan
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  title: title
                  description: the title of the billing plan being created.
              title: CopyDefaultBillingPlanRequest
              required:
              - title
              additionalProperties: false
              description: CopyDefaultBillingPlanRequest -
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.CopyDefaultBillingPlanResponse'
  /tcn/org/billing/billingplan/v1alpha5/orgs/{org}/billingPlans:
    post:
      tags:
      - BillingPlanService
      summary: CreateBillingPlan
      description: "CreateBillingPlan creates a new ORG billing plan draft using the
        currently active ORG billing plan\n as the template (if available). If no
        ORG billing plan is available, it will use the default. If\n no default billing
        plan available, this will fail.\n Errors:\n   - grpc.AlreadyExits: A billing
        plan with the same title already exists.\n   - grpc.FailedPrecondition: The
        default billing plan is not available.\n   - grpc.Internal: An internal error
        occurred.\n   - grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingPlanService_CreateBillingPlan
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the billing plan to create.
        content:
          application/json:
            schema:
              title: billing_plan
              description: the billing plan to create.
              $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
  /tcn/org/billing/billingplan/v1alpha5/defaultBillingPlans:
    get:
      tags:
      - BillingPlanService
      summary: ListDefaultBillingPlans
      description: "ListDefaultBillingPlans lists default billing plans.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingPlanService_ListDefaultBillingPlans
      parameters:
      - name: page_size
        in: query
        description: "the maximum number of billing plans to return. If unspecified,
          at most 50 billing plans\n will be returned. The maximum value is 1000;
          values above 1000 will be coerced to 1000."
        schema:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of billing plans to return.
            If unspecified, at most 50 billing plans\n will be returned. The maximum
            value is 1000; values above 1000 will be coerced to 1000."
      - name: page_token
        in: query
        description: "a page token, received from a previous `ListDefaultBillingPlans`
          call. Provide this to retrieve\n the subsequent page. When paginating, all
          other parameters provided to `ListDefaultBillingPlans`\n must match the
          call that provided the page token."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListDefaultBillingPlans`
            call. Provide this to retrieve\n the subsequent page. When paginating,
            all other parameters provided to `ListDefaultBillingPlans`\n must match
            the call that provided the page token."
      - name: skip
        in: query
        description: the number of billing plans to skip.
        schema:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of billing plans to skip.
      - name: filter
        in: query
        description: filters the results
        schema:
          type: string
          title: filter
          description: (OPTIONAL) filters the results
      - name: order_by
        in: query
        description: orders the results
        schema:
          type: string
          title: order_by
          description: (OPTIONAL) orders the results
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.ListDefaultBillingPlansResponse'
    post:
      tags:
      - BillingPlanService
      summary: CreateDefaultBillingPlan
      description: "CreateDefaultBillingPlan creates a new default billing plan draft
        using the currently active default\n billing plan as the template (if available).
        If no default billing plan is available, this will create\n an empty default
        billing plan.\n Errors:\n   - grpc.AlreadyExits: A billing plan with the same
        title already exists.\n   - grpc.Internal: An internal error occurred.\n   -
        grpc.InvalidArgument: The request is invalid.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingPlanService_CreateDefaultBillingPlan
      requestBody:
        description: the default billing plan to create.
        content:
          application/json:
            schema:
              title: default_billing_plan
              description: the default billing plan to create.
              $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
  /tcn/org/billing/billingplan/v1alpha5/orgs/{org}/billingPlans/{billingPlan}:
    get:
      tags:
      - BillingPlanService
      summary: GetBillingPlan
      description: "GetBillingPlan gets an ORG billing plan.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The billing plan was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingPlanService_GetBillingPlan
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
    delete:
      tags:
      - BillingPlanService
      summary: DeleteBillingPlan
      description: "DeleteBillingPlan deletes an ORG billing plan draft.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid, or the plan is not a draft.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingPlanService_DeleteBillingPlan
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: allow_missing
        in: query
        description: "if set to true, and the billing plan is missing, the request
          will succeed\n but no action will be taken on the server."
        schema:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the billing plan is missing,
            the request will succeed\n but no action will be taken on the server."
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
    patch:
      tags:
      - BillingPlanService
      summary: UpdateBillingPlan
      description: "UpdateBillingPlan updates an ORG billing plan draft.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid, or the plan is not a draft.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingPlanService_UpdateBillingPlan
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        description: the billing plan to update.
        content:
          application/json:
            schema:
              title: billing_plan
              description: the billing plan to update.
              $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
  /tcn/org/billing/billingplan/v1alpha5/defaultBillingPlans/{defaultBillingPlan}:
    get:
      tags:
      - BillingPlanService
      summary: GetDefaultBillingPlan
      description: "GetDefaultBillingPlan gets a default billing plan.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingPlanService_GetDefaultBillingPlan
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
    delete:
      tags:
      - BillingPlanService
      summary: DeleteDefaultBillingPlan
      description: "DeleteDefaultBillingPlan deletes a default billing plan draft.\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid, or the plan is not a draft.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingPlanService_DeleteDefaultBillingPlan
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: allow_missing
        in: query
        description: "if set to true, and the billing plan is missing, the request
          will succeed\n but no action will be taken on the server."
        schema:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the billing plan is missing,
            the request will succeed\n but no action will be taken on the server."
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
    patch:
      tags:
      - BillingPlanService
      summary: UpdateDefaultBillingPlan
      description: "UpdateDefaultBillingPlan updates a default billing plan draft.\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid, or the plan is not a draft.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingPlanService_UpdateDefaultBillingPlan
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        description: the billing plan to update.
        content:
          application/json:
            schema:
              title: default_billing_plan
              description: the billing plan to update.
              $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
  /tcn/org/billing/billingplan/v1alpha5/org/{org}/billingPlans:
    get:
      tags:
      - BillingPlanService
      summary: ListBillingPlans
      description: "ListBillingPlans lists ORG billing plans.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingPlanService_ListBillingPlans
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: "the maximum number of billing plans to return. If unspecified,
          at most 50 billing plans\n will be returned. The maximum value is 1000;
          values above 1000 will be coerced to 1000."
        schema:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of billing plans to return.
            If unspecified, at most 50 billing plans\n will be returned. The maximum
            value is 1000; values above 1000 will be coerced to 1000."
      - name: page_token
        in: query
        description: "a page token, received from a previous `ListBillingPlans` call.
          Provide this to retrieve the\n subsequent page. When paginating, all other
          parameters provided to `ListBillingPlans` must\n match the call that provided
          the page token."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListBillingPlans`
            call. Provide this to retrieve the\n subsequent page. When paginating,
            all other parameters provided to `ListBillingPlans` must\n match the call
            that provided the page token."
      - name: skip
        in: query
        description: the number of billing plans to skip.
        schema:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of billing plans to skip.
      - name: filter
        in: query
        description: filters the results
        schema:
          type: string
          title: filter
          description: (OPTIONAL) filters the results
      - name: order_by
        in: query
        description: orders the results
        schema:
          type: string
          title: order_by
          description: (OPTIONAL) orders the results
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.ListBillingPlansResponse'
  /tcn/org/billing/billingtag/v1alpha5/billingTags:batchCreate:
    post:
      tags:
      - BillingTagService
      summary: BatchCreateBillingTags
      description: "BatchCreateBillingTags creates new billing tags.\n Errors:\n   -
        grpc.AlreadyExits: A billing tag with the same title already exists.\n   -
        grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument: The
        request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: BillingTagService_BatchCreateBillingTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BatchCreateBillingTagsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BatchCreateBillingTagsResponse'
  /tcn/org/billing/billingtag/v1alpha5/billingTags:
    get:
      tags:
      - BillingTagService
      summary: ListBillingTags
      description: "ListBillingTags lists billing tags.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingTagService_ListBillingTags
      parameters:
      - name: page_size
        in: query
        description: "the maximum number of billing tags to return. If unspecified,
          at most 50 billing tags\n will be returned. The maximum value is 1000; values
          above 1000 will be coerced to 1000."
        schema:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of billing tags to return. If
            unspecified, at most 50 billing tags\n will be returned. The maximum value
            is 1000; values above 1000 will be coerced to 1000."
      - name: page_token
        in: query
        description: "a page token, received from a previous `ListBillingTags` call.
          Provide this to retrieve the\n subsequent page. When paginating, all other
          parameters provided to `ListBillingTags` must\n match the call that provided
          the page token."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListBillingTags`
            call. Provide this to retrieve the\n subsequent page. When paginating,
            all other parameters provided to `ListBillingTags` must\n match the call
            that provided the page token."
      - name: skip
        in: query
        description: the number of billing tags to skip.
        schema:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of billing tags to skip.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.ListBillingTagsResponse'
    post:
      tags:
      - BillingTagService
      summary: CreateBillingTag
      description: "CreateBillingTag creates a new billing tag.\n Errors:\n   - grpc.AlreadyExits:
        A billing tag with the same title already exists.\n   - grpc.Internal: An
        internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: BillingTagService_CreateBillingTag
      requestBody:
        description: the billing tag to create.
        content:
          application/json:
            schema:
              title: billing_tag
              description: the billing tag to create.
              $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag'
  /tcn/org/billing/billingtag/v1alpha5/billingTags/{billingTag}:
    get:
      tags:
      - BillingTagService
      summary: GetBillingTag
      description: "GetBillingTag gets a billing tag.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The billing tag does not exist.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: BillingTagService_GetBillingTag
      parameters:
      - name: billingTag
        in: path
        description: The billingTag id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag'
  /tcn/org/billing/events/v1alpha5/processEventsJobs:
    get:
      tags:
      - EventService
      summary: ListProcessEventsJobs
      description: "ListProcessEventsJobs lists ProcessEventsJobs.\n Errors:\n   -
        grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument: The
        request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: EventService_ListProcessEventsJobs
      parameters:
      - name: page_size
        in: query
        description: "the maximum number of matching rules to return. If unspecified,
          at most 50 jobs will be\n returned. The maximum value is 1000; values above
          1000 will be coerced to 1000."
        schema:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of matching rules to return.
            If unspecified, at most 50 jobs will be\n returned. The maximum value
            is 1000; values above 1000 will be coerced to 1000."
      - name: page_token
        in: query
        description: "a page token, received from a previous `ListProcessEventsJobsRequest`
          call. Provide this\n to retrieve the subsequent page. When paginating, all
          other parameters provided to\n `ListProcessEventsJobsRequest` must match
          the call that provided the page token."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListProcessEventsJobsRequest`
            call. Provide this\n to retrieve the subsequent page. When paginating,
            all other parameters provided to\n `ListProcessEventsJobsRequest` must
            match the call that provided the page token."
      - name: skip
        in: query
        description: the number of jobs to skip.
        schema:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of jobs to skip.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.ListProcessEventsJobsResponse'
    post:
      tags:
      - EventService
      summary: CreateProcessEventsJob
      description: "CreateProcessEventsJob creates a new ProcessEventsJob.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: EventService_CreateProcessEventsJob
      requestBody:
        description: the process events job to be created.
        content:
          application/json:
            schema:
              title: process_events_job
              description: the process events job to be created.
              $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.ProcessEventsJob'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.ProcessEventsJob'
  /tcn/org/billing/events/v1alpha5/processEventsJobs/{processEventsJob}:
    get:
      tags:
      - EventService
      summary: GetProcessEventsJob
      description: "GetProcessEventsJob gets a ProcessEventsJob.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The job does not exist.\n   - grpc.PermissionDenied: The
        caller does not have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable."
      operationId: EventService_GetProcessEventsJob
      parameters:
      - name: processEventsJob
        in: path
        description: The processEventsJob id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.ProcessEventsJob'
    delete:
      tags:
      - EventService
      summary: DeleteProcessEventsJob
      description: "DeleteProcessEventsJob deletes a ProcessEventsJob.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The job does not exist.\n   -
        grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: EventService_DeleteProcessEventsJob
      parameters:
      - name: processEventsJob
        in: path
        description: The processEventsJob id.
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: if set to true, all executions of the job will also be deleted.
        schema:
          type: boolean
          title: force
          description: (OPTIONAL) if set to true, all executions of the job will also
            be deleted.
      - name: allow_missing
        in: query
        description: "if set to true, and the job is missing, the request will succeed\n
          but no action will be taken on the server."
        schema:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the job is missing, the request
            will succeed\n but no action will be taken on the server."
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
  /tcn/org/billing/events/v1alpha5/processEventsJobs/{processEventsJob}:run:
    post:
      tags:
      - EventService
      summary: RunProcessEventsJob
      description: "RunProcessEventsJob runs a ProcessEventsJob.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The job does not exist.\n   - grpc.PermissionDenied: The
        caller does not have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable."
      operationId: EventService_RunProcessEventsJob
      parameters:
      - name: processEventsJob
        in: path
        description: The processEventsJob id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.longrunning.Operation'
  /tcn/org/billing/invoice/v1alpha5:generateInvoice:
    post:
      tags:
      - InvoiceService
      summary: GenerateInvoice
      description: Generates an invoice for a billing cycle.
      operationId: InvoiceService_GenerateInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.billing.invoice.v1alpha5.GenerateInvoiceRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.invoice.v1alpha5.GenerateInvoiceResponse'
  /tcn/org/billing/matchingrule/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/draftMatchingRules:batchDelete:
    post:
      tags:
      - MatchingRuleService
      summary: BatchDeleteDraftMatchingRules
      description: "BatchDeleteDraftMatchingRules deletes multiple draft MatchingRules.\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The matching rules were not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: MatchingRuleService_BatchDeleteDraftMatchingRules
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                names:
                  type: array
                  items:
                    type: string
                  title: names
                  description: "the names of the matching rules to be deleted.\n a
                    maximum of 1000 matching rules can be deleted in a single request.\n
                    Format: defaultBillingPlans/{defaultBillingPlan}/draftMatchingRules/{draftMatchingRule}"
                allow_missing:
                  type: boolean
                  title: allow_missing
                  description: "(OPTIONAL) if set to true, and the matching rule is
                    missing, the request will succeed\n but no action will be taken
                    on the server."
              title: BatchDeleteDraftMatchingRulesRequest
              required:
              - names
              additionalProperties: false
              description: BatchDeleteDraftMatchingRulesRequest -
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
  /tcn/org/billing/matchingrule/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/draftMatchingRules:
    get:
      tags:
      - MatchingRuleService
      summary: ListDraftMatchingRules
      description: "ListDraftMatchingRules lists draft MatchingRules.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: MatchingRuleService_ListDraftMatchingRules
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: "the maximum number of matching rules to return. If unspecified,
          at most 50 matching rules\n will be returned. The maximum value is 1000;
          values above 1000 will be coerced to 1000."
        schema:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of matching rules to return.
            If unspecified, at most 50 matching rules\n will be returned. The maximum
            value is 1000; values above 1000 will be coerced to 1000."
      - name: page_token
        in: query
        description: "a page token, received from a previous `ListDraftMatchingRules`
          call. Provide this to retrieve\n the subsequent page. When paginating, all
          other parameters provided to `ListDraftMatchingRules`\n must match the call
          that provided the page token."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListDraftMatchingRules`
            call. Provide this to retrieve\n the subsequent page. When paginating,
            all other parameters provided to `ListDraftMatchingRules`\n must match
            the call that provided the page token."
      - name: skip
        in: query
        description: the number of matching rules to skip.
        schema:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of matching rules to skip.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.ListDraftMatchingRulesResponse'
    post:
      tags:
      - MatchingRuleService
      summary: CreateDraftMatchingRule
      description: "CreateDraftMatchingRule creates a new draft MatchingRule.\n Errors:\n
        \  - grpc.AlreadyExits: A matching rule with the same configuration already
        exists.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: MatchingRuleService_CreateDraftMatchingRule
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        description: the matching rule to create.
        content:
          application/json:
            schema:
              title: draft_matching_rule
              description: the matching rule to create.
              $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
  /tcn/org/billing/matchingrule/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/draftMatchingRules/{draftMatchingRule}:
    get:
      tags:
      - MatchingRuleService
      summary: GetDraftMatchingRule
      description: "GetDraftMatchingRule gets a draft MatchingRule.\n Errors:\n   -
        grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument: The
        request is invalid.\n   - grpc.NotFound: The matching rule was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: MatchingRuleService_GetDraftMatchingRule
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: draftMatchingRule
        in: path
        description: The draftMatchingRule id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
    delete:
      tags:
      - MatchingRuleService
      summary: DeleteDraftMatchingRule
      description: "DeleteDraftMatchingRule deletes a draft MatchingRule.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The matching rule was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: MatchingRuleService_DeleteDraftMatchingRule
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: draftMatchingRule
        in: path
        description: The draftMatchingRule id.
        required: true
        schema:
          type: string
      - name: allow_missing
        in: query
        description: "if set to true, and the matching rule is missing, the request
          will succeed\n but no action will be taken on the server."
        schema:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the matching rule is missing,
            the request will succeed\n but no action will be taken on the server."
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
  /tcn/org/billing/matchingrule/v1alpha5/orgs/{org}/billingPlans/{billingPlan}/draftMatchingRules/{draftMatchingRule}:
    get:
      tags:
      - MatchingRuleService
      summary: GetDraftMatchingRule
      description: "GetDraftMatchingRule gets a draft MatchingRule.\n Errors:\n   -
        grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument: The
        request is invalid.\n   - grpc.NotFound: The matching rule was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: MatchingRuleService_GetDraftMatchingRule2
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: draftMatchingRule
        in: path
        description: The draftMatchingRule id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
  /tcn/org/billing/matchingrule/v1alpha5/matchingRules/{matchingRule}:
    get:
      tags:
      - MatchingRuleService
      summary: GetMatchingRule
      description: "GetMatchingRule gets a MatchingRule.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The matching rule was not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: MatchingRuleService_GetMatchingRule
      parameters:
      - name: matchingRule
        in: path
        description: The matchingRule id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.MatchingRule'
  /tcn/org/billing/matchingrule/v1alpha5/orgs/{org}/billingPlans/{billingPlan}/draftMatchingRules:
    get:
      tags:
      - MatchingRuleService
      summary: ListDraftMatchingRules
      description: "ListDraftMatchingRules lists draft MatchingRules.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: MatchingRuleService_ListDraftMatchingRules2
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: "the maximum number of matching rules to return. If unspecified,
          at most 50 matching rules\n will be returned. The maximum value is 1000;
          values above 1000 will be coerced to 1000."
        schema:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of matching rules to return.
            If unspecified, at most 50 matching rules\n will be returned. The maximum
            value is 1000; values above 1000 will be coerced to 1000."
      - name: page_token
        in: query
        description: "a page token, received from a previous `ListDraftMatchingRules`
          call. Provide this to retrieve\n the subsequent page. When paginating, all
          other parameters provided to `ListDraftMatchingRules`\n must match the call
          that provided the page token."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListDraftMatchingRules`
            call. Provide this to retrieve\n the subsequent page. When paginating,
            all other parameters provided to `ListDraftMatchingRules`\n must match
            the call that provided the page token."
      - name: skip
        in: query
        description: the number of matching rules to skip.
        schema:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of matching rules to skip.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.ListDraftMatchingRulesResponse'
  /tcn/org/billing/matchingrule/v1alpha5/matchingRules:
    get:
      tags:
      - MatchingRuleService
      summary: ListMatchingRules
      description: "ListMatchingRules lists MatchingRules.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: MatchingRuleService_ListMatchingRules
      parameters:
      - name: page_size
        in: query
        description: "the maximum number of matching rules to return. If unspecified,
          at most 50 matching rules\n will be returned. The maximum value is 1000;
          values above 1000 will be coerced to 1000."
        schema:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of matching rules to return.
            If unspecified, at most 50 matching rules\n will be returned. The maximum
            value is 1000; values above 1000 will be coerced to 1000."
      - name: page_token
        in: query
        description: "a page token, received from a previous `ListMatchingRules` call.
          Provide this to retrieve the\n subsequent page. When paginating, all other
          parameters provided to `ListMatchingRules` must\n match the call that provided
          the page token."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListMatchingRules`
            call. Provide this to retrieve the\n subsequent page. When paginating,
            all other parameters provided to `ListMatchingRules` must\n match the
            call that provided the page token."
      - name: skip
        in: query
        description: the number of matching rules to skip.
        schema:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of matching rules to skip.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.ListMatchingRulesResponse'
  /tcn/org/billing/matchingrule/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/matchingRules/{matchingRule}:
    patch:
      tags:
      - MatchingRuleService
      summary: UpdateDraftMatchingRule
      description: "UpdateDraftMatchingRule updates a draft MatchingRule.\n Errors:\n
        \  - grpc.AlreadyExists: A matching rule with the same configuration already
        exists.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The matching rule was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: MatchingRuleService_UpdateDraftMatchingRule
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: matchingRule
        in: path
        description: The matchingRule id.
        required: true
        schema:
          type: string
      requestBody:
        description: the matching rule to update.
        content:
          application/json:
            schema:
              title: draft_matching_rule
              description: the matching rule to update.
              $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
  /tcn/org/billing/ratedefinition/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/defaultRateDefinitions:batchCreate:
    post:
      tags:
      - RateDefinitionService
      summary: BatchCreateDefaultRateDefinitions
      description: "BatchCreateDefaultRateDefinitions creates multiple default draft
        rate definitions.\n Errors:\n   - grpc.AlreadyExists: A rate already exists
        for the specified SKU.\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        billing plan was not found.\n   - grpc.PermissionDenied: The caller does not
        have the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: RateDefinitionService_BatchCreateDefaultRateDefinitions
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requests:
                  type: array
                  items:
                    $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.CreateDefaultRateDefinitionRequest'
                  title: requests
                  description: "the default rate definitions to create.\n a maximum
                    of 1000 rate definitions can be created in a single request."
              title: BatchCreateDefaultRateDefinitionsRequest
              required:
              - requests
              additionalProperties: false
              description: BatchCreateDefaultRateDefinitionsRequest -
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.BatchCreateDefaultRateDefinitionsResponse'
  /tcn/org/billing/ratedefinition/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/defaultRateDefinitions:batchDelete:
    post:
      tags:
      - RateDefinitionService
      summary: BatchDeleteDefaultRateDefinitions
      description: "BatchDeleteDefaultRateDefinitions deletes multiple default draft
        rate definitions.\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        rates were not found.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: RateDefinitionService_BatchDeleteDefaultRateDefinitions
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                names:
                  type: array
                  items:
                    type: string
                  title: names
                  description: "the names of the rate definitions to be deleted.\n
                    a maximum of 1000 rate definitions can be deleted in a single
                    request.\n Format: defaultBillingPlans/{default_billing_plan_id}/defaultRateDefinitions/{default_rate_definition_id}"
                allow_missing:
                  type: boolean
                  title: allow_missing
                  description: "(OPTIONAL) if set to true, and the rate definition
                    is missing, the request will succeed\n but no action will be taken
                    on the server."
              title: BatchDeleteDefaultRateDefinitionsRequest
              required:
              - names
              additionalProperties: false
              description: BatchDeleteDefaultRateDefinitionsRequest -
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
  /tcn/org/billing/ratedefinition/v1alpha5/orgs/{org}/billingPlans/{billingPlan}/rateDefinitions:batchReset:
    post:
      tags:
      - RateDefinitionService
      summary: BatchResetRateDefinitions
      description: "BatchResetRateDefinitions resets multiple draft rate definitions
        to their respective default rate definition value.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rates were not found.\n   - grpc.PermissionDenied:
        The caller does not have the required permissions.\n   - grpc.Unavailable:
        The operation is currently unavailable."
      operationId: RateDefinitionService_BatchResetRateDefinitions
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                names:
                  type: array
                  items:
                    type: string
                  title: names
                  description: "the names of the rate definitions to be reset.\n a
                    maximum of 1000 rate definitions can be reset in a single request.\n
                    Format: orgs/{org}/billingPlans/{billing_plan_id}/rateDefinitions/{rate_definition_id}"
                allow_missing:
                  type: boolean
                  title: allow_missing
                  description: "(OPTIONAL) if set to true, and the rate definition
                    is missing, the request will succeed\n but no action will be taken
                    on the server."
              title: BatchResetRateDefinitionsRequest
              required:
              - names
              additionalProperties: false
              description: BatchResetRateDefinitionsRequest -
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.BatchResetRateDefinitionsResponse'
  /tcn/org/billing/ratedefinition/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/defaultRateDefinitions:
    get:
      tags:
      - RateDefinitionService
      summary: ListDefaultRateDefinitions
      description: "ListDefaultRateDefinitions lists default rate definitions.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: RateDefinitionService_ListDefaultRateDefinitions
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: the maximum number of default rate definitions to return.
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) the maximum number of default rate definitions to
            return.
      - name: page_token
        in: query
        description: "a page token, received from a previous `ListDefaultRateDefinitions`
          call.\n Provide this to retrieve the subsequent page."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListDefaultRateDefinitions`
            call.\n Provide this to retrieve the subsequent page."
      - name: skip
        in: query
        description: the number of rate definitions to skip.
        schema:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of rate definitions to skip.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.ListDefaultRateDefinitionsResponse'
    post:
      tags:
      - RateDefinitionService
      summary: CreateDefaultRateDefinition
      description: "CreateDefaultRateDefinition creates a new default draft rate definition.\n
        Errors:\n   - grpc.AlreadyExists: A rate already exists for the specified
        SKU.\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The billing plan was not found.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: RateDefinitionService_CreateDefaultRateDefinition
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      requestBody:
        description: the default rate definition to create.
        content:
          application/json:
            schema:
              title: default_rate_definition
              description: the default rate definition to create.
              $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
  /tcn/org/billing/ratedefinition/v1alpha5/defaultBillingPlans/{defaultBillingPlan}/defaultRateDefinitions/{defaultRateDefinition}:
    get:
      tags:
      - RateDefinitionService
      summary: GetDefaultRateDefinition
      description: "GetDefaultRateDefinition gets a default rate definition.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate was not found.\n   -
        grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: RateDefinitionService_GetDefaultRateDefinition
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: defaultRateDefinition
        in: path
        description: The defaultRateDefinition id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
    delete:
      tags:
      - RateDefinitionService
      summary: DeleteDefaultRateDefinition
      description: "DeleteDefaultRateDefinition deletes a default draft rate definition.\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate was not found.\n   -
        grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: RateDefinitionService_DeleteDefaultRateDefinition
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: defaultRateDefinition
        in: path
        description: The defaultRateDefinition id.
        required: true
        schema:
          type: string
      - name: allow_missing
        in: query
        description: "if set to true, and the rate definition is missing, the request
          will succeed\n but no action will be taken on the server."
        schema:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the rate definition is missing,
            the request will succeed\n but no action will be taken on the server."
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
    patch:
      tags:
      - RateDefinitionService
      summary: UpdateDefaultRateDefinition
      description: "UpdateDefaultRateDefinition updates a default draft rate definition.\n
        Errors:\n   - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate was not found.\n   -
        grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: RateDefinitionService_UpdateDefaultRateDefinition
      parameters:
      - name: defaultBillingPlan
        in: path
        description: The defaultBillingPlan id.
        required: true
        schema:
          type: string
      - name: defaultRateDefinition
        in: path
        description: The defaultRateDefinition id.
        required: true
        schema:
          type: string
      requestBody:
        description: the default rate definition to update.
        content:
          application/json:
            schema:
              title: default_rate_definition
              description: the default rate definition to update.
              $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
  /tcn/org/billing/ratedefinition/v1alpha5/orgs/{org}/billingPlans/{billingPlan}/rateDefinitions/{rateDefinition}:
    get:
      tags:
      - RateDefinitionService
      summary: GetRateDefinition
      description: "GetRateDefinition gets a rate definition.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.NotFound: The rate was not found.\n   - grpc.PermissionDenied: The
        caller does not have the required permissions.\n   - grpc.Unavailable: The
        operation is currently unavailable."
      operationId: RateDefinitionService_GetRateDefinition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: rateDefinition
        in: path
        description: The rateDefinition id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
    patch:
      tags:
      - RateDefinitionService
      summary: UpdateRateDefinition
      description: "UpdateRateDefinition updates a draft rate definition.\n Errors:\n
        \  - grpc.Internal: An internal error occurred.\n   - grpc.InvalidArgument:
        The request is invalid.\n   - grpc.NotFound: The rate was not found.\n   -
        grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: RateDefinitionService_UpdateRateDefinition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: rateDefinition
        in: path
        description: The rateDefinition id.
        required: true
        schema:
          type: string
      requestBody:
        description: the rate definition to update.
        content:
          application/json:
            schema:
              title: rate_definition
              description: the rate definition to update.
              $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
  /tcn/org/billing/ratedefinition/v1alpha5/orgs/{org}/billingPlans/{billingPlan}/rateDefinitions:
    get:
      tags:
      - RateDefinitionService
      summary: ListRateDefinitions
      description: "ListRateDefinitions lists rate definitions.\n Errors:\n   - grpc.Internal:
        An internal error occurred.\n   - grpc.InvalidArgument: The request is invalid.\n
        \  - grpc.PermissionDenied: The caller does not have the required permissions.\n
        \  - grpc.Unavailable: The operation is currently unavailable."
      operationId: RateDefinitionService_ListRateDefinitions
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: the maximum number of rate definitions to return.
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) the maximum number of rate definitions to return.
      - name: page_token
        in: query
        description: "a page token, received from a previous `ListRateDefinitions`
          call.\n Provide this to retrieve the subsequent page."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListRateDefinitions`
            call.\n Provide this to retrieve the subsequent page."
      - name: skip
        in: query
        description: the number of rate definitions to skip.
        schema:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of rate definitions to skip.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.ListRateDefinitionsResponse'
  /tcn/org/billing/ratedefinition/v1alpha5/orgs/{org}/billingPlans/{billingPlan}/rateDefinitions/{rateDefinition}:reset:
    post:
      tags:
      - RateDefinitionService
      summary: ResetRateDefinition
      description: "ResetRateDefinition resets a draft rate definition to the default
        rate definition value.\n Errors:\n   - grpc.Internal: An internal error occurred.\n
        \  - grpc.InvalidArgument: The request is invalid.\n   - grpc.NotFound: The
        rate was not found.\n   - grpc.PermissionDenied: The caller does not have
        the required permissions.\n   - grpc.Unavailable: The operation is currently
        unavailable."
      operationId: RateDefinitionService_ResetRateDefinition
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: billingPlan
        in: path
        description: The billingPlan id.
        required: true
        schema:
          type: string
      - name: rateDefinition
        in: path
        description: The rateDefinition id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                allow_missing:
                  type: boolean
                  title: allow_missing
                  description: "(OPTIONAL) if set to true, and the rate definition
                    is missing, the request will succeed\n but no action will be taken
                    on the server."
              title: ResetRateDefinitionRequest
              additionalProperties: false
              description: ResetRateDefinitionRequest -
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.ResetRateDefinitionResponse'
  /tcn/org/exiles/v1alpha1/regions/{region}/orgs/{org}/exileCertificates:
    get:
      tags:
      - ExilesService
      summary: ListExileCertificates
      description: Method to list exile certificates
      operationId: ExilesService_ListExileCertificates
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: Returned page.
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
      - name: page_token
        in: query
        description: Used to specify the page token.
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.ListExileCertificatesResponse'
    post:
      tags:
      - ExilesService
      summary: CreateExileCertificate
      description: "CreateExileCertificate creates a new TLS certificate and\n returns
        the exile ceritificate for the current organization."
      operationId: ExilesService_CreateExileCertificate
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: ExileCertificate
        content:
          application/json:
            schema:
              title: exile_certificate
              description: ExileCertificate
              $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.ExileCertificate'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.ExileCertificate'
  /tcn/org/exiles/v1alpha1/regions/{region}/orgs/{org}/exileCertificates/{exileCertificate}:
    get:
      tags:
      - ExilesService
      summary: GetExileCertificate
      description: Method to get an exile certificate
      operationId: ExilesService_GetExileCertificate
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: exileCertificate
        in: path
        description: The exileCertificate id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.ExileCertificate'
    post:
      tags:
      - ExilesService
      - ExilesService
      summary: RotateExileCertificate
      description: RotateExileCertificate rotates the certificate info
      operationId: ExilesService_RevokeExileCertificate
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: exileCertificate
        in: path
        description: The exileCertificate id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: exileCertificate
        in: path
        description: The exileCertificate id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.RevokeExileCertificateResponse'
  /tcn/org/huntgroups/v1alpha1/orgs/{org}/regions/{region}/complianceMetadataScripts/{complianceMetadataScript}:
    get:
      tags:
      - HuntgroupsService
      summary: GetComplianceMetadataScript
      description: Method to get a Compliance Metadata Script.
      operationId: HuntgroupsService_GetComplianceMetadataScript
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: complianceMetadataScript
        in: path
        description: The complianceMetadataScript id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.huntgroups.v1alpha1.ComplianceMetadataScript'
    delete:
      tags:
      - HuntgroupsService
      summary: DeleteComplianceMetadataScript
      description: Method to delete a script.
      operationId: HuntgroupsService_DeleteComplianceMetadataScript
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: complianceMetadataScript
        in: path
        description: The complianceMetadataScript id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
    patch:
      tags:
      - HuntgroupsService
      summary: UpdateComplianceMetadataScript
      description: Method to update Compliance Metadata Script.
      operationId: HuntgroupsService_UpdateComplianceMetadataScript
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: complianceMetadataScript
        in: path
        description: The complianceMetadataScript id.
        required: true
        schema:
          type: string
      requestBody:
        description: Script to update
        content:
          application/json:
            schema:
              title: compliance_metadata_script
              description: Script to update
              $ref: '#/components/schemas/tcn.org.huntgroups.v1alpha1.ComplianceMetadataScript'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.huntgroups.v1alpha1.ComplianceMetadataScript'
  /tcn/org/huntgroups/v1alpha1/orgs/{org}/regions/{region}/complianceMetadataScripts:
    get:
      tags:
      - HuntgroupsService
      summary: ListComplianceMetadataScripts
      description: Method to list compliance metadata scripts.
      operationId: HuntgroupsService_ListComplianceMetadataScripts
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: "The maximum number of scripts to return.\n If not specified,
          at most 50 scripts will be returned.\n The maximum value is 1000.  Values
          above this will return 1000."
        schema:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) The maximum number of scripts to return.\n If not
            specified, at most 50 scripts will be returned.\n The maximum value is
            1000.  Values above this will return 1000."
      - name: page_token
        in: query
        description: "A page token to indicate which page to return.\n A token for
          the next page is returned with each request.\n To request a subsequent page,
          all parameters except the token must remain the same."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) A page token to indicate which page to return.\n
            A token for the next page is returned with each request.\n To request
            a subsequent page, all parameters except the token must remain the same."
      - name: filter
        in: query
        description: The filter to limit the list results.
        schema:
          type: string
          title: filter
          description: (OPTIONAL) The filter to limit the list results.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.huntgroups.v1alpha1.ListComplianceMetadataScriptsResponse'
    post:
      tags:
      - HuntgroupsService
      summary: CreateComplianceMetadataScript
      description: Method to create a script.
      operationId: HuntgroupsService_CreateComplianceMetadataScript
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      requestBody:
        description: Script to create.
        content:
          application/json:
            schema:
              title: compliance_metadata_script
              description: Script to create.
              $ref: '#/components/schemas/tcn.org.huntgroups.v1alpha1.ComplianceMetadataScript'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.huntgroups.v1alpha1.ComplianceMetadataScript'
  /tcn/org/idp/v1alpha1/regions/{region}/orgs/{org}/idpClients/{idpClient}:
    get:
      tags:
      - IdpClientService
      summary: GetIdpClient
      description: Method to get an IdpClient
      operationId: IdpClientService_GetIdpClient
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: idpClient
        in: path
        description: The idpClient id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
    delete:
      tags:
      - IdpClientService
      summary: DeleteIdpClient
      description: Method for deleting a idpClient
      operationId: IdpClientService_DeleteIdpClient
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: idpClient
        in: path
        description: The idpClient id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
    patch:
      tags:
      - IdpClientService
      summary: UpdateIdpClient
      description: Method for updating a idpClient
      operationId: IdpClientService_UpdateIdpClient
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: idpClient
        in: path
        description: The idpClient id.
        required: true
        schema:
          type: string
      requestBody:
        description: The idpClient to update
        content:
          application/json:
            schema:
              title: idp_client
              description: The idpClient to update
              $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
  /tcn/org/idp/v1alpha1/regions/{region}/orgs/{org}/idpClients:
    get:
      tags:
      - IdpClientService
      summary: ListIdpClients
      description: Method to list idpClients
      operationId: IdpClientService_ListIdpClients
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: Use to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) Use to specify the page token
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.idp.v1alpha1.ListIdpClientsResponse'
    post:
      tags:
      - IdpClientService
      summary: CreateIdpClient
      description: Method for creating a idpClient
      operationId: IdpClientService_CreateIdpClient
      parameters:
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: The actual idpClient that you are sending
        content:
          application/json:
            schema:
              title: idp_client
              description: The actual idpClient that you are sending
              $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
  /tcn/org/organizations/v1alpha1/organizations/{organization}:
    get:
      tags:
      - OrganizationsService
      summary: GetOrganization
      description: GetOrganization is a method to get an organization.
      operationId: OrganizationsService_GetOrganization
      parameters:
      - name: organization
        in: path
        description: The organization id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
    patch:
      tags:
      - OrganizationsService
      summary: UpdateOrganization
      description: UpdateOrganization is a method to update an organization.
      operationId: OrganizationsService_UpdateOrganization
      parameters:
      - name: organization
        in: path
        description: The organization id.
        required: true
        schema:
          type: string
      requestBody:
        description: The organization to update.
        content:
          application/json:
            schema:
              title: organization
              description: The organization to update.
              $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
  /tcn/org/organizations/v1alpha1/organizations:
    get:
      tags:
      - OrganizationsService
      summary: ListOrganizations
      description: "(-- api-linter: core::0132::method-signature=disabled\n     aip.dev/not-precedent:
        We need to do this because organizations is a top level resource with no parent.\n
        \    Leaving empty signature is specified in google AIP-132. --)\n (-- api-linter:
        core::0132::http-uri-parent=disabled\n     aip.dev/not-precedent: We need
        to do this because there is no parent. --)\n ListOrganizations is a method
        to list organizations."
      operationId: OrganizationsService_ListOrganizations
      parameters:
      - name: page_size
        in: query
        description: "The maximum number of organizations to return.\n If unspecified,
          at most 50 organizations will be returned.\n The maximum value is 1000;
          values above 1000 will be coerced to 1000."
        schema:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) The maximum number of organizations to return.\n
            If unspecified, at most 50 organizations will be returned.\n The maximum
            value is 1000; values above 1000 will be coerced to 1000."
      - name: page_token
        in: query
        description: "A page token, received from a previous `ListOrganizations` call.\n
          Provide this to retrieve the subsequent page.\n When paginating, all other
          parameters provided to `ListOrganizations` must match\n the call that provided
          the page token."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) A page token, received from a previous `ListOrganizations`
            call.\n Provide this to retrieve the subsequent page.\n When paginating,
            all other parameters provided to `ListOrganizations` must match\n the
            call that provided the page token."
      - name: filter
        in: query
        description: The filter to apply to list results.
        schema:
          type: string
          title: filter
          description: (OPTIONAL) The filter to apply to list results.
      - name: order_by
        in: query
        description: "The field to order the results by.\n Format: \"field_name\"
          or \"field_name desc\"\n Supported fields: display_name, create_time, update_time"
        schema:
          type: string
          title: order_by
          description: "(OPTIONAL) The field to order the results by.\n Format: \"field_name\"
            or \"field_name desc\"\n Supported fields: display_name, create_time,
            update_time"
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.ListOrganizationsResponse'
    post:
      tags:
      - OrganizationsService
      summary: CreateOrganization
      description: "(-- api-linter: core::0133::method-signature=disabled\n     aip.dev/not-precedent:
        We need to pass the allowed countries in the request\n     to create an organization.
        And it will be stored in the Organization Preferences. --)\n CreateOrganization
        is a method to create an organization."
      operationId: OrganizationsService_CreateOrganization
      requestBody:
        description: The organization to create.
        content:
          application/json:
            schema:
              title: organization
              description: The organization to create.
              $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
  /tcn/org/organizations/v1alpha1/organizations:archiveOrganization:
    post:
      tags:
      - OrganizationsService
      summary: ArchiveOrganization
      description: "ArchiveOrganization is a method to archive an organization.\n
        An archived organization effectively disappears, but isn't deleted."
      operationId: OrganizationsService_ArchiveOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.ArchiveOrganizationRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.ArchiveOrganizationResponse'
  /tcn/org/organizations/v1alpha1/organizations:unArchiveOrganization:
    post:
      tags:
      - OrganizationsService
      summary: UnArchiveOrganization
      description: UnArchiveOrganization is a method to restore an archived organization.
      operationId: OrganizationsService_UnArchiveOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.UnArchiveOrganizationRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.UnArchiveOrganizationResponse'
  /tcn/org/organizations/v1alpha1/organizations/{organization}/lastScheduledDate:
    get:
      tags:
      - OrganizationsService
      summary: GetLastScheduledDate
      description: GetLastScheduledDate is a method to get the last scheduled date
        for an organization.
      operationId: OrganizationsService_GetLastScheduledDate
      parameters:
      - name: organization
        in: path
        description: The organization id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.LastScheduledDate'
  /tcn/org/organizations/v1alpha1/organizations/{organization}:streamOwnedOrganizations:
    get:
      tags:
      - OrganizationsService
      summary: StreamOwnedOrganizations
      description: StreamOwnedOrganizations is a method to list all organizations
        under the p3 hierarchy.
      operationId: OrganizationsService_StreamOwnedOrganizations
      parameters:
      - name: organization
        in: path
        description: The organization id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.StreamOwnedOrganizationsResponse'
  /tcn/org/permissions/v1alpha1/orgs/{org}/permissionGroups/{permissionGroup}:
    get:
      tags:
      - PermissionsService
      summary: GetPermissionGroup
      description: Method to get a permission group
      operationId: PermissionsService_GetPermissionGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: permissionGroup
        in: path
        description: The permissionGroup id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.permissions.v1alpha1.PermissionGroup'
    delete:
      tags:
      - PermissionsService
      summary: DeletePermissionGroup
      description: Method to delete a permission group
      operationId: PermissionsService_DeletePermissionGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: permissionGroup
        in: path
        description: The permissionGroup id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
    patch:
      tags:
      - PermissionsService
      summary: UpdatePermissionGroup
      description: Method to update a permission group
      operationId: PermissionsService_UpdatePermissionGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: permissionGroup
        in: path
        description: The permissionGroup id.
        required: true
        schema:
          type: string
      requestBody:
        description: The permission group to update.
        content:
          application/json:
            schema:
              title: permission_group
              description: The permission group to update.
              $ref: '#/components/schemas/tcn.org.permissions.v1alpha1.PermissionGroup'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.permissions.v1alpha1.PermissionGroup'
  /tcn/org/permissions/v1alpha1/orgs/{org}/permissionGroups:
    get:
      tags:
      - PermissionsService
      summary: ListPermissionGroups
      description: Method to list permission groups
      operationId: PermissionsService_ListPermissionGroups
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: The maximum number of permission groups to return.
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) The maximum number of permission groups to return.
      - name: page_token
        in: query
        description: The page token to use for the next request.
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) The page token to use for the next request.
      - name: filter
        in: query
        description: The filter to apply to list results.
        schema:
          type: string
          title: filter
          description: (OPTIONAL) The filter to apply to list results.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.permissions.v1alpha1.ListPermissionGroupsResponse'
    post:
      tags:
      - PermissionsService
      summary: CreatePermissionGroup
      description: Method to create a permission group
      operationId: PermissionsService_CreatePermissionGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: The permission group to create.
        content:
          application/json:
            schema:
              title: permission_group
              description: The permission group to create.
              $ref: '#/components/schemas/tcn.org.permissions.v1alpha1.PermissionGroup'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.permissions.v1alpha1.PermissionGroup'
  /tcn/org/preferences/v1alpha1/orgs/{org}/adminClientPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetAdminClientPreferences
      description: GetAdminClientPreferences returns the admin client preferences
        for the organization.
      operationId: PreferencesService_GetAdminClientPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AdminClientPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateAdminClientPreferences
      description: UpdateAdminClientPreferences updates the admin client preferences
        for the organization.
      operationId: PreferencesService_UpdateAdminClientPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: The admin client preferences to update
        content:
          application/json:
            schema:
              title: admin_client_preferences
              description: The admin client preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AdminClientPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AdminClientPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/agentPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetAgentPreferences
      description: "AgentPreferences\n\n Method to get the agent preferences"
      operationId: PreferencesService_GetAgentPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateAgentPreferences
      description: Method to update agent preferences
      operationId: PreferencesService_UpdateAgentPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the agent preferences to update
        content:
          application/json:
            schema:
              title: agent_preferences
              description: the agent preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/agentQuickViewPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetAgentQuickViewPreferences
      description: Method to get the agent quick view preferences
      operationId: PreferencesService_GetAgentQuickViewPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentQuickViewPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateAgentQuickViewPreferences
      description: Method to update agent quick view preferences
      operationId: PreferencesService_UpdateAgentQuickViewPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the agent quick view preferences to update
        content:
          application/json:
            schema:
              title: agent_quick_view_preferences
              description: the agent quick view preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentQuickViewPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentQuickViewPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/authenticationPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetAuthenticationPreferences
      description: Method to get the authentication preferences
      operationId: PreferencesService_GetAuthenticationPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AuthenticationPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateAuthenticationPreferences
      description: Method to update authentication preferences
      operationId: PreferencesService_UpdateAuthenticationPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the authentication preferences to update
        content:
          application/json:
            schema:
              title: authentication_preferences
              description: the authentication preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AuthenticationPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AuthenticationPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/broadcastPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetBroadcastPreferences
      description: Method to get the broadcast preferences
      operationId: PreferencesService_GetBroadcastPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BroadcastPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateBroadcastPreferences
      description: Method to update broadcast preferences
      operationId: PreferencesService_UpdateBroadcastPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the broadcast preferences to update
        content:
          application/json:
            schema:
              title: broadcast_preferences
              description: the broadcast preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BroadcastPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BroadcastPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/businessPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetBusinessPreferences
      description: Method to get the business preferences
      operationId: PreferencesService_GetBusinessPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BusinessPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateBusinessPreferences
      description: Method to update business preferences
      operationId: PreferencesService_UpdateBusinessPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the business preferences to update
        content:
          application/json:
            schema:
              title: business_preferences
              description: the business preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BusinessPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BusinessPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/compliancePreferences:
    get:
      tags:
      - PreferencesService
      summary: GetCompliancePreferences
      description: GetCompliancePreferences returns the compliance preferences for
        the organization.
      operationId: PreferencesService_GetCompliancePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.CompliancePreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateCompliancePreferences
      description: UpdateCompliancePreferences updates the compliance preferences
        for the organization.
      operationId: PreferencesService_UpdateCompliancePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the compliance preferences to update
        content:
          application/json:
            schema:
              title: compliance_preferences
              description: the compliance preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.CompliancePreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.CompliancePreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/contactPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetContactPreferences
      description: GetContactPreferences returns the contact preferences for the organization.
      operationId: PreferencesService_GetContactPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateContactPreferences
      description: UpdateContactPreferences updates the contact preferences for the
        organization.
      operationId: PreferencesService_UpdateContactPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the Contact preferences to update
        content:
          application/json:
            schema:
              title: contact_preferences
              description: the Contact preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/dashboardGeneralPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetDashboardGeneralPreferences
      description: GetDashboardGeneralPreferences returns the dashboard general preferences
        for the organization.
      operationId: PreferencesService_GetDashboardGeneralPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardGeneralPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateDashboardGeneralPreferences
      description: UpdateDashboardGeneralPreferences updates the dashboard general
        preferences for the organization.
      operationId: PreferencesService_UpdateDashboardGeneralPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the dashboard general preferences to update
        content:
          application/json:
            schema:
              title: dashboard_general_preferences
              description: the dashboard general preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardGeneralPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardGeneralPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/dashboardQueuePreferences:
    get:
      tags:
      - PreferencesService
      summary: GetDashboardQueuePreferences
      description: GetDashboardQueuePreferences returns the dashboard queue preferences
        for the organization.
      operationId: PreferencesService_GetDashboardQueuePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardQueuePreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateDashboardQueuePreferences
      description: UpdateDashboardQueuePreferences updates the dashboard queue preferences
        for the organization.
      operationId: PreferencesService_UpdateDashboardQueuePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the dashboard queue preferences to update
        content:
          application/json:
            schema:
              title: dashboard_queue_preferences
              description: the dashboard queue preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardQueuePreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardQueuePreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/emailSmsPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetEmailSmsPreferences
      description: GetEmailSmsPreferences returns the email sms preferences for the
        organization.
      operationId: PreferencesService_GetEmailSmsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EmailSmsPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateEmailSmsPreferences
      description: UpdateEmailSmsPreferencesPreferences updates the email sms preferences
        for the organization.
      operationId: PreferencesService_UpdateEmailSmsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the email sms preferences to update
        content:
          application/json:
            schema:
              title: email_sms_preferences
              description: the email sms preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EmailSmsPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EmailSmsPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/endOfDayPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetEndOfDayPreferences
      description: "(-- api-linter: core::0136::prepositions=disabled\n     aip.dev/not-precedent:
        We need to do this because the name of the preference. --)\n GetEndOfDayPreferences
        returns the end of day preferences for the organization."
      operationId: PreferencesService_GetEndOfDayPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EndOfDayPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateEndOfDayPreferences
      description: "(-- api-linter: core::0136::prepositions=disabled\n     aip.dev/not-precedent:
        We need to do this because the name of the preference. --)\n UpdateEndOfDayPreferences
        updates the end of day preferences for the organization."
      operationId: PreferencesService_UpdateEndOfDayPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the end of day preferences to update
        content:
          application/json:
            schema:
              title: end_of_day_preferences
              description: the end of day preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EndOfDayPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EndOfDayPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/organizationPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetOrganizationPreferences
      description: GetOrganizationPreferences returns the organization preferences.
      operationId: PreferencesService_GetOrganizationPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.OrganizationPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateOrganizationPreferences
      description: UpdateOrganizationPreferences updates the organization preferences.
      operationId: PreferencesService_UpdateOrganizationPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the organization preferences to update
        content:
          application/json:
            schema:
              title: organization_preferences
              description: the organization preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.OrganizationPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.OrganizationPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/phonePreferences:
    get:
      tags:
      - PreferencesService
      summary: GetPhonePreferences
      description: GetPhonePreferences returns the phone preferences.
      operationId: PreferencesService_GetPhonePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.PhonePreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdatePhonePreferences
      description: UpdatePhonePreferences updates the phone preferences.
      operationId: PreferencesService_UpdatePhonePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the phone preferences to update
        content:
          application/json:
            schema:
              title: phone_preferences
              description: the phone preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.PhonePreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.PhonePreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/recordingPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetRecordingPreferences
      description: GetRecordingPreferences returns all recording options for an org.
      operationId: PreferencesService_GetRecordingPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RecordingPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/recordPreferences:
    patch:
      tags:
      - PreferencesService
      summary: UpdateRecordingPreferences
      description: UpdateRecordingPreferences updates Recording preferences for an
        org.
      operationId: PreferencesService_UpdateRecordingPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: Recording preferences object, required to update
        content:
          application/json:
            schema:
              title: recording_preferences
              description: Recording preferences object, required to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RecordingPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RecordingPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/reportFilterPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetReportFilterPreferences
      description: GetReportFilterPreferences returns all report filter options for
        an org.
      operationId: PreferencesService_GetReportFilterPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ReportFilterPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateReportFilterPreferences
      description: UpdateReportFilterPreferences updates report filter preferences
        for an org.
      operationId: PreferencesService_UpdateReportFilterPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: Report filter preferences object, required to update
        content:
          application/json:
            schema:
              title: report_filter_preferences
              description: Report filter preferences object, required to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ReportFilterPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ReportFilterPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/schedulePreferences:
    get:
      tags:
      - PreferencesService
      summary: GetSchedulePreferences
      description: GetSchedulePreferences returns the schedule preferences.
      operationId: PreferencesService_GetSchedulePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.SchedulePreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateSchedulePreferences
      description: UpdateSchedulePreferences updates the schedule preferences.
      operationId: PreferencesService_UpdateSchedulePreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: Schedule preferences entity.
        content:
          application/json:
            schema:
              title: schedule_preferences
              description: Schedule preferences entity.
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.SchedulePreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.SchedulePreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/scorecardsPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetScorecardsPreferences
      description: GetScorecardsPreferences returns the score card preferences.
      operationId: PreferencesService_GetScorecardsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ScorecardsPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateScorecardsPreferences
      description: UpdateScorecardsPreferences updates the score cards preferences.
      operationId: PreferencesService_UpdateScorecardsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: Scorecards preferences entity.
        content:
          application/json:
            schema:
              title: scorecards_preferences
              description: Scorecards preferences entity.
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ScorecardsPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ScorecardsPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/voiceAnalyticsPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetVoiceAnalyticsPreferences
      description: GetVoiceAnalyticsPreferences returns the voice analytics preferences.
      operationId: PreferencesService_GetVoiceAnalyticsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.VoiceAnalyticsPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateVoiceAnalyticsPreferences
      description: UpdateVoiceAnalyticsPreferences updates the voice analytics preferences.
      operationId: PreferencesService_UpdateVoiceAnalyticsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the voice analytics preferences to update
        content:
          application/json:
            schema:
              title: voice_analytics_preferences
              description: the voice analytics preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.VoiceAnalyticsPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.VoiceAnalyticsPreferences'
  /tcn/org/preferences/v1alpha1/orgs/{org}/voiceAnalyticsPreferens:
    get:
      tags:
      - PreferencesService
      summary: ListVoiceAnalyticsPreferences
      description: ListVoiceAnalyticsPreferences returns the voice analytics preferences
        in the current region.
      operationId: PreferencesService_ListVoiceAnalyticsPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: The maximum number of preferences to return
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) The maximum number of preferences to return
      - name: page_token
        in: query
        description: "A page token, received from a previous `ListVoiceAnalyticsPreferences`
          call.\n Provide this to retrieve the subsequent page.\n When paginating,
          all other parameters provided to `ListVoiceAnalyticsPreferences` must match\n
          the call that provided the page token."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) A page token, received from a previous `ListVoiceAnalyticsPreferences`
            call.\n Provide this to retrieve the subsequent page.\n When paginating,
            all other parameters provided to `ListVoiceAnalyticsPreferences` must
            match\n the call that provided the page token."
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ListVoiceAnalyticsPreferencesResponse'
  /tcn/org/preferences/v1alpha1/orgs/{org}/webhookPreferences:
    get:
      tags:
      - PreferencesService
      summary: GetWebhookPreferences
      description: GetWebhookPreferences returns the webhook preferences.
      operationId: PreferencesService_GetWebhookPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.WebhookPreferences'
    patch:
      tags:
      - PreferencesService
      summary: UpdateWebhookPreferences
      description: UpdateWebhookPreferences updates the webhook preferences.
      operationId: PreferencesService_UpdateWebhookPreferences
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: The webhook preferences to update
        content:
          application/json:
            schema:
              title: webhook_preferences
              description: The webhook preferences to update
              $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.WebhookPreferences'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.WebhookPreferences'
  /tcn/org/skills/v1alpha1/orgs/{org}/skillgroups:
    get:
      tags:
      - SkillsService
      summary: ListSkillGroups
      description: Method to list skill groups
      operationId: SkillsService_ListSkillGroups
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: Returned page.
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
      - name: page_token
        in: query
        description: Used to specify the page token.
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      - name: filter
        in: query
        description: The filter to apply to list results.
        schema:
          type: string
          title: filter
          description: (OPTIONAL) The filter to apply to list results.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.ListSkillGroupsResponse'
  /tcn/org/skills/v1alpha1/orgs/{org}/skillGroups/{skillGroup}:
    get:
      tags:
      - SkillsService
      summary: GetSkillGroup
      description: Method to get a skill group
      operationId: SkillsService_GetSkillGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: skillGroup
        in: path
        description: The skillGroup id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
    delete:
      tags:
      - SkillsService
      summary: DeleteSkillGroup
      description: Method to delete a skill group
      operationId: SkillsService_DeleteSkillGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: skillGroup
        in: path
        description: The skillGroup id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
    patch:
      tags:
      - SkillsService
      summary: UpdateSkillGroup
      description: Method to update a skill group
      operationId: SkillsService_UpdateSkillGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: skillGroup
        in: path
        description: The skillGroup id.
        required: true
        schema:
          type: string
      requestBody:
        description: The skill group to update.
        content:
          application/json:
            schema:
              title: skill_group
              description: The skill group to update.
              $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
  /tcn/org/skills/v1alpha1/orgs/{org}/skillGroups:
    post:
      tags:
      - SkillsService
      summary: CreateSkillGroup
      description: Method to create a skill group
      operationId: SkillsService_CreateSkillGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: The skill group to be created
        content:
          application/json:
            schema:
              title: skill_group
              description: The skill group to be created
              $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
  /tcn/org/skills/v1alpha1/orgs/{org}/skills/{skill}:removeSkillAllGroups:
    post:
      tags:
      - SkillsService
      summary: RemoveSkillAllGroups
      description: RemoveSkillAllGroups removes a skill from all skill groups which
        contain it.
      operationId: SkillsService_RemoveSkillAllGroups
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: skill
        in: path
        description: The skill id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.RemoveSkillAllGroupsResponse'
  /tcn/org/skills/v1alpha1/orgs/{org}/skillGroups/{skillGroup}:assign:
    post:
      tags:
      - SkillsService
      summary: AssignSkillGroup
      description: AssignSkillGroup assigns a user to the given skill group.
      operationId: SkillsService_AssignSkillGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: skillGroup
        in: path
        description: The skillGroup id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                org_id:
                  type: string
                  title: org_id
                  description: The ids of the organization of the skill group.
                skill_group_id:
                  type: string
                  title: skill_group_id
                  description: The id of the skill groups to be assigned.
                user_id:
                  type: string
                  title: user_id
                  description: The user id of the user.
              title: AssignSkillGroupRequest
              required:
              - org_id
              - skill_group_id
              - user_id
              additionalProperties: false
              description: Request message for the AssignSkillGroup rpc.
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.AssignSkillGroupResponse'
  /tcn/org/skills/v1alpha1/orgs/{org}/skillGroups/{skillGroup}:revoke:
    post:
      tags:
      - SkillsService
      summary: RevokeSkillGroup
      description: RevokeSkillGroup revokes a user from the given skill group.
      operationId: SkillsService_RevokeSkillGroup
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: skillGroup
        in: path
        description: The skillGroup id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                org_id:
                  type: string
                  title: org_id
                  description: The ids of the organization of the skill group.
                skill_group_id:
                  type: string
                  title: skill_group_id
                  description: The id of the skill groups to be revoked.
                user_id:
                  type: string
                  title: user_id
                  description: The user id of the user.
              title: RevokeSkillGroupRequest
              required:
              - org_id
              - skill_group_id
              - user_id
              additionalProperties: false
              description: Request message for the RevokeSkillGroup rpc.
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.RevokeSkillGroupResponse'
  /tcn/org/skills/v1alpha1/orgs/{org}/skillGroups/{skillGroup}:addSkill:
    post:
      tags:
      - SkillsService
      summary: AddSkill
      description: AddSkill adds a skill to a skill group.
      operationId: SkillsService_AddSkill
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: skillGroup
        in: path
        description: The skillGroup id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                skill_set:
                  title: skill_set
                  description: The skill to add to the skill group.
                  $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup.SkillSet'
              title: AddSkillRequest
              required:
              - skill_set
              additionalProperties: false
              description: Request message for the AddSkill rpc.
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
  /tcn/org/skills/v1alpha1/orgs/{org}/skillGroups/{skillGroup}:removeSkill:
    post:
      tags:
      - SkillsService
      summary: RemoveSkill
      description: RemoveSkill removes a skill from a skill group.
      operationId: SkillsService_RemoveSkill
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: skillGroup
        in: path
        description: The skillGroup id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                skill_sid:
                  type:
                  - integer
                  - string
                  title: skill_sid
                  format: int64
                  description: The skill sid to remove from the skill group.
              title: RemoveSkillRequest
              required:
              - skill_sid
              additionalProperties: false
              description: Request message for the RemoveSkill rpc.
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
  /tcn/org/tokens/v1alpha1/orgs/{org}/apiTokens:
    get:
      tags:
      - TokensService
      summary: ListAPITokens
      description: Method to list API tokens
      operationId: TokensService_ListAPITokens
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: Standard filter string
        schema:
          type: string
          title: filter
          description: (OPTIONAL) Standard filter string
      - name: page_size
        in: query
        description: Returned page.
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
      - name: page_token
        in: query
        description: Used to specify the page token.
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      - name: order_by
        in: query
        description: Which fields and what sorting order to return the resources in.
        schema:
          type: string
          title: order_by
          description: (OPTIONAL) Which fields and what sorting order to return the
            resources in.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.ListAPITokensResponse'
  /tcn/org/tokens/v1alpha1/orgs/{org}/apiTokens/{apiToken}:
    get:
      tags:
      - TokensService
      summary: GetAPIToken
      description: Method to get an API token
      operationId: TokensService_GetAPIToken
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: apiToken
        in: path
        description: The apiToken id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
  /tcn/org/tokens/v1alpha1/orgs/{org}/apiTokens/{apiToken}:generate:
    post:
      tags:
      - TokensService
      summary: GenerateAPIToken
      description: Method to create an API token
      operationId: TokensService_GenerateAPIToken
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: apiToken
        in: path
        description: The apiToken id.
        required: true
        schema:
          type: string
      requestBody:
        description: The API token to be created.
        content:
          application/json:
            schema:
              title: api_token
              description: The API token to be created.
              $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.GenerateAPITokenResponse'
  /tcn/org/tokens/v1alpha1/orgs/{org}/apiTokens/{apiToken}:revoke:
    post:
      tags:
      - TokensService
      summary: RevokeAPIToken
      description: Method to revoke an API token
      operationId: TokensService_RevokeAPIToken
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: apiToken
        in: path
        description: The apiToken id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
  /tcn/org/tokens/v1alpha1/orgs/{org}/apiTokens/{apiToken}:recordUse:
    post:
      tags:
      - TokensService
      summary: RecordAPITokenUse
      description: Records that an API token was used, updating its last use time
        to the current time
      operationId: TokensService_RecordAPITokenUse
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: apiToken
        in: path
        description: The apiToken id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
  /tcn/org/tokens/v1alpha1/keys:
    get:
      tags:
      - TokensService
      summary: ListKeys
      description: "Lists the jwks used for API token verification\n\n Disable list
        method lint rules, this isn't truly an AIP-132 'List' method in\n the sense
        that isn't explicitly associated with the resource itself.\n (-- api-linter:
        core::0132::request-message-name=disabled --)"
      operationId: TokensService_ListKeys
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.ListKeysResponse'
  /tcn/org/tokens/v1alpha1/orgs/{org}/apiTokens/{apiToken}:sendExpirationReminders:
    post:
      tags:
      - TokensService
      summary: SendAPITokenExpirationReminders
      description: "Sends reminders to users to create new API tokens\n\n (-- api-linter:
        core::0136::request-message-name=disabled\n     api-linter: core::0136::response-message-name=disabled
        --)"
      operationId: TokensService_SendAPITokenExpirationReminders
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: apiToken
        in: path
        description: The apiToken id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
  /tcn/org/tokens/v1alpha1/orgs/{org}/apiTokens/{apiToken}:authenticate:
    post:
      tags:
      - TokensService
      summary: AuthenticateAPIToken
      description: "Authenticates an API token\n\n (-- api-linter: core::0136::response-message-name=disabled
        --)"
      operationId: TokensService_AuthenticateAPIToken
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: apiToken
        in: path
        description: The apiToken id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  title: token
                  description: The name of the API token that was used
              title: AuthenticateAPITokenRequest
              required:
              - token
              additionalProperties: false
              description: Request to authenticate an API token
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
  /tcn/org/users/v1alpha1/orgs/{org}/users/{user}:
    get:
      tags:
      - UsersService
      summary: GetUser
      description: Method to get a user
      operationId: UsersService_GetUser
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
    patch:
      tags:
      - UsersService
      summary: UpdateUser
      description: Method to update a user
      operationId: UsersService_UpdateUser
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: user
        in: path
        description: The user id.
        required: true
        schema:
          type: string
      requestBody:
        description: user to update
        content:
          application/json:
            schema:
              title: user
              description: user to update
              $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
  /tcn/org/users/v1alpha1/orgs/{org}/users:
    get:
      tags:
      - UsersService
      summary: ListUsers
      description: ListUsers is a method to list users.
      operationId: UsersService_ListUsers
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: "The maximum number of users to return.\n If unspecified, at
          most 50 users will be returned.\n The maximum value is 1000; values above
          1000 will be coerced to 1000."
        schema:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) The maximum number of users to return.\n If unspecified,
            at most 50 users will be returned.\n The maximum value is 1000; values
            above 1000 will be coerced to 1000."
      - name: page_token
        in: query
        description: "A page token, received from a previous `ListUsers` call.\n Provide
          this to retrieve the subsequent page.\n When paginating, all other parameters
          provided to `ListUsers` must match\n the call that provided the page token."
        schema:
          type: string
          title: page_token
          description: "(OPTIONAL) A page token, received from a previous `ListUsers`
            call.\n Provide this to retrieve the subsequent page.\n When paginating,
            all other parameters provided to `ListUsers` must match\n the call that
            provided the page token."
      - name: filter
        in: query
        description: The filter to apply to list results.
        schema:
          type: string
          title: filter
          description: (OPTIONAL) The filter to apply to list results.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.users.v1alpha1.ListUsersResponse'
    post:
      tags:
      - UsersService
      summary: CreateUser
      description: "(-- api-linter: core::0133::method-signature=disabled\n     aip.dev/not-precedent:
        The password of the user is required\n --)\n Method to create an user"
      operationId: UsersService_CreateUser
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: user to create
        content:
          application/json:
            schema:
              title: user
              description: user to create
              $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
  /tcn/org/users/v1alpha1/users:archiveUser:
    post:
      tags:
      - UsersService
      summary: ArchiveUser
      description: Archives a user effectively disappears, but isn't deleted.
      operationId: UsersService_ArchiveUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.users.v1alpha1.ArchiveUserRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.users.v1alpha1.ArchiveUserResponse'
  /tcn/org/users/v1alpha1/users:unArchiveUser:
    post:
      tags:
      - UsersService
      summary: UnArchiveUser
      description: Restores an archived User.
      operationId: UsersService_UnArchiveUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tcn.org.users.v1alpha1.UnArchiveUserRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.org.users.v1alpha1.UnArchiveUserResponse'
  /tcn/ruleengine/ruleset/v1alpha1/orgs/{org}/ruleSet:
    get:
      tags:
      - RuleEngineService
      summary: GetRuleSet
      description: GetRuleSet gets the rule set
      operationId: RuleEngineService_GetRuleSet
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.ruleengine.ruleset.v1alpha1.RuleSet'
    patch:
      tags:
      - RuleEngineService
      summary: UpdateRuleSet
      description: UpdateRuleSet updates the rule set
      operationId: RuleEngineService_UpdateRuleSet
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: The rule set to update
        content:
          application/json:
            schema:
              title: rule_set
              description: The rule set to update
              $ref: '#/components/schemas/tcn.ruleengine.ruleset.v1alpha1.RuleSet'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.ruleengine.ruleset.v1alpha1.RuleSet'
  /tcn/ruleengine/ruleset/v1alpha1/orgs/{org}/eventMetadata:
    get:
      tags:
      - RuleEngineService
      summary: GetEventMetadata
      description: GetEventMetadata gets the event metadata
      operationId: RuleEngineService_GetEventMetadata
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.ruleengine.ruleset.v1alpha1.EventMetadata'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/sla:
    post:
      tags:
      - TicketService
      summary: CreateSla
      description: Method to create a Sla
      operationId: TicketService_CreateSla
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the sla to be created
        content:
          application/json:
            schema:
              title: sla
              description: the sla to be created
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/slas:
    get:
      tags:
      - TicketService
      summary: ListSlas
      description: Method to list Sla
      operationId: TicketService_ListSlas
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ListSlasResponse'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/slas/{sla}:
    get:
      tags:
      - TicketService
      summary: GetSla
      description: Method to get a rpoject
      operationId: TicketService_GetSla
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: sla
        in: path
        description: The sla id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
    delete:
      tags:
      - TicketService
      summary: DeleteSla
      description: Method to delete a Sla
      operationId: TicketService_DeleteSla
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: sla
        in: path
        description: The sla id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
    patch:
      tags:
      - TicketService
      summary: UpdateSla
      description: Method to update a Sla
      operationId: TicketService_UpdateSla
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: sla
        in: path
        description: The sla id.
        required: true
        schema:
          type: string
      requestBody:
        description: the Sla to be updated
        content:
          application/json:
            schema:
              title: sla
              description: the Sla to be updated
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects/{project}/ticket:
    post:
      tags:
      - TicketService
      summary: CreateTicket
      description: Public Method to create a ticket.
      operationId: TicketService_CreateTicket
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      requestBody:
        description: the ticket to be created
        content:
          application/json:
            schema:
              title: ticket
              description: the ticket to be created
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects/{project}/ticket/{ticket}:
    patch:
      tags:
      - TicketService
      summary: UpdateTicket
      description: Public Method to update a ticket.
      operationId: TicketService_UpdateTicket
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: ticket
        in: path
        description: The ticket id.
        required: true
        schema:
          type: string
      requestBody:
        description: the Ticket to be updated
        content:
          application/json:
            schema:
              title: ticket
              description: the Ticket to be updated
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects/{project}/tickets:
    get:
      tags:
      - TicketService
      summary: ListTickets
      description: Public method to list tickets
      operationId: TicketService_ListTickets
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ListTicketsResponse'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects/{project}/tickets/{ticket}:close:
    get:
      tags:
      - TicketService
      summary: CloseTicket
      description: Public Method to Close a ticket
      operationId: TicketService_CloseTicket
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: ticket
        in: path
        description: The ticket id.
        required: true
        schema:
          type: string
      - name: comment
        in: query
        description: description of the comment
        required: true
        schema:
          type: string
          title: comment
          description: description of the comment
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.CloseTicketResponse'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects/{project}/tickets/{ticket}:
    get:
      tags:
      - TicketService
      summary: GetTicket
      description: Public method to get ticket
      operationId: TicketService_GetTicket
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: ticket
        in: path
        description: The ticket id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects/{project}/tickets/{ticket}/ticketAction:
    get:
      tags:
      - TicketService
      summary: ListTicketActions
      description: Public method to list ticket_actions
      operationId: TicketService_ListTicketActions
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: ticket
        in: path
        description: The ticket id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ListTicketActionsResponse'
    post:
      tags:
      - TicketService
      summary: CreateTicketAction
      description: Public Method to create a ticket_action.
      operationId: TicketService_CreateTicketAction
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: ticket
        in: path
        description: The ticket id.
        required: true
        schema:
          type: string
      requestBody:
        description: the ticket_action to be created
        content:
          application/json:
            schema:
              title: ticket_action
              description: the ticket_action to be created
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects/{project}/tickets/{ticket}/ticketAction/{ticketAction}:
    patch:
      tags:
      - TicketService
      summary: UpdateTicketAction
      description: Public Method to update a ticket_action.
      operationId: TicketService_UpdateTicketAction
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: ticket
        in: path
        description: The ticket id.
        required: true
        schema:
          type: string
      - name: ticketAction
        in: path
        description: The ticketAction id.
        required: true
        schema:
          type: string
      requestBody:
        description: the TicketAction to be updated
        content:
          application/json:
            schema:
              title: ticket_action
              description: the TicketAction to be updated
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects/{project}/tickets/{ticket}/ticketActions/{ticketAction}:close:
    get:
      tags:
      - TicketService
      summary: CloseTicketAction
      description: Public Method to Close a ticket_action
      operationId: TicketService_CloseTicketAction
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: ticket
        in: path
        description: The ticket id.
        required: true
        schema:
          type: string
      - name: ticketAction
        in: path
        description: The ticketAction id.
        required: true
        schema:
          type: string
      - name: comment
        in: query
        description: description of the comment
        required: true
        schema:
          type: string
          title: comment
          description: description of the comment
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.CloseTicketActionResponse'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects/{project}/tickets/{ticket}/ticketActions/{ticketAction}:
    get:
      tags:
      - TicketService
      summary: GetTicketAction
      description: Public method to get ticket_action
      operationId: TicketService_GetTicketAction
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: ticket
        in: path
        description: The ticket id.
        required: true
        schema:
          type: string
      - name: ticketAction
        in: path
        description: The ticketAction id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticketTemplate:
    get:
      tags:
      - TicketService
      summary: ListTicketTemplates
      description: "Public method to list ticket_templates\n (-- api-linter: core::0132::method-signature=disabled\n
        \    aip.dev/not-precedent: We need to do this because reasons. --)"
      operationId: TicketService_ListTicketTemplates
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project_id
        in: query
        description: "(-- api-linter: core::0132::request-unknown-fields=disabled\n
          \    aip.dev/not-precedent: We really need this field because reasons. --)\n
          project_id"
        schema:
          type:
          - integer
          - string
          title: project_id
          format: int64
          description: "(OPTIONAL) (-- api-linter: core::0132::request-unknown-fields=disabled\n
            \    aip.dev/not-precedent: We really need this field because reasons.
            --)\n project_id"
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ListTicketTemplatesResponse'
    post:
      tags:
      - TicketService
      summary: CreateTicketTemplate
      description: Public Method to create a ticket_tempalte.
      operationId: TicketService_CreateTicketTemplate
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the ticket_template to be created
        content:
          application/json:
            schema:
              title: ticket_template
              description: the ticket_template to be created
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticketTemplate/{ticketTemplate}:
    patch:
      tags:
      - TicketService
      summary: UpdateTicketTemplate
      description: Public Method to update a ticket_template.
      operationId: TicketService_UpdateTicketTemplate
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: ticketTemplate
        in: path
        description: The ticketTemplate id.
        required: true
        schema:
          type: string
      requestBody:
        description: the TicketTemplate to be updated
        content:
          application/json:
            schema:
              title: ticket_template
              description: the TicketTemplate to be updated
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticketTemplates/{ticketTemplate}:
    get:
      tags:
      - TicketService
      summary: GetTicketTemplate
      description: Public method to get ticket_template
      operationId: TicketService_GetTicketTemplate
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: ticketTemplate
        in: path
        description: The ticketTemplate id.
        required: true
        schema:
          type: string
      - name: project_id
        in: query
        description: "(-- api-linter: core::0131::request-unknown-fields=disabled\n
          \    aip.dev/not-precedent: We really need this field because reasons. --)\n
          project_id"
        schema:
          type:
          - integer
          - string
          title: project_id
          format: int64
          description: "(OPTIONAL) (-- api-linter: core::0131::request-unknown-fields=disabled\n
            \    aip.dev/not-precedent: We really need this field because reasons.
            --)\n project_id"
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/ticketTemplates/{ticketTemplate}:assign:
    get:
      tags:
      - TicketService
      summary: AssignTicketTemplate
      description: Public method to assign ticket_template
      operationId: TicketService_AssignTicketTemplate
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: ticketTemplate
        in: path
        description: The ticketTemplate id.
        required: true
        schema:
          type: string
      - name: project_id
        in: query
        description: template proejct_id
        schema:
          type:
          - integer
          - string
          title: project_id
          format: int64
          description: (OPTIONAL) template proejct_id
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.AssignTicketTemplateResponse'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}:
    get:
      tags:
      - TicketService
      - TicketService
      summary: ListSlaConditions
      description: Public method to list sla conditions
      operationId: TicketService_ListActions
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ListActionsResponse'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/project:
    post:
      tags:
      - TicketService
      summary: CreateProject
      description: Method to create a Project
      operationId: TicketService_CreateProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      requestBody:
        description: the project to be created
        content:
          application/json:
            schema:
              title: project
              description: the project to be created
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects:
    get:
      tags:
      - TicketService
      summary: ListProjects
      description: Method to list Projects
      operationId: TicketService_ListProjects
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: returned page
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
      - name: page_token
        in: query
        description: used to specify the page token
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
      - name: filter
        in: query
        description: used to specify the filter
        schema:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ListProjectsResponse'
  /tcn/tickets/ticket/v1alpha1/orgs/{org}/projects/{project}:
    get:
      tags:
      - TicketService
      summary: GetProject
      description: Method to get a project
      operationId: TicketService_GetProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
    delete:
      tags:
      - TicketService
      summary: DeleteProject
      description: Method to delete a Project
      operationId: TicketService_DeleteProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: If set to true, any project from this org will also be deleted.
        schema:
          type: boolean
          title: force
          description: (OPTIONAL) If set to true, any project from this org will also
            be deleted.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
    patch:
      tags:
      - TicketService
      summary: UpdateProject
      description: Method to update a Project
      operationId: TicketService_UpdateProject
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: project
        in: path
        description: The project id.
        required: true
        schema:
          type: string
      requestBody:
        description: the Project to be updated
        content:
          application/json:
            schema:
              title: project
              description: the Project to be updated
              $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
  /tcn/wfo/scorecards/v1alpha1/orgs/{org}/regions/{region}/categories:
    get:
      tags:
      - ScorecardsService
      summary: ListCategories
      description: ListCategories returns a list of categories.
      operationId: ScorecardsService_ListCategories
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: Number of categories to return.
        schema:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Number of categories to return.
      - name: page_token
        in: query
        description: Token for retreiving the next page of results.
        schema:
          type: string
          title: page_token
          description: (OPTIONAL) Token for retreiving the next page of results.
      - name: filter
        in: query
        description: Filter for categories.
        schema:
          type: string
          title: filter
          description: (OPTIONAL) Filter for categories.
      - name: order_by
        in: query
        description: Sort order for categories.
        schema:
          type: string
          title: order_by
          description: (OPTIONAL) Sort order for categories.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.wfo.scorecards.v1alpha1.ListCategoriesResponse'
    post:
      tags:
      - ScorecardsService
      summary: CreateCategory
      description: CreateCategory creates a category.
      operationId: ScorecardsService_CreateCategory
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      requestBody:
        description: Category to create.
        content:
          application/json:
            schema:
              title: category
              description: Category to create.
              $ref: '#/components/schemas/tcn.wfo.scorecards.v1alpha1.Category'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.wfo.scorecards.v1alpha1.Category'
  /tcn/wfo/scorecards/v1alpha1/orgs/{org}/regions/{region}/categories/{category}:
    get:
      tags:
      - ScorecardsService
      summary: GetCategory
      description: GetCategory returns a category.
      operationId: ScorecardsService_GetCategory
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: category
        in: path
        description: The category id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.wfo.scorecards.v1alpha1.Category'
    delete:
      tags:
      - ScorecardsService
      summary: DeleteCategory
      description: DeleteCategory deletes a category.
      operationId: ScorecardsService_DeleteCategory
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: category
        in: path
        description: The category id.
        required: true
        schema:
          type: string
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/google.protobuf.Empty'
    patch:
      tags:
      - ScorecardsService
      summary: UpdateCategory
      description: UpdateCategory updates a category.
      operationId: ScorecardsService_UpdateCategory
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: category
        in: path
        description: The category id.
        required: true
        schema:
          type: string
      requestBody:
        description: "Category to update.\n\n The category's name field is used to
          identify the category to update.\n Format: `orgs/{org_id}/regions/{region_id}/categories/{category_id}`"
        content:
          application/json:
            schema:
              title: category
              description: "Category to update.\n\n The category's name field is used
                to identify the category to update.\n Format: `orgs/{org_id}/regions/{region_id}/categories/{category_id}`"
              $ref: '#/components/schemas/tcn.wfo.scorecards.v1alpha1.Category'
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.wfo.scorecards.v1alpha1.Category'
  /tcn/wfo/vana/v1alpha1/orgs/{org}/regions/{region}/zones/{zone}/recordings:search:
    post:
      tags:
      - RecordingService
      summary: SearchRecordings
      description: Searches recordings.
      operationId: RecordingService_SearchRecordings
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: zone
        in: path
        description: The zone id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                page_size:
                  type: integer
                  title: page_size
                  format: int32
                  description: (OPTIONAL) Optional. Number of recordings to return.
                    Defaults to 10.
                page_token:
                  type: string
                  title: page_token
                  description: (OPTIONAL) Optional. A token to retrieve the next page
                    of results.
                filter:
                  type: string
                  title: filter
                  description: (OPTIONAL) Optional. AIP-160 filter expression for
                    search results.
                order_by:
                  type: string
                  title: order_by
                  description: "(OPTIONAL) Optional. Comma-separated list of fields
                    to order by, followed by `asc`\n or `desc` postfix. Case insensitive."
                read_mask:
                  title: read_mask
                  description: (OPTIONAL) Optional. Mask specifying which fields to
                    read. Defaults to all fields.
                  $ref: '#/components/schemas/google.protobuf.FieldMask'
              title: SearchRecordingsRequest
              additionalProperties: false
              description: The search recordings request.
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.wfo.vana.v1alpha1.SearchRecordingsResponse'
  /tcn/wfo/vana/v1alpha1/orgs/{org}/regions/{region}/zones/{zone}/recordings/{recording}:generateRecordingDownloadUri:
    post:
      tags:
      - RecordingService
      summary: GenerateRecordingDownloadUri
      description: Generates a recording download URI.
      operationId: RecordingService_GenerateRecordingDownloadUri
      parameters:
      - name: org
        in: path
        description: The org id.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region id.
        required: true
        schema:
          type: string
      - name: zone
        in: path
        description: The zone id.
        required: true
        schema:
          type: string
      - name: recording
        in: path
        description: The recording id.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file_type:
                  type: string
                  title: file_type
                  description: (OPTIONAL) Optional. File type which can be wav or
                    mp3. Defaults to wav.
              title: GenerateRecordingDownloadUriRequest
              additionalProperties: false
              description: The generate recording download uri request.
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tcn.wfo.vana.v1alpha1.GenerateRecordingDownloadUriResponse'
components:
  schemas:
    tcn.api.Application:
      type: string
      title: Application
      enum:
      - APPLICATION_UNSPECIFIED
      - APPLICATION_AGENT
      - APPLICATION_BUSINESS_INTELLIGENCE
      - APPLICATION_DELIVERY_SERVICE
      - APPLICATION_DEV_TOOLS
      - APPLICATION_INTEGRATIONS
      - APPLICATION_LIST_MANAGEMENT_SERVICES
      - APPLICATION_NATURAL_LANGUAGE_COMPLIANCE
      - APPLICATION_OMNI_BOSS
      - APPLICATION_ORGANIZATION
      - APPLICATION_ROOM_303
      - APPLICATION_SCORECARDS
      - APPLICATION_SCRIPTS
      - APPLICATION_TICKETS
      - APPLICATION_VOICE_ANALYTICS
      - APPLICATION_WORK_FORCE_MANAGEMENT
      - APPLICATION_WORKFLOWS
      - APPLICATION_NEWSROOM
      - APPLICATION_CONTACTMANAGER
      - APPLICATION_WFO_AGENT_MANAGER
      - APPLICATION_KNOWLEDGE_BASE
      - APPLICATION_RULE_ENGINE
      description: Application contains license/permission application name constants.
    tcn.api.Card:
      type: string
      title: Card
      enum:
      - CARD_UNSPECIFIED
      - CARD_ORGANIZATION
      - CARD_USERS
      - CARD_AGENTS
      - CARD_PERMISSION_GROUPS
      - CARD_LABELS
      - CARD_TRUSTS
      - CARD_HUNT_GROUPS
      - CARD_SOUNDBOARD
      - CARD_SUBSCRIPTIONS
      - CARD_PBX_MANAGER
      - CARD_AGENT_SCRIPTS
      description: Card contains license/permission card label constants.
    tcn.api.Tcn:
      type: object
      properties:
        wip:
          type: boolean
          title: wip
          description: "Work-in-progress tag. Used to delineate permissions that are
            not\n yet ready to go live. Previously known as \"A la carte\" permissions\n
            in the legacy customer support licensing tool."
          nullable: true
        app:
          title: app
          description: Application which the permission will be grouped under.
          nullable: true
          $ref: '#/components/schemas/tcn.api.Application'
        card:
          title: card
          description: "The card/sub-app section which it's assigned to.\n If no card
            is provided, it will go under the application's default\n card (under
            the same name as the app)."
          nullable: true
          $ref: '#/components/schemas/tcn.api.Card'
        features:
          type: array
          items:
            type: string
          title: features
          description: The list of features or effects the permission grants.
      title: Tcn
      additionalProperties: false
      description: Tcn defines the enum value annotations which will be used for permissions.
    tcn.api.Permission:
      type: string
      title: Permission
      enum:
      - PERMISSION_UNSPECIFIED
      - PERMISSION_DEV
      - PERMISSION_LEARN_EDIT
      - PERMISSION_ORG_EDIT
      - PERMISSION_ORG_VIEW
      - PERMISSION_OWNING_ORG_IMITATION
      - PERMISSION_USER_CREATE
      - PERMISSION_USER_EDIT
      - PERMISSION_USER_EDIT_PASSWORD
      - PERMISSION_USER_EDIT_OPTIONS
      - PERMISSION_LOGIN_CONNECTIONS
      - PERMISSION_USER_EDIT_AGENT_CALLER_ID
      - PERMISSION_ACCESS_TOKEN_MANAGMENT
      - PERMISSION_AGENT_MANAGEMENT
      - PERMISSION_PERMISSION_GROUP_EDIT
      - PERMISSION_PERMISSION_GROUP_ASSIGN
      - PERMISSION_LABEL_MANAGEMENT
      - PERMISSION_LABEL_ATTACH
      - PERMISSION_TRUST_MANAGEMENT
      - PERMISSION_HUNTGROUP_VIEW
      - PERMISSION_HUNTGROUP_EDIT
      - PERMISSION_AGENT_SCRIPTS_VIEW
      - PERMISSION_AGENT_SCRIPTS_EDIT
      - PERMISSION_SOUNDBOARD_VIEW
      - PERMISSION_SOUNDBOARD_EDIT
      - PERMISSION_SUBSCRIPTION_MANAGEMENT
      - PERMISSION_COPY_TO_ORGANIZATION
      - PERMISSION_CUSTOMER_SUPPORT
      - PERMISSION_IMITATION
      - PERMISSION_BILLING_EDIT
      - PERMISSION_TCN_ADMIN_SETTINGS
      - PERMISSION_TCN_BILLING
      - PERMISSION_TCN_BILLING_ADMIN
      - PERMISSION_SUPPORT_TCN_INSIGHTS_ADMIN
      - PERMISSION_SUPPORT_TCN_DASHBOARDS_ADMIN
      - PERMISSION_AGENT
      - PERMISSION_ACCEPT_QUEUED_CALLS
      - PERMISSION_VIEW_HOLD_QUEUE
      - PERMISSION_VIEW_CAMPAIGN_COMPLETION
      - PERMISSION_VIEW_VOICE_MAIL
      - PERMISSION_AGENT_COMPLIANCE_SCRUBLIST_OPTIONS
      - PERMISSION_EXTENSION_EDIT
      - PERMISSION_VOICEMAIL_DOWNLOAD
      - PERMISSION_AGENT_PORTALS_VIEW
      - PERMISSION_MANUAL_APPROVE
      - PERMISSION_AGENT_PLUGINS_VIEW
      - PERMISSION_AGENT_HUNTGROUP_INTEGRATIONS_VIEW
      - PERMISSION_MANUAL_CONVERSATION
      - PERMISSION_AGENT_ASSISTED_PORTAL
      - PERMISSION_CHANGE_OWN_HUNT_GROUP
      - PERMISSION_CHANGE_OWN_SKILL_GROUPS
      - PERMISSION_VOICE_ANALYTICS
      - PERMISSION_VOICE_ANALYTICS_FLAG
      - PERMISSION_VOICE_ANALYTICS_CONFIG
      - PERMISSION_VOICE_ANALYTICS_RECORDING_DOWNLOAD
      - PERMISSION_VOICE_ANALYTICS_TRANSCRIPT_DOWNLOAD
      - PERMISSION_VOICE_ANALYTICS_SCREEN_RECORDING
      - PERMISSION_VOICE_ANALYTICS_TRANSCRIPT_DELETE
      - PERMISSION_VOICE_ANALYTICS_SCREEN_RECORDING_DELETE
      - PERMISSION_BUSINESS_INTELLIGENCE
      - PERMISSION_DASHBOARDS_VIEW
      - PERMISSION_DASHBOARDS_EDIT
      - PERMISSION_INSIGHTS_COMMON_LIBRARY_MANAGE
      - PERMISSION_INSIGHTS_MANAGE
      - PERMISSION_INSIGHTS_INSIGHT_VIEW
      - PERMISSION_INSIGHTS_INSIGHT_EDIT
      - PERMISSION_INSIGHTS_DASHBOARD_VIEW
      - PERMISSION_INSIGHTS_DASHBOARD_EDIT
      - PERMISSION_REPORT_GENERATOR_EDIT
      - PERMISSION_ROOM303
      - PERMISSION_ROOM303_MEMBER
      - PERMISSION_ROOM303_SUPERVISOR
      - PERMISSION_AGENT_CALL_SCRIPTS
      - PERMISSION_COMPLIANCE
      - PERMISSION_COMPLIANCE_CONSENT
      - PERMISSION_LMS_VIEW
      - PERMISSION_LMS_EDIT
      - PERMISSION_OMNI_BOSS
      - PERMISSION_OMNI_BOSS_EDIT
      - PERMISSION_OMNI_PORTALS_VIEW
      - PERMISSION_INTEGRATIONS_VIEW
      - PERMISSION_INTEGRATIONS_PAYMENT
      - PERMISSION_INTEGRATIONS_JOURNEY
      - PERMISSIONS_INTEGRATIONS_KEY_CREATION
      - PERMISSION_WFM
      - PERMISSION_AGENT_PORTAL
      - PERMISSION_WFM_ADHERENCE_ADMIN
      - PERMISSION_WFM_ADHERENCE_MANAGER
      - PERMISSION_WFM_ADHERENCE_MONITOR
      - PERMISSION_SCORECARDS
      - PERMISSION_SCORECARDS_MANAGE
      - PERMISSION_SCORECARDS_EVALUATE
      - PERMISSION_SCORECARDS_FLAG_EVAL
      - PERMISSION_SCORECARDS_LEARNING_OPPORTUNITIES
      - PERMISSION_DEV_TOOLS
      - PERMISSION_DELIVERY_NOTIFICATIONS_VIEW
      - PERMISSION_DELIVERY_NOTIFICATIONS_EDIT
      - PERMISSION_TICKETS_APP
      - PERMISSION_TICKETS_ADMIN
      - PERMISSION_WORKFLOWS
      - PERMISSION_PBX_MANAGER_VIEW
      - PERMISSION_PBX_MANAGER_EDIT
      - PERMISSION_PBX_SOFTPHONE_WIDGET
      - PERMISSION_NEWSROOM_VIEW
      - PERMISSION_NEWSROOM_EDIT
      - PERMISSION_NEWSROOM_PUBLISH
      - PERMISSION_NEWSROOM_CLIENT_CONTROL
      - PERMISSION_CONTACTMANAGER_ADMIN
      - PERMISSION_CONTACTMANAGER_APP
      - PERMISSION_KNOWLEDGE_BASE_EDIT
      - PERMISSION_RULE_ENGINE
      description: Permission enum contains the permissions to be used for access
        control.
    tcn.api.PermissionSet:
      type: object
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.api.Permission'
          title: permissions
        taint:
          title: taint
          nullable: true
          $ref: '#/components/schemas/tcn.api.Taint'
      title: PermissionSet
      additionalProperties: false
    tcn.api.Permissions:
      type: object
      properties:
        sets:
          type: array
          items:
            $ref: '#/components/schemas/tcn.api.PermissionSet'
          title: sets
          description: "A list of permission sets - atleast one set must exist in
            the list\n to allow access."
        wip:
          type: boolean
          title: wip
          description: "WIP inject PERMISSION_DEV into the required list\n don't use
            it, it will be removed soon"
          nullable: true
          deprecated: true
        no_permissions:
          type: boolean
          title: no_permissions
          description: "Indicate that the method will use no permissions - it will
            be public.\n Be careful with this."
          nullable: true
      title: Permissions
      additionalProperties: false
      description: Permissions - annotation object
    tcn.api.Taint:
      type: object
      properties:
        id:
          type: integer
          title: id
          format: int32
          description: id of the request message field that will be checked.
          nullable: true
        value:
          type: integer
          title: value
          format: int32
          description: value that the request mesage field with id is required to
            match.
          nullable: true
      title: Taint
      additionalProperties: false
    tcn.bi.businessIntelligence.v1alpha1.ApplicationDashboard:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) application dashboard identifier
        dashboard_id:
          type: string
          title: dashboard_id
          description: dashboard identifier
      title: ApplicationDashboard
      required:
      - dashboard_id
      additionalProperties: false
      description: ApplicationDashboard is a bi resource to display dashboard within
        an application.
    tcn.bi.businessIntelligence.v1alpha1.CreateApplicationDashboardRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent resource
        application_dashboard_id:
          type: string
          title: application_dashboard_id
          description: (OPTIONAL) id to create
        application_dashboard:
          title: application_dashboard
          description: ApplicationDashboard to create
          $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.ApplicationDashboard'
      title: CreateApplicationDashboardRequest
      required:
      - parent
      - application_dashboard
      additionalProperties: false
      description: CreateApplicationDashboardRequest assigns a dashboard to an application
    tcn.bi.businessIntelligence.v1alpha1.DeleteApplicationDashboardRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the application dashboard
      title: DeleteApplicationDashboardRequest
      required:
      - name
      additionalProperties: false
      description: DeleteApplicationDashboardRequest used in DeleteApplicationDashboard
        rpc
    tcn.bi.businessIntelligence.v1alpha1.GetApplicationDashboardRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the application dashboard
      title: GetApplicationDashboardRequest
      required:
      - name
      additionalProperties: false
      description: GetApplicationDashboardRequest used in GetApplicationDashboard
        rpc
    tcn.bi.businessIntelligence.v1alpha1.ListApplicationDashboardsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent resource
        filter:
          type: string
          title: filter
          description: (OPTIONAL) filter
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      title: ListApplicationDashboardsRequest
      required:
      - parent
      additionalProperties: false
      description: ListApplicationDashboardsRequest lists apps and assigned dashboards
    tcn.bi.businessIntelligence.v1alpha1.ListApplicationDashboardsResponse:
      type: object
      properties:
        application_dashboards:
          type: array
          items:
            $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.ApplicationDashboard'
          title: application_dashboards
          description: list of application dashboards
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListApplicationDashboardsResponse
      additionalProperties: false
      description: ListApplicationDashboardsResponse used in ListApplicationDashboards
        rpc
    google.protobuf.FieldMask:
      type: string
      description: "`FieldMask` represents a set of symbolic field paths, for example:\n\n
        \    paths: \"f.a\"\n     paths: \"f.b.d\"\n\n Here `f` represents a field
        in some root message, `a` and `b`\n fields in the message found in `f`, and
        `d` a field found in the\n message in `f.b`.\n\n Field masks are used to specify
        a subset of fields that should be\n returned by a get operation or modified
        by an update operation.\n Field masks also have a custom JSON encoding (see
        below).\n\n # Field Masks in Projections\n\n When used in the context of a
        projection, a response message or\n sub-message is filtered by the API to
        only contain those fields as\n specified in the mask. For example, if the
        mask in the previous\n example is applied to a response message as follows:\n\n
        \    f {\n       a : 22\n       b {\n         d : 1\n         x : 2\n       }\n
        \      y : 13\n     }\n     z: 8\n\n The result will not contain specific
        values for fields x,y and z\n (their value will be set to the default, and
        omitted in proto text\n output):\n\n\n     f {\n       a : 22\n       b {\n
        \        d : 1\n       }\n     }\n\n A repeated field is not allowed except
        at the last position of a\n paths string.\n\n If a FieldMask object is not
        present in a get operation, the\n operation applies to all fields (as if a
        FieldMask of all fields\n had been specified).\n\n Note that a field mask
        does not necessarily apply to the\n top-level response message. In case of
        a REST get operation, the\n field mask applies directly to the response, but
        in case of a REST\n list operation, the mask instead applies to each individual
        message\n in the returned resource list. In case of a REST custom method,\n
        other definitions may be used. Where the mask applies will be\n clearly documented
        together with its declaration in the API.  In\n any case, the effect on the
        returned resource/resources is required\n behavior for APIs.\n\n # Field Masks
        in Update Operations\n\n A field mask in update operations specifies which
        fields of the\n targeted resource are going to be updated. The API is required\n
        to only change the values of the fields as specified in the mask\n and leave
        the others untouched. If a resource is passed in to\n describe the updated
        values, the API ignores the values of all\n fields not covered by the mask.\n\n
        If a repeated field is specified for an update operation, new values will\n
        be appended to the existing repeated field in the target resource. Note that\n
        a repeated field is only allowed in the last position of a `paths` string.\n\n
        If a sub-message is specified in the last position of the field mask for an\n
        update operation, then new value will be merged into the existing sub-message\n
        in the target resource.\n\n For example, given the target message:\n\n     f
        {\n       b {\n         d: 1\n         x: 2\n       }\n       c: [1]\n     }\n\n
        And an update message:\n\n     f {\n       b {\n         d: 10\n       }\n
        \      c: [2]\n     }\n\n then if the field mask is:\n\n  paths: [\"f.b\",
        \"f.c\"]\n\n then the result will be:\n\n     f {\n       b {\n         d:
        10\n         x: 2\n       }\n       c: [1, 2]\n     }\n\n An implementation
        may provide options to override this default behavior for\n repeated and message
        fields.\n\n In order to reset a field's value to the default, the field must\n
        be in the mask and set to the default value in the provided resource.\n Hence,
        in order to reset all fields of a resource, provide a default\n instance of
        the resource and set all fields in the mask, or do\n not provide a mask as
        described below.\n\n If a field mask is not present on update, the operation
        applies to\n all fields (as if a field mask of all fields has been specified).\n
        Note that in the presence of schema evolution, this may mean that\n fields
        the client does not know and has therefore not filled into\n the request will
        be reset to their default. If this is unwanted\n behavior, a specific service
        may require a client to always specify\n a field mask, producing an error
        if not.\n\n As with get operations, the location of the resource which\n describes
        the updated values in the request message depends on the\n operation kind.
        In any case, the effect of the field mask is\n required to be honored by the
        API.\n\n ## Considerations for HTTP REST\n\n The HTTP kind of an update operation
        which uses a field mask must\n be set to PATCH instead of PUT in order to
        satisfy HTTP semantics\n (PUT must only be used for full updates).\n\n # JSON
        Encoding of Field Masks\n\n In JSON, a field mask is encoded as a single string
        where paths are\n separated by a comma. Fields name in each path are converted\n
        to/from lower-camel naming conventions.\n\n As an example, consider the following
        message declarations:\n\n     message Profile {\n       User user = 1;\n       Photo
        photo = 2;\n     }\n     message User {\n       string display_name = 1;\n
        \      string address = 2;\n     }\n\n In proto a field mask for `Profile`
        may look as such:\n\n     mask {\n       paths: \"user.display_name\"\n       paths:
        \"photo\"\n     }\n\n In JSON, the same mask is represented as below:\n\n
        \    {\n       mask: \"user.displayName,photo\"\n     }\n\n # Field Masks
        and Oneof Fields\n\n Field masks treat fields in oneofs just as regular fields.
        Consider the\n following message:\n\n     message SampleMessage {\n       oneof
        test_oneof {\n         string name = 4;\n         SubMessage sub_message =
        9;\n       }\n     }\n\n The field mask can be:\n\n     mask {\n       paths:
        \"name\"\n     }\n\n Or:\n\n     mask {\n       paths: \"sub_message\"\n     }\n\n
        Note that oneof type names (\"test_oneof\" in this case) cannot be used in\n
        paths.\n\n ## Field Mask Verification\n\n The implementation of any API method
        which has a FieldMask type field in the\n request should verify the included
        field paths, and return an\n `INVALID_ARGUMENT` error if any path is unmappable."
    google.protobuf.Timestamp:
      type: string
      examples:
      - 1s
      - 1.000340012s
      format: date-time
      description: "A Timestamp represents a point in time independent of any time
        zone or local\n calendar, encoded as a count of seconds and fractions of seconds
        at\n nanosecond resolution. The count is relative to an epoch at UTC midnight
        on\n January 1, 1970, in the proleptic Gregorian calendar which extends the\n
        Gregorian calendar backwards to year one.\n\n All minutes are 60 seconds long.
        Leap seconds are \"smeared\" so that no leap\n second table is needed for
        interpretation, using a [24-hour linear\n smear](https://developers.google.com/time/smear).\n\n
        The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z.
        By\n restricting to that range, we ensure that we can convert to and from
        [RFC\n 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n\n # Examples\n\n
        Example 1: Compute Timestamp from POSIX `time()`.\n\n     Timestamp timestamp;\n
        \    timestamp.set_seconds(time(NULL));\n     timestamp.set_nanos(0);\n\n
        Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n\n     struct timeval
        tv;\n     gettimeofday(&tv, NULL);\n\n     Timestamp timestamp;\n     timestamp.set_seconds(tv.tv_sec);\n
        \    timestamp.set_nanos(tv.tv_usec * 1000);\n\n Example 3: Compute Timestamp
        from Win32 `GetSystemTimeAsFileTime()`.\n\n     FILETIME ft;\n     GetSystemTimeAsFileTime(&ft);\n
        \    UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n\n
        \    // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n
        \    // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n     Timestamp
        timestamp;\n     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n
        \    timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n\n Example
        4: Compute Timestamp from Java `System.currentTimeMillis()`.\n\n     long
        millis = System.currentTimeMillis();\n\n     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis
        / 1000)\n         .setNanos((int) ((millis % 1000) * 1000000)).build();\n\n\n
        Example 5: Compute Timestamp from current time in Python.\n\n     timestamp
        = Timestamp()\n     timestamp.GetCurrentTime()\n\n # JSON Mapping\n\n In JSON
        format, the Timestamp type is encoded as a string in the\n [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt)
        format. That is, the\n format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n
        where {year} is always expressed using four digits while {month}, {day},\n
        {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n
        seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n
        are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n
        is required. A proto3 JSON serializer should always use UTC (as indicated
        by\n \"Z\") when printing the Timestamp type and a proto3 JSON parser should
        be\n able to accept both UTC and other timezones (as indicated by an offset).\n\n
        For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n 01:30
        UTC on January 15, 2017.\n\n In JavaScript, one can convert a Date object
        to this format using the\n standard\n [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n
        method. In Python, a standard `datetime.datetime` object can be converted\n
        to this format using\n [`strftime`](https://docs.python.org/2/library/time.html#time.strftime)
        with\n the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one
        can use\n the Joda Time's [`ISODateTimeFormat.dateTime()`](\n http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D\n
        ) to obtain a formatter capable of generating timestamps in this format."
    tcn.bi.businessIntelligence.v1alpha1.CreateDashboardRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent resource where this skill group will be created.
        dashboard_id:
          type: string
          title: dashboard_id
          description: (OPTIONAL) The dashboard id to create.
        dashboard:
          title: dashboard
          description: Required. The dashboard to create.
          $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.Dashboard'
      title: CreateDashboardRequest
      required:
      - parent
      - dashboard
      additionalProperties: false
      description: Request to create a dashboard.
    tcn.bi.businessIntelligence.v1alpha1.Dashboard:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) dashboard identifier
        title:
          type: string
          title: title
          description: dashboard title
        description:
          type: string
          title: description
          description: (OPTIONAL) description of the dashboard
        serialized_config:
          type: string
          title: serialized_config
          description: (OPTIONAL) serialized configuration ui uses to render the dashboard
        panels:
          type: array
          items:
            $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.Dashboard.DashboardPanel'
          title: panels
          description: (OPTIONAL) dashboard panels
        is_standard:
          type: boolean
          title: is_standard
          description: flag to indicate if dashboard is standard
          readOnly: true
        create_time:
          title: create_time
          description: creation date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: last update date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Dashboard
      required:
      - title
      additionalProperties: false
      description: Dashboard is a bi resource to display insights.
    tcn.bi.businessIntelligence.v1alpha1.Dashboard.DashboardPanel:
      type: object
      properties:
        row_length:
          type:
          - integer
          - string
          title: row_length
          format: int64
          description: height of panel
        column_length:
          type:
          - integer
          - string
          title: column_length
          format: int64
          description: length of panel
        row_start:
          type:
          - integer
          - string
          title: row_start
          format: int64
          description: absolute x position of panel
        column_start:
          type:
          - integer
          - string
          title: column_start
          format: int64
          description: absoulute y position of panel
        insight_id:
          type: string
          title: insight_id
          description: insight identifier
        insight_output_config_id:
          type: string
          title: insight_output_config_id
          description: insight output configuration identifier
      title: DashboardPanel
      required:
      - row_length
      - column_length
      - row_start
      - column_start
      - insight_id
      - insight_output_config_id
      additionalProperties: false
      description: dashboard panels
    tcn.bi.businessIntelligence.v1alpha1.DeleteDashboardRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: Required. The name of the dashboard to delete.
      title: DeleteDashboardRequest
      required:
      - name
      additionalProperties: false
      description: Request to delete a dashboard.
    tcn.bi.businessIntelligence.v1alpha1.GetDashboardRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: Required. The name of the dashboard to get.
      title: GetDashboardRequest
      required:
      - name
      additionalProperties: false
      description: Request to get a dashboard.
    tcn.bi.businessIntelligence.v1alpha1.ListDashboardsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent resource to list dashboards from.
        page_size:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) The maximum number of books to return. The service
            may return fewer than\n this value.\n If unspecified, at most 50 dashboards
            will be returned.\n The maximum value is 1000; values above 1000 will
            be coerced to 1000."
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) A page token, received from a previous `ListDashboards`
            call.\n Provide this to retrieve the subsequent page."
      title: ListDashboardsRequest
      required:
      - parent
      additionalProperties: false
      description: Request to list dashboards.
    tcn.bi.businessIntelligence.v1alpha1.ListDashboardsResponse:
      type: object
      properties:
        dashboards:
          type: array
          items:
            $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.Dashboard'
          title: dashboards
          description: The list of dashboards.
        next_page_token:
          type: string
          title: next_page_token
          description: The next page token.
      title: ListDashboardsResponse
      additionalProperties: false
      description: Response to list dashboards.
    tcn.bi.businessIntelligence.v1alpha1.UpdateDashboardRequest:
      type: object
      properties:
        dashboard:
          title: dashboard
          description: Required. The dashboard to update.
          $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.Dashboard'
        update_mask:
          title: update_mask
          description: (OPTIONAL) Required. The update mask to apply to the dashboard.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateDashboardRequest
      required:
      - dashboard
      additionalProperties: false
      description: Request to update a dashboard.
    tcn.bi.businessIntelligence.v1alpha1.DefaultDashboard:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) default dashboard identifier
        dashboard_id:
          type: string
          title: dashboard_id
          description: dashboard identifier
        user_id:
          type: string
          title: user_id
          description: user identifier
      title: DefaultDashboard
      required:
      - dashboard_id
      - user_id
      additionalProperties: false
      description: DefaultDashboard is a bi resource that represents the default dashboard
        for a user.
    tcn.bi.businessIntelligence.v1alpha1.GetDefaultDashboardRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: resource name
      title: GetDefaultDashboardRequest
      required:
      - name
      additionalProperties: false
      description: GetDefaultDashboardRequest gets a default dashboard for a user
    tcn.bi.businessIntelligence.v1alpha1.ListDefaultDashboardsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent resource
        filter:
          type: string
          title: filter
          description: (OPTIONAL) filter
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      title: ListDefaultDashboardsRequest
      required:
      - parent
      additionalProperties: false
      description: ListDefaultDashboardsRequest lists default dashboards for users
    tcn.bi.businessIntelligence.v1alpha1.ListDefaultDashboardsResponse:
      type: object
      properties:
        default_dashboards:
          type: array
          items:
            $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.DefaultDashboard'
          title: default_dashboards
          description: default dashboards
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListDefaultDashboardsResponse
      additionalProperties: false
      description: ListDefaultDashboardsResponse lists default dashboards for users
    tcn.bi.businessIntelligence.v1alpha1.UpsertDefaultDashboardRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent resource
        default_dashboard_id:
          type: string
          title: default_dashboard_id
          description: (OPTIONAL) id to create
        default_dashboard:
          title: default_dashboard
          description: DefaultDashboard to create
          $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.DefaultDashboard'
      title: UpsertDefaultDashboardRequest
      required:
      - parent
      - default_dashboard
      additionalProperties: false
      description: UpsertDefaultDashboardRequest assigns a dashboard to a user
    tcn.bi.businessIntelligence.v1alpha1.UpsertDefaultDashboardResponse:
      type: object
      properties:
        default_dashboard:
          title: default_dashboard
          description: upserted default dashboard
          $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.DefaultDashboard'
      title: UpsertDefaultDashboardResponse
      additionalProperties: false
      description: UpsertDefaultDashboardResponse response for upserting a default
        dashboard
    google.protobuf.Empty:
      type: object
      description: "A generic empty message that you can re-use to avoid defining
        duplicated\n empty messages in your APIs. A typical example is to use it as
        the request\n or the response type of an API method. For instance:\n\n     service
        Foo {\n       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n
        \    }\n\n The JSON representation for `Empty` is empty JSON object `{}`."
    tcn.bi.businessIntelligence.v1alpha1.PublishDashboardRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: Required. The name of the dashboard to publish.
        destination_standard_dashboard_id:
          type: string
          title: destination_standard_dashboard_id
          description: (OPTIONAL) Optional. The destination standard dashboard id
            to publish over.
      title: PublishDashboardRequest
      required:
      - name
      additionalProperties: false
      description: Request to publish a dashboard.
    tcn.bi.businessIntelligence.v1alpha1.PublishDashboardResponse:
      type: object
      properties:
        dashboard:
          title: dashboard
          description: The published dashboard.
          $ref: '#/components/schemas/tcn.bi.businessIntelligence.v1alpha1.Dashboard'
      title: PublishDashboardResponse
      additionalProperties: false
      description: Response to publish a dashboard.
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
      - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
          - not_found
          enum:
          - canceled
          - unknown
          - invalid_argument
          - deadline_exceeded
          - not_found
          - already_exists
          - permission_denied
          - resource_exhausted
          - failed_precondition
          - aborted
          - out_of_range
          - unimplemented
          - internal
          - unavailable
          - data_loss
          - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English.
            Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details]
            field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that
        describes the type of the serialized message.
    tcn.bi.dashboards.v1alpha1.Dashboard:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) dashboard identifier
        title:
          type: string
          title: title
          description: dashboard title
        description:
          type: string
          title: description
          description: (OPTIONAL) description of the dashboard
        serialized_config:
          type: string
          title: serialized_config
          description: (OPTIONAL) serialized configuration ui uses to render the dashboard
        panels:
          type: array
          items:
            $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard.DashboardPanel'
          title: panels
          description: (OPTIONAL) dashboard panels
        is_standard:
          type: boolean
          title: is_standard
          description: flag to indicate if dashboard is standard
          readOnly: true
        create_time:
          title: create_time
          description: creation date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: last update date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Dashboard
      required:
      - title
      additionalProperties: false
      description: Dashboard is a bi resource to display insights.
    tcn.bi.dashboards.v1alpha1.Dashboard.DashboardPanel:
      type: object
      properties:
        row_length:
          type:
          - integer
          - string
          title: row_length
          format: int64
          description: height of panel
        column_length:
          type:
          - integer
          - string
          title: column_length
          format: int64
          description: length of panel
        row_start:
          type:
          - integer
          - string
          title: row_start
          format: int64
          description: absolute x position of panel
        column_start:
          type:
          - integer
          - string
          title: column_start
          format: int64
          description: absoulute y position of panel
        insight_id:
          type: string
          title: insight_id
          description: insight identifier
        insight_output_config_id:
          type: string
          title: insight_output_config_id
          description: insight output configuration identifier
      title: DashboardPanel
      required:
      - row_length
      - column_length
      - row_start
      - column_start
      - insight_id
      - insight_output_config_id
      additionalProperties: false
      description: dashboard panels
    tcn.bi.dashboards.v1alpha1.CreateDashboardRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent resource where this skill group will be created.
        dashboard_id:
          type: string
          title: dashboard_id
          description: (OPTIONAL) The dashboard id to create.
        dashboard:
          title: dashboard
          description: Required. The dashboard to create.
          $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
      title: CreateDashboardRequest
      required:
      - parent
      - dashboard
      additionalProperties: false
      description: Request to create a dashboard.
    tcn.bi.dashboards.v1alpha1.DeleteDashboardRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: Required. The name of the dashboard to delete.
      title: DeleteDashboardRequest
      required:
      - name
      additionalProperties: false
      description: Request to delete a dashboard.
    tcn.bi.dashboards.v1alpha1.GetDashboardRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: Required. The name of the dashboard to get.
      title: GetDashboardRequest
      required:
      - name
      additionalProperties: false
      description: Request to get a dashboard.
    tcn.bi.dashboards.v1alpha1.ListDashboardsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent resource to list dashboards from.
        page_size:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) The maximum number of books to return. The service
            may return fewer than\n this value.\n If unspecified, at most 50 dashboards
            will be returned.\n The maximum value is 1000; values above 1000 will
            be coerced to 1000."
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) A page token, received from a previous `ListDashboards`
            call.\n Provide this to retrieve the subsequent page."
      title: ListDashboardsRequest
      required:
      - parent
      additionalProperties: false
      description: Request to list dashboards.
    tcn.bi.dashboards.v1alpha1.ListDashboardsResponse:
      type: object
      properties:
        dashboards:
          type: array
          items:
            $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
          title: dashboards
          description: The list of dashboards.
        next_page_token:
          type: string
          title: next_page_token
          description: The next page token.
      title: ListDashboardsResponse
      additionalProperties: false
      description: Response to list dashboards.
    tcn.bi.dashboards.v1alpha1.LoadDefaultDashboardRequest:
      type: object
      title: LoadDefaultDashboardRequest
      additionalProperties: false
      description: Request to get the default dashboard.
    tcn.bi.dashboards.v1alpha1.LoadDefaultDashboardResponse:
      type: object
      properties:
        dashboard:
          title: dashboard
          description: The default dashboard.
          $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
      title: LoadDefaultDashboardResponse
      additionalProperties: false
      description: Response to get the default dashboard.
    tcn.bi.dashboards.v1alpha1.MarkDefaultDashboardRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: Required. The name of the dashboard to set as default.
      title: MarkDefaultDashboardRequest
      required:
      - name
      additionalProperties: false
      description: Request to set the default dashboard.
    tcn.bi.dashboards.v1alpha1.MarkDefaultDashboardResponse:
      type: object
      properties:
        dashboard:
          title: dashboard
          description: The default dashboard.
          $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
      title: MarkDefaultDashboardResponse
      additionalProperties: false
      description: Response to set the default dashboard.
    tcn.bi.dashboards.v1alpha1.PublishDashboardRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: Required. The name of the dashboard to publish.
      title: PublishDashboardRequest
      required:
      - name
      additionalProperties: false
      description: Request to publish a dashboard.
    tcn.bi.dashboards.v1alpha1.PublishDashboardResponse:
      type: object
      properties:
        dashboard:
          title: dashboard
          description: The published dashboard.
          $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
      title: PublishDashboardResponse
      additionalProperties: false
      description: Response to publish a dashboard.
    tcn.bi.dashboards.v1alpha1.UpdateDashboardRequest:
      type: object
      properties:
        dashboard:
          title: dashboard
          description: Required. The dashboard to update.
          $ref: '#/components/schemas/tcn.bi.dashboards.v1alpha1.Dashboard'
        update_mask:
          title: update_mask
          description: (OPTIONAL) Required. The update mask to apply to the dashboard.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateDashboardRequest
      required:
      - dashboard
      additionalProperties: false
      description: Request to update a dashboard.
    tcn.delivery.credential.v1alpha1.Credential:
      type: object
      oneOf:
      - properties:
          aes_password:
            title: aes_password
            description: (OPTIONAL) aes password
            $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential.AESPassword'
        title: aes_password
        required:
        - aes_password
      - properties:
          password:
            title: password
            description: (OPTIONAL) password
            $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential.Password'
        title: password
        required:
        - password
      - properties:
          pgp_key_pair:
            title: pgp_key_pair
            description: (OPTIONAL) key pair for pgp
            $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential.PGPKeyPair'
        title: pgp_key_pair
        required:
        - pgp_key_pair
      - properties:
          ssh_key_pair:
            title: ssh_key_pair
            description: (OPTIONAL) key pair for ssh
            $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential.SSHKeyPair'
        title: ssh_key_pair
        required:
        - ssh_key_pair
      - properties:
          user_password:
            title: user_password
            description: (OPTIONAL) user name and password
            $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential.UserPassword'
        title: user_password
        required:
        - user_password
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name of the credential
        display_name:
          type: string
          title: display_name
          description: "the name that the client provides the transport schema.\n
            should be unique for the org"
        description:
          type: string
          title: description
          description: (OPTIONAL) the description
        create_time:
          title: create_time
          description: create time
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: update times
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Credential
      required:
      - display_name
      additionalProperties: false
      description: delivery credential
    tcn.delivery.credential.v1alpha1.Credential.AESPassword:
      type: object
      properties:
        password:
          type: string
          title: password
          description: aes password
      title: AESPassword
      required:
      - password
      additionalProperties: false
      description: aes password
    tcn.delivery.credential.v1alpha1.Credential.PGPKeyPair:
      type: object
      properties:
        public_key:
          type: string
          title: public_key
          description: public pgp key
        private_key:
          type: string
          title: private_key
          description: private pgp key
      title: PGPKeyPair
      required:
      - public_key
      - private_key
      additionalProperties: false
      description: pgp
    tcn.delivery.credential.v1alpha1.Credential.Password:
      type: object
      properties:
        password:
          type: string
          title: password
          description: password
      title: Password
      required:
      - password
      additionalProperties: false
      description: password
    tcn.delivery.credential.v1alpha1.Credential.SSHKeyPair:
      type: object
      properties:
        public_key:
          type: string
          title: public_key
          description: public ssh key
        private_key:
          type: string
          title: private_key
          description: private ssh key
      title: SSHKeyPair
      required:
      - public_key
      - private_key
      additionalProperties: false
      description: ssh
    tcn.delivery.credential.v1alpha1.Credential.UserPassword:
      type: object
      properties:
        username:
          type: string
          title: username
          description: username
        password:
          type: string
          title: password
          description: password
      title: UserPassword
      required:
      - username
      - password
      additionalProperties: false
      description: user password message
    tcn.delivery.credential.v1alpha1.CreateCredentialRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: where to create credential
        credential_id:
          type: string
          title: credential_id
          description: (OPTIONAL) optional id
        credential:
          title: credential
          description: credential to create
          $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential'
      title: CreateCredentialRequest
      required:
      - parent
      - credential
      additionalProperties: false
      description: create credential
    tcn.delivery.credential.v1alpha1.DeleteCredentialRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: what credential to delete
      title: DeleteCredentialRequest
      required:
      - name
      additionalProperties: false
      description: delete credential req
    tcn.delivery.credential.v1alpha1.GetCredentialRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: what credential to get
      title: GetCredentialRequest
      required:
      - name
      additionalProperties: false
      description: get credential
    tcn.delivery.credential.v1alpha1.ListCredentialsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent to list from
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) how many credentials to get
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) pagination token
      title: ListCredentialsRequest
      required:
      - parent
      additionalProperties: false
      description: list credential req
    tcn.delivery.credential.v1alpha1.ListCredentialsResponse:
      type: object
      properties:
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential'
          title: credentials
          description: credentials
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListCredentialsResponse
      additionalProperties: false
      description: list of credentials
    tcn.delivery.credential.v1alpha1.UpdateCredentialRequest:
      type: object
      properties:
        credential:
          title: credential
          description: credential to update based on
          $ref: '#/components/schemas/tcn.delivery.credential.v1alpha1.Credential'
        update_mask:
          title: update_mask
          description: (OPTIONAL) fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateCredentialRequest
      required:
      - credential
      additionalProperties: false
      description: update credential req
    tcn.delivery.encryption.v1alpha1.Encryption:
      type: object
      oneOf:
      - properties:
          aes_password:
            title: aes_password
            description: (OPTIONAL) aes
            $ref: '#/components/schemas/tcn.delivery.encryption.v1alpha1.Encryption.AESPassword'
        title: aes_password
        required:
        - aes_password
      - properties:
          pgp_key_pair:
            title: pgp_key_pair
            description: (OPTIONAL) pgp
            $ref: '#/components/schemas/tcn.delivery.encryption.v1alpha1.Encryption.PGPKeyPair'
        title: pgp_key_pair
        required:
        - pgp_key_pair
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name of the encryption
        display_name:
          type: string
          title: display_name
          description: name to display
        description:
          type: string
          title: description
          description: (OPTIONAL) description of encryption
        create_time:
          title: create_time
          description: create time
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: update time
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Encryption
      required:
      - display_name
      additionalProperties: false
      description: encryption definition
    tcn.delivery.encryption.v1alpha1.Encryption.AESPassword:
      type: object
      properties:
        password:
          type: string
          title: password
          description: password
      title: AESPassword
      required:
      - password
      additionalProperties: false
      description: aes
    tcn.delivery.encryption.v1alpha1.Encryption.PGPKeyPair:
      type: object
      properties:
        public_key:
          type: string
          title: public_key
          description: public key
        private_key:
          type: string
          title: private_key
          description: private key
      title: PGPKeyPair
      required:
      - public_key
      - private_key
      additionalProperties: false
      description: pgp
    tcn.delivery.encryption.v1alpha1.CreateEncryptionRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: where to create encryption
        encryption_id:
          type: string
          title: encryption_id
          description: (OPTIONAL) optional id
        encryption:
          title: encryption
          description: encryption to create
          $ref: '#/components/schemas/tcn.delivery.encryption.v1alpha1.Encryption'
      title: CreateEncryptionRequest
      required:
      - parent
      - encryption
      additionalProperties: false
      description: create encryption request
    tcn.delivery.encryption.v1alpha1.DeleteEncryptionRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: encryption to delete
      title: DeleteEncryptionRequest
      required:
      - name
      additionalProperties: false
      description: delete encryption
    tcn.delivery.encryption.v1alpha1.GetEncryptionRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: encryption to get
      title: GetEncryptionRequest
      required:
      - name
      additionalProperties: false
      description: get request
    tcn.delivery.encryption.v1alpha1.ListEncryptionsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: what encryptions to list
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      title: ListEncryptionsRequest
      required:
      - parent
      additionalProperties: false
      description: list request
    tcn.delivery.encryption.v1alpha1.ListEncryptionsResponse:
      type: object
      properties:
        encryptions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.delivery.encryption.v1alpha1.Encryption'
          title: encryptions
          description: list of returned encryptions
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListEncryptionsResponse
      additionalProperties: false
      description: list response
    tcn.delivery.encryption.v1alpha1.UpdateEncryptionRequest:
      type: object
      properties:
        encryption:
          title: encryption
          description: encryption to update based on
          $ref: '#/components/schemas/tcn.delivery.encryption.v1alpha1.Encryption'
        update_mask:
          title: update_mask
          description: (OPTIONAL) what fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateEncryptionRequest
      required:
      - encryption
      additionalProperties: false
      description: update request
    tcn.delivery.transport.v1alpha1.OperatorApplications:
      type: string
      title: OperatorApplications
      enum:
      - AGENT_APP
      - ORGANIZATION_MANAGEMENT_APP
      - CUSTOMER_JOURNEY_SERVICES_APP
      - LIST_MANAGEMENT_SERVICES_APP
      - AGENT_MANAGER_APP
      - NATURAL_LANGUAGE_COMPLIANCE_APP
      - VOICE_ANALYTICS_APP
      - SCRIPTS_APP
      - ROOM303_APP
      - OMNI_BOSS_APP
      - WFM_APP
      - PAYMENTS_APP
      - SUPPORT_APP
      - BUSINESS_INTELLIGENCE_APP
      - BACKOFFICE_APP
      - SCORECARDS_APP
      - DEV_TOOLS_APP
      - LEARNING_CENTER_APP
      - DELIVERY_SERVICE_APP
      - PERFORMANCE_MANAGEMENT_APP
      - TICKETS_APP
      - AGENT_BETA_APP
      - NEWSROOM_APP
      - CONTACTMANAGER_APP
      description: "(-- api-linter: core::0126::unspecified=disabled\n     aip.dev/not-precedent:
        Dont break old values already in the db. --)\n what application in operator
        does this delivery come from"
    tcn.delivery.transport.v1alpha1.SmsNumberProvider:
      type: string
      title: SmsNumberProvider
      enum:
      - UNKNOWN_PROVIDER
      - BANDWIDTH_PROVIDER
      - BURST_SMS_PROVIDER
      - PLIVO_PROVIDER
      - APEIRON_PROVIDER
      - AUSBURST_SMS_PROVIDER
      - MEDIASAT_SMS_PROVIDER
      - TEXTLOCAL_SMS_PROVIDER
      - SMARTPING_SMS_PROVIDER
      description: "(-- api-linter: core::0126::unspecified=disabled\n     aip.dev/not-precedent:
        Dont break old values already in the db. --)\n SmsNumberProvider"
    tcn.delivery.transport.v1alpha1.SmsNumberType:
      type: string
      title: SmsNumberType
      enum:
      - SMS_SHORT_CODE_TYPE
      - SMS_ALPHANUMERIC_TYPE
      - SMS_NUMBER_TYPE
      description: "(-- api-linter: core::0126::unspecified=disabled\n     aip.dev/not-precedent:
        Dont break old values already in the db. --)\n SmsNumbertype"
    tcn.delivery.transport.v1alpha1.TransferStatus:
      type: string
      title: TransferStatus
      enum:
      - TRANSFER_STATUS_WAITING
      - TRANSFER_STATUS_RUNNING
      - TRANSFER_STATUS_DONE_SUCCESS
      - TRANSFER_STATUS_DONE_PARTIAL_FAILURE
      - TRANSFER_STATUS_DONE_TOTAL_FAILURE
      description: "(-- api-linter: core::0126::unspecified=disabled\n     aip.dev/not-precedent:
        Dont break old values already in the db. --)\n (-- api-linter: core::0216::synonyms=disabled\n
        \    aip.dev/not-precedent: Legacy everything was named around statuses not
        states --)\n the status of the transfer"
    tcn.delivery.transport.v1alpha1.SmsNumber:
      type: object
      properties:
        number:
          type: string
          title: number
          description: string representation of the sms number
        type:
          title: type
          description: the type of sms number (Alphanumeric|Short Code|Number)
          $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.SmsNumberType'
        provider:
          title: provider
          description: associated provider (Bandwidth|BurstSMS|etc.)
          $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.SmsNumberProvider'
        region_code:
          type: integer
          title: region_code
          format: int32
          description: country code the sms number belongs to, was country_code but
            aip lint didnt like that
      title: SmsNumber
      additionalProperties: false
      description: SmsNumber
    tcn.delivery.transport.v1alpha1.Transaction:
      type: object
      properties:
        sid:
          type:
          - integer
          - string
          title: sid
          format: int64
          description: sid of the transaction
        org_id:
          type: string
          title: org_id
          description: the org id
        transport_schema:
          type: string
          title: transport_schema
          description: transport schema name
        transport_schema_sid:
          type:
          - integer
          - string
          title: transport_schema_sid
          format: int64
          description: sid of the transport schema
        delivery_type:
          type: string
          title: delivery_type
          description: delivery or retrieval
        error:
          type: string
          title: error
          description: if we are getting only open transactions then we dont need
            this
        create_time:
          title: create_time
          description: when the transaction was first opened, was created_on
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        transfer_start_time:
          title: transfer_start_time
          description: when upload of deps is finished and we started moving the files
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        transfer_complete_time:
          title: transfer_complete_time
          description: when the record was inserted into the db (delivery ended)
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        message_payload:
          type: string
          title: message_payload
          description: this should only be the first 64 chars of the message_payload
        message_payload_len:
          type: integer
          title: message_payload_len
          format: int32
          description: this represents the full actual length of the message_payload
            from the frontend
        origin:
          title: origin
          description: the application calling for delivery
          $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.OperatorApplications'
        status:
          title: status
          description: the status of the delivery
          readOnly: true
          $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransferStatus'
        is_inbound:
          type: boolean
          title: is_inbound
          description: is_inbound determines if this history is for outbound or inbound
            delivery
        transaction_sid:
          type:
          - integer
          - string
          title: transaction_sid
          format: int64
          description: "the transaction that this history is associated with.\n db
            may or may not have a transaction for this history,\n as the table is
            planned to be truncated routinely"
      title: Transaction
      additionalProperties: false
      description: delivery transaction
    google.protobuf.Duration:
      type: string
      format: duration
      description: "A Duration represents a signed, fixed-length span of time represented\n
        as a count of seconds and fractions of seconds at nanosecond\n resolution.
        It is independent of any calendar and concepts like \"day\"\n or \"month\".
        It is related to Timestamp in that the difference between\n two Timestamp
        values is a Duration and it can be added or subtracted\n from a Timestamp.
        Range is approximately +-10,000 years.\n\n # Examples\n\n Example 1: Compute
        Duration from two Timestamps in pseudo code.\n\n     Timestamp start = ...;\n
        \    Timestamp end = ...;\n     Duration duration = ...;\n\n     duration.seconds
        = end.seconds - start.seconds;\n     duration.nanos = end.nanos - start.nanos;\n\n
        \    if (duration.seconds < 0 && duration.nanos > 0) {\n       duration.seconds
        += 1;\n       duration.nanos -= 1000000000;\n     } else if (duration.seconds
        > 0 && duration.nanos < 0) {\n       duration.seconds -= 1;\n       duration.nanos
        += 1000000000;\n     }\n\n Example 2: Compute Timestamp from Timestamp + Duration
        in pseudo code.\n\n     Timestamp start = ...;\n     Duration duration = ...;\n
        \    Timestamp end = ...;\n\n     end.seconds = start.seconds + duration.seconds;\n
        \    end.nanos = start.nanos + duration.nanos;\n\n     if (end.nanos < 0)
        {\n       end.seconds -= 1;\n       end.nanos += 1000000000;\n     } else
        if (end.nanos >= 1000000000) {\n       end.seconds += 1;\n       end.nanos
        -= 1000000000;\n     }\n\n Example 3: Compute Duration from datetime.timedelta
        in Python.\n\n     td = datetime.timedelta(days=3, minutes=10)\n     duration
        = Duration()\n     duration.FromTimedelta(td)\n\n # JSON Mapping\n\n In JSON
        format, the Duration type is encoded as a string rather than an\n object,
        where the string ends in the suffix \"s\" (indicating seconds) and\n is preceded
        by the number of seconds, with nanoseconds expressed as\n fractional seconds.
        For example, 3 seconds with 0 nanoseconds should be\n encoded in JSON format
        as \"3s\", while 3 seconds and 1 nanosecond should\n be expressed in JSON
        format as \"3.000000001s\", and 3 seconds and 1\n microsecond should be expressed
        in JSON format as \"3.000001s\"."
    tcn.delivery.transport.v1alpha1.TransportSchema:
      type: object
      oneOf:
      - properties:
          email:
            title: email
            description: (OPTIONAL) email
            $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema.EmailTransport'
        title: email
        required:
        - email
      - properties:
          room303:
            title: room303
            description: (OPTIONAL) room 303 in operator
            $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema.Room303Transport'
        title: room303
        required:
        - room303
      - properties:
          sftp:
            title: sftp
            description: (OPTIONAL) secure file transfer protocol
            $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema.SFTPTransport'
        title: sftp
        required:
        - sftp
      - properties:
          sms:
            title: sms
            description: (OPTIONAL) short message service
            $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema.SMSTransport'
        title: sms
        required:
        - sms
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name of transport schema
        display_name:
          type: string
          title: display_name
          description: "the name that the client provides the transport schema.\n
            should be unique for the org"
        description:
          type: string
          title: description
          description: (OPTIONAL) description of transport schema
        ttl:
          title: ttl
          description: "how many hours the files should live in cloud storage for\n
            must always be > 0"
          $ref: '#/components/schemas/google.protobuf.Duration'
        encryption_ref:
          type: string
          title: encryption_ref
          description: '(OPTIONAL) ex: org/{org_id}/delivery/encryption/{encryption_id}'
        create_time:
          title: create_time
          description: create time
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: last edited time
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: TransportSchema
      required:
      - display_name
      - ttl
      additionalProperties: false
      description: "definition of the way we should deliver\n in legacy systems was
        known as transfer config name or delivery definition"
    tcn.delivery.transport.v1alpha1.TransportSchema.EmailTransport:
      type: object
      properties:
        from_address:
          type: string
          title: from_address
          description: "where we are sending from\n (-- api-linter: core::0140::prepositions=disabled\n
            \    aip.dev/not-precedent: We need to do this because \"from\" is something
            specific for emails --)"
        to_addresses:
          type: array
          items:
            type: string
          title: to_addresses
          description: "must have at least 1 item\n first item is where we are sending
            to\n the rest are cc'd\n (-- api-linter: core::0140::prepositions=disabled\n
            \    aip.dev/not-precedent: We need to do this because \"to\" is something
            specific for emails --)"
      title: EmailTransport
      required:
      - from_address
      - to_addresses
      additionalProperties: false
      description: email destination info
    tcn.delivery.transport.v1alpha1.TransportSchema.Room303SystemMessage:
      type: object
      oneOf:
      - properties:
          room:
            type: string
            title: room
            description: (OPTIONAL) which room or user to send the file to
        title: room
        required:
        - room
      - properties:
          username:
            type: string
            title: username
            description: "(OPTIONAL) will lookup user_sid through org if not provided\n
              username of the intended user"
        title: username
        required:
        - username
      title: Room303SystemMessage
      additionalProperties: false
      description: room 303 message info
    tcn.delivery.transport.v1alpha1.TransportSchema.Room303Transport:
      type: object
      properties:
        system_messages:
          type: array
          items:
            $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema.Room303SystemMessage'
          title: system_messages
          description: list of messages
      title: Room303Transport
      required:
      - system_messages
      additionalProperties: false
      description: room 303 destination info
    tcn.delivery.transport.v1alpha1.TransportSchema.SFTPTransport:
      type: object
      properties:
        host:
          type: string
          title: host
          description: host address
        credential_ref:
          type: string
          title: credential_ref
          description: 'ex: org/{org_id}/delivery/credential/{credential_id}'
        username:
          type: string
          title: username
          description: user in sftp
        base_dir:
          type: string
          title: base_dir
          description: base dir to put in from sftp
      title: SFTPTransport
      required:
      - host
      - credential_ref
      - username
      - base_dir
      additionalProperties: false
      description: sftp destination info
    tcn.delivery.transport.v1alpha1.TransportSchema.SMSTransport:
      type: object
      properties:
        destination_phone:
          type: string
          title: destination_phone
          description: (OPTIONAL) must include country code and area code
        source_phone:
          type: string
          title: source_phone
          description: the phone number we want this message to come from
      title: SMSTransport
      required:
      - source_phone
      additionalProperties: false
      description: sms destination info
    tcn.delivery.transport.v1alpha1.CreateTransportSchemaRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent where transport schema will be created
        transport_schema_id:
          type: string
          title: transport_schema_id
          description: (OPTIONAL) optional id
        transport_schema:
          title: transport_schema
          description: transport schema to create
          $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema'
      title: CreateTransportSchemaRequest
      required:
      - parent
      - transport_schema
      additionalProperties: false
      description: create transport req
    tcn.delivery.transport.v1alpha1.DeleteTransportSchemaRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the transport schema to delete
      title: DeleteTransportSchemaRequest
      required:
      - name
      additionalProperties: false
      description: delete transport req
    tcn.delivery.transport.v1alpha1.GetTransactionRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the transaction
      title: GetTransactionRequest
      required:
      - name
      additionalProperties: false
      description: get transaction req
    tcn.delivery.transport.v1alpha1.GetTransportSchemaRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: transport schema id
      title: GetTransportSchemaRequest
      required:
      - name
      additionalProperties: false
      description: get transport req
    tcn.delivery.transport.v1alpha1.ListSMSNumbersRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent resource to list sms numbers from
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      title: ListSMSNumbersRequest
      required:
      - parent
      additionalProperties: false
      description: list sms request
    tcn.delivery.transport.v1alpha1.ListSMSNumbersResponse:
      type: object
      properties:
        sms_numbers:
          type: array
          items:
            $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.SmsNumber'
          title: sms_numbers
          description: list of sms numbers
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListSMSNumbersResponse
      additionalProperties: false
      description: List SMS response
    tcn.delivery.transport.v1alpha1.ListTransactionsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent request id
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      title: ListTransactionsRequest
      required:
      - parent
      additionalProperties: false
      description: list transaction req
    tcn.delivery.transport.v1alpha1.ListTransactionsResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.Transaction'
          title: transactions
          description: list of transactions
        next_page_token:
          type: string
          title: next_page_token
          description: page token
      title: ListTransactionsResponse
      additionalProperties: false
      description: list transaction res
    tcn.delivery.transport.v1alpha1.ListTransportSchemasRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the transport schema
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) the page token
      title: ListTransportSchemasRequest
      required:
      - parent
      additionalProperties: false
      description: list transport req
    tcn.delivery.transport.v1alpha1.ListTransportSchemasResponse:
      type: object
      properties:
        transport_schemas:
          type: array
          items:
            $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema'
          title: transport_schemas
          description: list of transport schemas
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListTransportSchemasResponse
      additionalProperties: false
      description: list transport res
    tcn.delivery.transport.v1alpha1.UpdateTransportSchemaRequest:
      type: object
      properties:
        transport_schema:
          title: transport_schema
          description: fields to update
          $ref: '#/components/schemas/tcn.delivery.transport.v1alpha1.TransportSchema'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateTransportSchemaRequest
      required:
      - transport_schema
      additionalProperties: false
      description: update transport req
    tcn.delivery.transport.v1alpha1.ValidateTransportSchemaRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: transport schema to send the test delivery
      title: ValidateTransportSchemaRequest
      required:
      - name
      additionalProperties: false
      description: validate request
    tcn.delivery.transport.v1alpha1.ValidateTransportSchemaResponse:
      type: object
      title: ValidateTransportSchemaResponse
      additionalProperties: false
      description: validate response
    tcn.journey.jobs.v1beta1.JobType:
      type: string
      title: JobType
      enum:
      - JOB_TYPE_UNSPECIFIED
      - JT_UPLOAD
      description: type of job
    tcn.journey.jobs.v1beta1.Job:
      type: object
      properties:
        name:
          type: string
          title: name
          description: '(IDENTIFIER) ex: orgs/{org_id}collection/{collection}/source/{lms}/job/{job_id}'
        job_type:
          title: job_type
          description: (OPTIONAL) what type of job produced the entries in the collection
          $ref: '#/components/schemas/tcn.journey.jobs.v1beta1.JobType'
        ignored_count:
          type:
          - integer
          - string
          title: ignored_count
          format: int64
          description: ignored records
          readOnly: true
        inserted_count:
          type:
          - integer
          - string
          title: inserted_count
          format: int64
          description: inserted records
          readOnly: true
        updated_count:
          type:
          - integer
          - string
          title: updated_count
          format: int64
          description: updated records
          readOnly: true
        rejected_count:
          type:
          - integer
          - string
          title: rejected_count
          format: int64
          description: rejected records
          readOnly: true
        create_time:
          title: create_time
          description: creation date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Job
      additionalProperties: false
      description: "a Job signifies a change in our collection entries for a collection\n
        usually by a uploading data or retyping collection."
    tcn.journey.jobs.v1beta1.CreateJobRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the job
        job:
          title: job
          description: Job to create
          $ref: '#/components/schemas/tcn.journey.jobs.v1beta1.Job'
      title: CreateJobRequest
      required:
      - parent
      - job
      additionalProperties: false
      description: "Create Job Request\n (-- api-linter: core::0133::request-id-field=disabled\n
        \    aip.dev/not-precedent: We need to do this because event id is stored
        in job name. --)"
    tcn.journey.jobs.v1beta1.ListJobsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent resource to list jobs from
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      title: ListJobsRequest
      required:
      - parent
      additionalProperties: false
      description: ListJobsRequest
    tcn.journey.jobs.v1beta1.ListJobsResponse:
      type: object
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/tcn.journey.jobs.v1beta1.Job'
          title: jobs
          description: List Jobs
        next_page_token:
          type: string
          title: next_page_token
          description: Token to get the next page
      title: ListJobsResponse
      additionalProperties: false
      description: List Jobs Response
    tcn.journey.rejection.v1beta1.Rejection:
      type: object
      properties:
        name:
          type: string
          title: name
          description: '(IDENTIFIER) ex: orgs/{org}/collection/{collection}/source/{lms}/job/{job}/record/{3}'
        data:
          type: string
          title: data
          description: the raw data of the record when we tried to insert
          readOnly: true
        reason:
          type: array
          items:
            type: string
            readOnly: true
          title: reason
          description: the reasons this record was rejected
          readOnly: true
        create_time:
          title: create_time
          description: time the rejection was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Rejection
      additionalProperties: false
      description: Rejection
    tcn.journey.rejection.v1beta1.ListRejectionsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent resource to list jobs from
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      title: ListRejectionsRequest
      required:
      - parent
      additionalProperties: false
      description: ListRejectionsRequest
    tcn.journey.rejection.v1beta1.ListRejectionsResponse:
      type: object
      properties:
        rejections:
          type: array
          items:
            $ref: '#/components/schemas/tcn.journey.rejection.v1beta1.Rejection'
          title: rejections
          description: list of Rejections returned
        next_page_token:
          type: string
          title: next_page_token
          description: token for pagination
      title: ListRejectionsResponse
      additionalProperties: false
      description: ListRejectionsResponse
    google.protobuf.StringValue:
      type: string
      description: "Wrapper message for `string`.\n\n The JSON representation for
        `StringValue` is JSON string."
    tcn.omni.attachment.v1alpha1.Attachment:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name identifier for an attachment
        title:
          type: string
          title: title
          description: attachment file name
        file_type:
          type: string
          title: file_type
          description: attachment file type
        file_size:
          type:
          - integer
          - string
          title: file_size
          format: int64
          description: attachment file size
        file_path:
          type: string
          title: file_path
          description: attachment file path
          readOnly: true
        download_uri:
          type: string
          title: download_uri
          description: download attachment file url
          readOnly: true
        create_time:
          title: create_time
          description: time when the attachment was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: time when the attachment was last modified
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        temp_id:
          title: temp_id
          description: temp id
          writeOnly: true
          $ref: '#/components/schemas/google.protobuf.StringValue'
        content_id:
          title: content_id
          description: (OPTIONAL) Optional. the id of the attachment in text if inline
          $ref: '#/components/schemas/google.protobuf.StringValue'
        width:
          title: width
          description: (OPTIONAL) Optional. the width of the inline attachment
          $ref: '#/components/schemas/google.protobuf.StringValue'
        height:
          title: height
          description: (OPTIONAL) Optional. the height of the inline attachment
          $ref: '#/components/schemas/google.protobuf.StringValue'
      title: Attachment
      required:
      - title
      - file_type
      - file_size
      - temp_id
      additionalProperties: false
      description: Attachment -
    tcn.omni.attachment.v1alpha1.CreateAttachmentRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the attachment
        attachment:
          title: attachment
          description: the attachment to be created
          $ref: '#/components/schemas/tcn.omni.attachment.v1alpha1.Attachment'
      title: CreateAttachmentRequest
      required:
      - parent
      - attachment
      additionalProperties: false
      description: request used to create an attachment
    tcn.omni.attachment.v1alpha1.GetAttachmentRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the attachment
      title: GetAttachmentRequest
      required:
      - name
      additionalProperties: false
      description: request used to get an attachment
    tcn.omni.attachment.v1alpha1.ListAttachmentsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed attachments
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListAttachmentsRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of attachments
    tcn.omni.attachment.v1alpha1.ListAttachmentsResponse:
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.attachment.v1alpha1.Attachment'
          title: attachments
          description: list of attachments
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListAttachmentsResponse
      additionalProperties: false
      description: response for list attachments
    tcn.omni.type.ChannelType:
      type: string
      title: ChannelType
      enum:
      - CHANNEL_TYPE_EMAIL
      - CHANNEL_TYPE_SMS
      - CHANNEL_TYPE_CHAT
      - CHANNEL_TYPE_VOICE
      - CHANNEL_TYPE_WHATSAPP
      description: This enum represents the channel type
    tcn.omni.type.SLATimeouts:
      type: object
      properties:
        t1:
          type:
          - integer
          - string
          title: t1
          format: int64
          description: max amount of time in seconds that it should take for an agent
            to respond to a customer message. Will reset after each customer response.
        t2:
          type:
          - integer
          - string
          title: t2
          format: int64
          description: amount of time in seconds the conversation takes space in an
            agent's queue waiting for a customer's response
        t3:
          type:
          - integer
          - string
          title: t3
          format: int64
          description: amount of time in seconds that the frontend system will wait
            for an agent response before a conversation gets reassigned
        t10:
          type:
          - integer
          - string
          title: t10
          format: int64
          description: amount of time in seconds that the backend system will wait
            for an agent response before a conversation gets reassigned
        t11:
          type:
          - integer
          - string
          title: t11
          format: int64
          description: amount of time in seconds that the backend system will wait
            for a customer response before a conversation gets closed
        t12:
          type:
          - integer
          - string
          title: t12
          format: int64
          description: amount of time in seconds that the backend system will wait
            until a unassigned conversation is closed timeout
      title: SLATimeouts
      additionalProperties: false
      description: SLATimeouts -
    tcn.omni.campaign.v1alpha1.Campaign.Module.ModuleType:
      type: string
      title: ModuleType
      enum:
      - MODULE_TYPE_INBOUND
      - MODULE_TYPE_OUTBOUND
      - MODULE_TYPE_MANUAL_APPROVAL
      - MODULE_TYPE_MANUAL
      description: ModuleType -
    tcn.omni.campaign.v1alpha1.Campaign.Module.State:
      type: string
      title: State
      enum:
      - MODULE_PREPARING
      - MODULE_SCHEDULING
      - MODULE_RUNNING
      - MODULE_RUNNING_ERROR
      - MODULE_ERROR_STANDBY
      - MODULE_PAUSED
      - MODULE_RESUMING
      - MODULE_COMPLETED
      - MODULE_ARCHIVED
      description: State - enum for the state of the module
    tcn.omni.campaign.v1alpha1.Campaign.State:
      type: string
      title: State
      enum:
      - SCHEDULING
      - RUNNING
      - PAUSED
      - COMPLETED
      - ARCHIVED
      description: This enum represents the state of a campaign
    google.protobuf.BoolValue:
      type: boolean
      description: "Wrapper message for `bool`.\n\n The JSON representation for `BoolValue`
        is JSON `true` and `false`."
    google.protobuf.Int64Value:
      oneOf:
      - type: string
      - type: number
      description: "Wrapper message for `int64`.\n\n The JSON representation for `Int64Value`
        is JSON string."
    tcn.omni.campaign.v1alpha1.Campaign:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the campaign identifier
        title:
          type: string
          title: title
          description: the campaign name
        description:
          type: string
          title: description
          description: the campaign description
        start_time:
          title: start_time
          description: (OPTIONAL) time the campaign should start; null == (not scheduled)
            || (start now)
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        state:
          title: state
          description: campaign State (i.e. running|stopped|paused|etc.)
          readOnly: true
          $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign.State'
        channel_type:
          title: channel_type
          description: (OPTIONAL) campaign channel type (chat|email|sms|etc.)
          $ref: '#/components/schemas/tcn.omni.type.ChannelType'
        create_time:
          title: create_time
          description: the time the campaign was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the campaign was last modified
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        project_sid:
          type:
          - integer
          - string
          title: project_sid
          format: int64
          description: identifier of the project the campaign belongs to
        shorten_uri:
          type: boolean
          title: shorten_uri
          description: (OPTIONAL) if url's should be shortened
        modules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign.Module'
          title: modules
          description: (OPTIONAL) associated modules for campagin
        time_zone:
          type: string
          title: time_zone
          description: '(OPTIONAL) the campaign timezone :: THIS IS IT WORKS TO HANDLE
            THE NEW TIMEZONE FIELD'
        compliance_config:
          title: compliance_config
          description: compliance configuration
          $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign.ComplianceConfig'
      title: Campaign
      required:
      - title
      - description
      - project_sid
      - compliance_config
      additionalProperties: false
      description: Campaign -
    tcn.omni.campaign.v1alpha1.Campaign.ComplianceConfig:
      type: object
      properties:
        optin:
          title: optin
          description: opting in to different compliance settings
          $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign.OmniComplianceAction'
        optout:
          title: optout
          description: opting out of different compliance settings
          $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign.OmniComplianceAction'
        help:
          title: help
          description: help regarding compliance settings
          $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign.OmniComplianceAction'
        info:
          title: info
          description: information regarding compliance settings
          $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign.OmniComplianceAction'
        scrub_list_id:
          type: string
          title: scrub_list_id
          description: scrub list identifier
        rule_set_id:
          title: rule_set_id
          description: rule set identifier
          $ref: '#/components/schemas/google.protobuf.StringValue'
      title: ComplianceConfig
      additionalProperties: false
      description: "ComplianceConfig -\n ComplianceConfig -"
    tcn.omni.campaign.v1alpha1.Campaign.Module:
      type: object
      properties:
        campaign_module_sid:
          type:
          - integer
          - string
          title: campaign_module_sid
          format: int64
          description: (OPTIONAL) the campaign module identifier
        campaign_sid:
          type:
          - integer
          - string
          title: campaign_sid
          format: int64
          description: the campaign identifier
        module_type:
          title: module_type
          description: module type (inbound|outbound)
          $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign.Module.ModuleType'
        state:
          title: state
          description: campaign module State (running|stopped|etc.)
          readOnly: true
          $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign.Module.State'
        config:
          title: config
          description: config data specific to the module
          $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign.Module.Config'
        create_time:
          title: create_time
          description: date module was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: date module was last modified
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        scheduled_stop_time:
          title: scheduled_stop_time
          description: (OPTIONAL) when campaign is scheduled to stop; null == not
            a scheduled module
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        actual_stop_time:
          title: actual_stop_time
          description: (OPTIONAL) time campaign was actually stopped; null == not
            stopped yet
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        verified_emails:
          type: array
          items:
            type:
            - integer
            - string
            format: int64
            description: '(OPTIONAL) '
          title: verified_emails
          description: (OPTIONAL) identifier of the verified_emails
        sms_numbers:
          type: array
          items:
            type:
            - integer
            - string
            format: int64
            description: '(OPTIONAL) '
          title: sms_numbers
          description: (OPTIONAL) identifier of the sms_numbers
        chat_widgets:
          type: array
          items:
            type:
            - integer
            - string
            format: int64
            description: '(OPTIONAL) '
          title: chat_widgets
          description: (OPTIONAL) identifier of the chat_widgets
        connected_inboxes:
          type: array
          items:
            type:
            - integer
            - string
            format: int64
            description: '(OPTIONAL) '
          title: connected_inboxes
          description: (OPTIONAL) identifier of the connected_inboxes
      title: Module
      required:
      - campaign_sid
      - module_type
      - config
      additionalProperties: false
      description: associated modules
    tcn.omni.campaign.v1alpha1.Campaign.Module.Config:
      type: object
      properties:
        connected_inbox_sid:
          type: array
          items:
            type:
            - integer
            - string
            format: int64
            description: '(OPTIONAL) '
          title: connected_inbox_sid
          description: (OPTIONAL) identifier of the connected inbox associated to
            the CampaignModule
        email:
          title: email
          description: (OPTIONAL) email associated to the CampaignModule
          $ref: '#/components/schemas/google.protobuf.StringValue'
        message_body:
          title: message_body
          description: (OPTIONAL) message body
          $ref: '#/components/schemas/google.protobuf.StringValue'
        subject:
          title: subject
          description: (OPTIONAL) email subjects
          $ref: '#/components/schemas/google.protobuf.StringValue'
        sla_timeouts:
          title: sla_timeouts
          description: (OPTIONAL) sla timeouts associated with the CampaignModule
          $ref: '#/components/schemas/tcn.omni.type.SLATimeouts'
        sends_per_hour:
          title: sends_per_hour
          description: (OPTIONAL) maximum number of sends per hour for outbound CampaignModules
          $ref: '#/components/schemas/google.protobuf.Int64Value'
        unsubscribe_link_sid:
          type: array
          items:
            type:
            - integer
            - string
            format: int64
            description: '(OPTIONAL) '
          title: unsubscribe_link_sid
          description: (OPTIONAL) identifier of associated custom unsubscribe link
        verified_email_sid:
          type: array
          items:
            type:
            - integer
            - string
            format: int64
            description: '(OPTIONAL) '
          title: verified_email_sid
          description: (OPTIONAL) verified email identifier
        stop_on_task_deplete:
          title: stop_on_task_deplete
          description: (OPTIONAL) stop module with all tasks are completed
          $ref: '#/components/schemas/google.protobuf.BoolValue'
        compliance_rule_set_id:
          title: compliance_rule_set_id
          description: (OPTIONAL) Optional. compliance rule set to use for this campaign
          $ref: '#/components/schemas/google.protobuf.StringValue'
        payment_portal_ids:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: payment_portal_ids
          description: (OPTIONAL) Payment Portal Ids
        flow_id:
          type: array
          items:
            type:
            - integer
            - string
            format: int64
            description: '(OPTIONAL) '
          title: flow_id
          description: (OPTIONAL) Flow Id
        skills:
          type: object
          title: skills
          additionalProperties:
            type: boolean
            title: value
          description: (OPTIONAL) skills
        provider_metadata:
          type: object
          title: provider_metadata
          additionalProperties:
            type: string
            title: value
          description: "(OPTIONAL) ProviderMetadata\n content_id - the id of the premade
            message in the smartping system"
        country_code_number:
          type: integer
          title: country_code_number
          format: int32
          description: "(OPTIONAL) The country code and postal code field together
            determine timezone for email time based compliance rulesets\n country
            code"
        postal_code_field:
          type: string
          title: postal_code_field
          description: (OPTIONAL) postal code field
        timeout_message_config:
          title: timeout_message_config
          description: (OPTIONAL) allows the user to configure a custom message for
            when a conversation times out, or to disable the message all together
          $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign.Module.Config.ConversationTimeoutMessageConfig'
      title: Config
      additionalProperties: false
      description: ModuleConfig -
    tcn.omni.campaign.v1alpha1.Campaign.Module.Config.ConversationTimeoutMessageConfig:
      type: object
      properties:
        is_disabled:
          type: boolean
          title: is_disabled
          description: disables timeout messages altogether, defaults at false for
            no change is previous behavior
        msg:
          type: string
          title: msg
          description: msg is the configurable message for the timeout. If msg is
            left blank, the canned message is sent
      title: ConversationTimeoutMessageConfig
      additionalProperties: false
      description: allows the user to configure a custom message for when a conversation
        times out, or to disable the message all together
    tcn.omni.campaign.v1alpha1.Campaign.Module.Config.ProviderMetadataEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: ProviderMetadataEntry
      additionalProperties: false
    tcn.omni.campaign.v1alpha1.Campaign.Module.Config.SkillsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: boolean
          title: value
      title: SkillsEntry
      additionalProperties: false
    tcn.omni.campaign.v1alpha1.Campaign.OmniComplianceAction:
      type: object
      properties:
        keywords:
          type: array
          items:
            type: string
          title: keywords
          description: a list of config keywords
        confirmation_message:
          type: string
          title: confirmation_message
          description: confirmation for the config
        is_fuzzy_match:
          type: boolean
          title: is_fuzzy_match
          description: fuzzy match for the config
      title: OmniComplianceAction
      additionalProperties: false
      description: OmniComplianceAction - configuration action for omni compliance
    tcn.omni.campaign.v1alpha1.GetCampaignRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the project
      title: GetCampaignRequest
      required:
      - name
      additionalProperties: false
      description: get single project based on name and mask used to getting particular
        data
    tcn.omni.campaign.v1alpha1.ListCampaignsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed campaigns
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListCampaignsRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of campaigns
    tcn.omni.campaign.v1alpha1.ListCampaignsResponse:
      type: object
      properties:
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.campaign.v1alpha1.Campaign'
          title: campaigns
          description: the list of campaigns
        next_page_token:
          type: string
          title: next_page_token
          description: the next page token
      title: ListCampaignsResponse
      additionalProperties: false
      description: response used listing all campaigns
    tcn.omni.cannedmessage.v1alpha1.CannedMessage:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) canned message name
        title:
          type: string
          title: title
          description: canned message name
        description:
          type: string
          title: description
          description: canned message description
        message_body:
          type: string
          title: message_body
          description: message details
        create_time:
          title: create_time
          description: creation date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: last updated date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        allows_html:
          type: boolean
          title: allows_html
          description: (OPTIONAL) allows html
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage.Attachment'
          title: attachments
          description: (OPTIONAL) attachments
        disable_edit:
          type: boolean
          title: disable_edit
          description: (OPTIONAL) disable edit flag
      title: CannedMessage
      required:
      - title
      - description
      - message_body
      additionalProperties: false
      description: CannedMessage -
    tcn.omni.cannedmessage.v1alpha1.CannedMessage.Attachment:
      type: object
      properties:
        name:
          type: string
          title: name
          description: primary key for an attachment
          readOnly: true
        title:
          type: string
          title: title
          description: attachment file name
        file_type:
          type: string
          title: file_type
          description: attachment file type
        file_size:
          type:
          - integer
          - string
          title: file_size
          format: int64
          description: attachment file size
        file_path:
          type: string
          title: file_path
          description: attachment file path
        download_uri:
          type: string
          title: download_uri
          description: download attachment file url
          readOnly: true
        temp_id:
          title: temp_id
          description: (OPTIONAL) temp id
          $ref: '#/components/schemas/google.protobuf.StringValue'
        content_id:
          title: content_id
          description: (OPTIONAL) Optional. the id of the attachment in text if inline
          $ref: '#/components/schemas/google.protobuf.StringValue'
        width:
          title: width
          description: (OPTIONAL) Optional. the width of the inline attachment
          $ref: '#/components/schemas/google.protobuf.StringValue'
        height:
          title: height
          description: (OPTIONAL) Optional. the height of the inline attachment
          $ref: '#/components/schemas/google.protobuf.StringValue'
      title: Attachment
      required:
      - title
      - file_type
      - file_size
      - file_path
      additionalProperties: false
      description: Attachment - lets remove this ASAP
    tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) canned message name
        canned_message_group_sid:
          type:
          - integer
          - string
          title: canned_message_group_sid
          format: int64
          description: canned message group id
        title:
          type: string
          title: title
          description: canned message group name
        description:
          type: string
          title: description
          description: canned message group description
        create_time:
          title: create_time
          description: creation date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: last updated date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: CannedMessageGroup
      required:
      - canned_message_group_sid
      - title
      - description
      additionalProperties: false
      description: CannedMessageGroup -
    tcn.omni.cannedmessage.v1alpha1.CreateCannedMessageGroupRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the canned message group
        canned_message_group:
          title: canned_message_group
          description: the canned message group to be created
          $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
      title: CreateCannedMessageGroupRequest
      required:
      - parent
      - canned_message_group
      additionalProperties: false
      description: CreateCannedMessageGroupRequest -
    tcn.omni.cannedmessage.v1alpha1.CreateCannedMessageRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the canned message
        canned_message:
          title: canned_message
          description: the canned message to be created
          $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
      title: CreateCannedMessageRequest
      required:
      - parent
      - canned_message
      additionalProperties: false
      description: CreateCannedMessageRequest -
    tcn.omni.cannedmessage.v1alpha1.DeleteCannedMessageGroupRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the canned message group to be deleted.
        force:
          type: boolean
          title: force
          description: (OPTIONAL) force delete the canned message group
      title: DeleteCannedMessageGroupRequest
      required:
      - name
      additionalProperties: false
      description: DeleteCannedMessageGroupRequest -
    tcn.omni.cannedmessage.v1alpha1.DeleteCannedMessageRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the id of the canned message
      title: DeleteCannedMessageRequest
      required:
      - name
      additionalProperties: false
      description: DeleteCannedMessageRequest -
    tcn.omni.cannedmessage.v1alpha1.GetCannedMessageGroupRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the id of the canned message group
      title: GetCannedMessageGroupRequest
      required:
      - name
      additionalProperties: false
      description: GetCannedMessageGroupRequest -
    tcn.omni.cannedmessage.v1alpha1.GetCannedMessageRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the id of the canned message
      title: GetCannedMessageRequest
      required:
      - name
      additionalProperties: false
      description: GetCannedMessageRequest -
    tcn.omni.cannedmessage.v1alpha1.ListCannedMessageGroupsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the canned message group
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListCannedMessageGroupsRequest
      required:
      - parent
      additionalProperties: false
      description: ListCannedMessageGroupRequest -
    tcn.omni.cannedmessage.v1alpha1.ListCannedMessageGroupsResponse:
      type: object
      properties:
        canned_message_groups:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
          title: canned_message_groups
          description: the list of canned message groups
        next_page_token:
          type: string
          title: next_page_token
          description: the next page token
      title: ListCannedMessageGroupsResponse
      additionalProperties: false
      description: ListCannedMessageGroupsResponse -
    tcn.omni.cannedmessage.v1alpha1.ListCannedMessagesRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the canned message
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListCannedMessagesRequest
      required:
      - parent
      additionalProperties: false
      description: ListCannedMessagesRequest -
    tcn.omni.cannedmessage.v1alpha1.ListCannedMessagesResponse:
      type: object
      properties:
        canned_messages:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
          title: canned_messages
          description: the list of canned messages
        next_page_token:
          type: string
          title: next_page_token
          description: the next page token
      title: ListCannedMessagesResponse
      additionalProperties: false
      description: ListCannedMessagesResponse -
    tcn.omni.cannedmessage.v1alpha1.UpdateCannedMessageGroupRequest:
      type: object
      properties:
        canned_message_group:
          title: canned_message_group
          description: The canned message group to be updated.
          $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessageGroup'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The update mask to specify which fields should be
            updated.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateCannedMessageGroupRequest
      required:
      - canned_message_group
      additionalProperties: false
      description: UpdateCannedMessageGroupRequest -
    tcn.omni.cannedmessage.v1alpha1.UpdateCannedMessageRequest:
      type: object
      properties:
        canned_message:
          title: canned_message
          description: the canned message to be updated
          $ref: '#/components/schemas/tcn.omni.cannedmessage.v1alpha1.CannedMessage'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the update mask
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateCannedMessageRequest
      required:
      - canned_message
      additionalProperties: false
      description: UpdateCannedMessageRequest -
    google.type.DayOfWeek:
      type: string
      title: DayOfWeek
      enum:
      - DAY_OF_WEEK_UNSPECIFIED
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
      description: Represents a day of the week.
    google.protobuf.FloatValue:
      oneOf:
      - type: string
      - type: number
      description: "Wrapper message for `float`.\n\n The JSON representation for `FloatValue`
        is JSON number."
    google.type.Color:
      type: object
      properties:
        red:
          type: number
          title: red
          format: float
          description: The amount of red in the color as a value in the interval [0,
            1].
        green:
          type: number
          title: green
          format: float
          description: The amount of green in the color as a value in the interval
            [0, 1].
        blue:
          type: number
          title: blue
          format: float
          description: The amount of blue in the color as a value in the interval
            [0, 1].
        alpha:
          title: alpha
          description: "The fraction of this color that should be applied to the pixel.
            That is,\n the final pixel color is defined by the equation:\n\n   `pixel
            color = alpha * (this color) + (1.0 - alpha) * (background color)`\n\n
            This means that a value of 1.0 corresponds to a solid color, whereas\n
            a value of 0.0 corresponds to a completely transparent color. This\n uses
            a wrapper message rather than a simple float scalar so that it is\n possible
            to distinguish between a default value and the value being unset.\n If
            omitted, this color object is rendered as a solid color\n (as if the alpha
            value had been explicitly given a value of 1.0)."
          $ref: '#/components/schemas/google.protobuf.FloatValue'
      title: Color
      additionalProperties: false
      description: "Represents a color in the RGBA color space. This representation
        is designed\n for simplicity of conversion to/from color representations in
        various\n languages over compactness. For example, the fields of this representation\n
        can be trivially provided to the constructor of `java.awt.Color` in Java;
        it\n can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`\n
        method in iOS; and, with just a little work, it can be easily formatted into\n
        a CSS `rgba()` string in JavaScript.\n\n This reference page doesn't carry
        information about the absolute color\n space\n that should be used to interpret
        the RGB value (e.g. sRGB, Adobe RGB,\n DCI-P3, BT.2020, etc.). By default,
        applications should assume the sRGB color\n space.\n\n When color equality
        needs to be decided, implementations, unless\n documented otherwise, treat
        two colors as equal if all their red,\n green, blue, and alpha values each
        differ by at most 1e-5.\n\n Example (Java):\n\n      import com.google.type.Color;\n\n
        \     // ...\n      public static java.awt.Color fromProto(Color protocolor)
        {\n        float alpha = protocolor.hasAlpha()\n            ? protocolor.getAlpha().getValue()\n
        \           : 1.0;\n\n        return new java.awt.Color(\n            protocolor.getRed(),\n
        \           protocolor.getGreen(),\n            protocolor.getBlue(),\n            alpha);\n
        \     }\n\n      public static Color toProto(java.awt.Color color) {\n        float
        red = (float) color.getRed();\n        float green = (float) color.getGreen();\n
        \       float blue = (float) color.getBlue();\n        float denominator =
        255.0;\n        Color.Builder resultBuilder =\n            Color\n                .newBuilder()\n
        \               .setRed(red / denominator)\n                .setGreen(green
        / denominator)\n                .setBlue(blue / denominator);\n        int
        alpha = color.getAlpha();\n        if (alpha != 255) {\n          result.setAlpha(\n
        \             FloatValue\n                  .newBuilder()\n                  .setValue(((float)
        alpha) / denominator)\n                  .build());\n        }\n        return
        resultBuilder.build();\n      }\n      // ...\n\n Example (iOS / Obj-C):\n\n
        \     // ...\n      static UIColor* fromProto(Color* protocolor) {\n         float
        red = [protocolor red];\n         float green = [protocolor green];\n         float
        blue = [protocolor blue];\n         FloatValue* alpha_wrapper = [protocolor
        alpha];\n         float alpha = 1.0;\n         if (alpha_wrapper != nil) {\n
        \          alpha = [alpha_wrapper value];\n         }\n         return [UIColor
        colorWithRed:red green:green blue:blue alpha:alpha];\n      }\n\n      static
        Color* toProto(UIColor* color) {\n          CGFloat red, green, blue, alpha;\n
        \         if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) {\n
        \           return nil;\n          }\n          Color* result = [[Color alloc]
        init];\n          [result setRed:red];\n          [result setGreen:green];\n
        \         [result setBlue:blue];\n          if (alpha <= 0.9999) {\n            [result
        setAlpha:floatWrapperWithValue(alpha)];\n          }\n          [result autorelease];\n
        \         return result;\n     }\n     // ...\n\n  Example (JavaScript):\n\n
        \    // ...\n\n     var protoToCssColor = function(rgb_color) {\n        var
        redFrac = rgb_color.red || 0.0;\n        var greenFrac = rgb_color.green ||
        0.0;\n        var blueFrac = rgb_color.blue || 0.0;\n        var red = Math.floor(redFrac
        * 255);\n        var green = Math.floor(greenFrac * 255);\n        var blue
        = Math.floor(blueFrac * 255);\n\n        if (!('alpha' in rgb_color)) {\n
        \          return rgbToCssColor(red, green, blue);\n        }\n\n        var
        alphaFrac = rgb_color.alpha.value || 0.0;\n        var rgbParams = [red, green,
        blue].join(',');\n        return ['rgba(', rgbParams, ',', alphaFrac, ')'].join('');\n
        \    };\n\n     var rgbToCssColor = function(red, green, blue) {\n       var
        rgbNumber = new Number((red << 16) | (green << 8) | blue);\n       var hexString
        = rgbNumber.toString(16);\n       var missingZeros = 6 - hexString.length;\n
        \      var resultBuilder = ['#'];\n       for (var i = 0; i < missingZeros;
        i++) {\n          resultBuilder.push('0');\n       }\n       resultBuilder.push(hexString);\n
        \      return resultBuilder.join('');\n     };\n\n     // ..."
    google.type.TimeOfDay:
      type: object
      properties:
        hours:
          type: integer
          title: hours
          format: int32
          description: "Hours of day in 24 hour format. Should be from 0 to 23. An
            API may choose\n to allow the value \"24:00:00\" for scenarios like business
            closing time."
        minutes:
          type: integer
          title: minutes
          format: int32
          description: Minutes of hour of day. Must be from 0 to 59.
        seconds:
          type: integer
          title: seconds
          format: int32
          description: "Seconds of minutes of the time. Must normally be from 0 to
            59. An API may\n allow the value 60 if it allows leap-seconds."
        nanos:
          type: integer
          title: nanos
          format: int32
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
      title: TimeOfDay
      additionalProperties: false
      description: "Represents a time of day. The date and time zone are either not
        significant\n or are specified elsewhere. An API may choose to allow leap
        seconds. Related\n types are [google.type.Date][google.type.Date] and\n `google.protobuf.Timestamp`."
    tcn.omni.chatwidget.v1alpha1.ChatWidget:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the chat widget identifier
        color_properties:
          title: color_properties
          description: the chat widget color properties
          $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget.ColorProperties'
        email:
          type: string
          title: email
          description: (OPTIONAL) the chat widget support email
        header_text:
          type: string
          title: header_text
          description: the chat widget header
        subheader_text:
          type: string
          title: subheader_text
          description: the chat widget subheader
        api_key_primary:
          type: string
          title: api_key_primary
          description: (IMMUTABLE) (OPTIONAL) the primary api key used by the chat
            widget
        api_key_secondary:
          type: string
          title: api_key_secondary
          description: (IMMUTABLE) (OPTIONAL) the secondary api key used by the chat
            widget
        time_zone:
          type: string
          title: time_zone
          description: the timezone associated with the chat widget
        operating_hours:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget.WeekdayTimeRange'
          title: operating_hours
          description: the time frames when the chat widget should be active.
        project:
          type: string
          title: project
          description: (OPTIONAL) the project that owns the chat widget using AIP
            name structure
        create_time:
          title: create_time
          description: time the chat widget was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: time the chat widget was modified
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: ChatWidget
      required:
      - color_properties
      - header_text
      - subheader_text
      - time_zone
      - operating_hours
      additionalProperties: false
      description: ChatWidget -
    tcn.omni.chatwidget.v1alpha1.ChatWidget.ColorProperties:
      type: object
      properties:
        primary_color:
          title: primary_color
          description: the chat widget primary color
          $ref: '#/components/schemas/google.type.Color'
        header_text_color:
          title: header_text_color
          description: the chat widget header text color
          $ref: '#/components/schemas/google.type.Color'
        paragraph_text_color:
          title: paragraph_text_color
          description: the chat widget paragraph text color
          $ref: '#/components/schemas/google.type.Color'
      title: ColorProperties
      required:
      - primary_color
      - header_text_color
      - paragraph_text_color
      additionalProperties: false
      description: ColorProperties -
    tcn.omni.chatwidget.v1alpha1.ChatWidget.WeekdayTimeRange:
      type: object
      properties:
        start_day:
          title: start_day
          description: the day the span starts
          $ref: '#/components/schemas/google.type.DayOfWeek'
        start_time:
          title: start_time
          description: the time the range starts
          $ref: '#/components/schemas/google.type.TimeOfDay'
        end_day:
          title: end_day
          description: (OPTIONAL) the day the span ends
          $ref: '#/components/schemas/google.type.DayOfWeek'
        end_time:
          title: end_time
          description: (OPTIONAL) the time the range ends
          $ref: '#/components/schemas/google.type.TimeOfDay'
      title: WeekdayTimeRange
      required:
      - start_day
      - start_time
      additionalProperties: false
      description: defines a time range over a span of one or more days
    tcn.omni.chatwidget.v1alpha1.CreateChatWidgetRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the chat widget
        chat_widget:
          title: chat_widget
          description: the chat widget to be created
          $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget'
      title: CreateChatWidgetRequest
      required:
      - parent
      - chat_widget
      additionalProperties: false
      description: request message for CreateChatWidget
    tcn.omni.chatwidget.v1alpha1.DeleteChatWidgetRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the AIP name of the chat widget
      title: DeleteChatWidgetRequest
      required:
      - name
      additionalProperties: false
      description: request message to delete a chat widget
    tcn.omni.chatwidget.v1alpha1.GetChatWidgetRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the chat widget
      title: GetChatWidgetRequest
      required:
      - name
      additionalProperties: false
      description: request message GetChatWidgetRequest
    tcn.omni.chatwidget.v1alpha1.ListChatWidgetsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the chat widget
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) filter
      title: ListChatWidgetsRequest
      required:
      - parent
      additionalProperties: false
      description: request message ListChatWidgetsRequest
    tcn.omni.chatwidget.v1alpha1.ListChatWidgetsResponse:
      type: object
      properties:
        chat_widgets:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget'
          title: chat_widgets
          description: list of chat widgets
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListChatWidgetsResponse
      additionalProperties: false
      description: response message ListChatWidgetsResponse
    tcn.omni.chatwidget.v1alpha1.UpdateChatWidgetRequest:
      type: object
      properties:
        chat_widget:
          title: chat_widget
          description: the chat widget we are updating
          $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the field mask used to update the chat widget
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateChatWidgetRequest
      required:
      - chat_widget
      additionalProperties: false
      description: request message for UpdateChatWidget
    tcn.omni.compliance.v1alpha1.ComplianceConfig:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name identifier for a compliance
        optin:
          title: optin
          description: (OPTIONAL) opting in to different compliance settings
          $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig.OmniComplianceAction'
        optout:
          title: optout
          description: (OPTIONAL) opting out of different compliance settings
          $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig.OmniComplianceAction'
        help:
          title: help
          description: (OPTIONAL) help regarding compliance settings
          $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig.OmniComplianceAction'
        info:
          title: info
          description: (OPTIONAL) information regarding compliance settings
          $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig.OmniComplianceAction'
        scrub_list_id:
          type: string
          title: scrub_list_id
          description: (OPTIONAL) scrub list identifier
        rule_set_id:
          title: rule_set_id
          description: (OPTIONAL) rule set identifier
          $ref: '#/components/schemas/google.protobuf.StringValue'
        channel_type:
          title: channel_type
          description: (OPTIONAL) channel type this config applies to
          $ref: '#/components/schemas/tcn.omni.type.ChannelType'
        create_time:
          title: create_time
          description: Create time - determines the most recent compliance config
            for the UI to use
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: ComplianceConfig
      additionalProperties: false
      description: Compliance -
    tcn.omni.compliance.v1alpha1.ComplianceConfig.OmniComplianceAction:
      type: object
      properties:
        keywords:
          type: array
          items:
            type: string
          title: keywords
          description: a list of config keywords
        confirmation_message:
          type: string
          title: confirmation_message
          description: confirmation for the config
        is_fuzzy_match:
          type: boolean
          title: is_fuzzy_match
          description: (OPTIONAL) fuzzy match for the config
      title: OmniComplianceAction
      required:
      - keywords
      - confirmation_message
      additionalProperties: false
      description: OmniComplianceAction - configuration action for omni compliance
    tcn.omni.compliance.v1alpha1.CreateComplianceConfigRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the complianceConfig
        compliance_config:
          title: compliance_config
          description: the complianceConfig to be created
          $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig'
      title: CreateComplianceConfigRequest
      required:
      - parent
      - compliance_config
      additionalProperties: false
      description: request used to create a complianceConfig
    tcn.omni.compliance.v1alpha1.GetComplianceConfigRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the complianceConfig
      title: GetComplianceConfigRequest
      required:
      - name
      additionalProperties: false
      description: request used to get a complianceConfig
    tcn.omni.compliance.v1alpha1.ListComplianceConfigsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed complianceConfigs
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListComplianceConfigsRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of complianceConfigs
    tcn.omni.compliance.v1alpha1.ListComplianceConfigsResponse:
      type: object
      properties:
        compliance_configs:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.compliance.v1alpha1.ComplianceConfig'
          title: compliance_configs
          description: list of complianceConfigs
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListComplianceConfigsResponse
      additionalProperties: false
      description: response for list complianceConfigs
    tcn.omni.type.ConnectedInboxAuthenticationType:
      type: string
      title: ConnectedInboxAuthenticationType
      enum:
      - CONNECTED_INBOX_AUTHENTICATION_TYPE_PASSWORD
      - CONNECTED_INBOX_AUTHENTICATION_TYPE_GOOGLE_XOAUTH2
      - CONNECTED_INBOX_AUTHENTICATION_TYPE_MICROSOFT_365
      description: ConnectedInboxAuthenticationType -
    tcn.omni.connectedinbox.v1alpha1.ConnectedInbox:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the connected inbox identifier
        email_address:
          type: string
          title: email_address
          description: (IMMUTABLE) email address of the connected inbox
        username:
          type: string
          title: username
          description: (OPTIONAL) username of accessing email
        password:
          type: string
          title: password
          description: (OPTIONAL) password for accessing email,
          writeOnly: true
        check_frequency_minutes:
          type:
          - integer
          - string
          title: check_frequency_minutes
          format: int64
          description: how often the email should be checked (in minutes)
        server:
          type: string
          title: server
          description: server name the email is located on
        server_port:
          type:
          - integer
          - string
          title: server_port
          format: int64
          description: server port the email is located on
        last_scheduled_time:
          title: last_scheduled_time
          description: time the email was last scheduled to be checked
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        last_checked_time:
          title: last_checked_time
          description: time the email was last checked
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        purge_threshold:
          type:
          - integer
          - string
          title: purge_threshold
          format: int64
          description: (OPTIONAL) how many emails should build up before getting purged
        consecutive_failures:
          type: integer
          title: consecutive_failures
          format: int32
          description: (OPTIONAL) number of consecutive failures allowed before entering
            an ERROR_STANDBY state
        last_error:
          title: last_error
          description: the last error that occured
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.StringValue'
        standby_error_time:
          title: standby_error_time
          description: time the email entered ERROR_STANDBY
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        last_update_time:
          title: last_update_time
          description: time the inbox was last update
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        max_message_size:
          type: integer
          title: max_message_size
          format: int32
          description: maximum message size
        max_messages:
          type: integer
          title: max_messages
          format: int32
          description: maximum number of messages
        authentication_type:
          title: authentication_type
          description: (OPTIONAL) type of authentication that should be used
          $ref: '#/components/schemas/tcn.omni.type.ConnectedInboxAuthenticationType'
        deleted:
          type: boolean
          title: deleted
          description: if the connected inbox deleted
          readOnly: true
        oauth_reference_id:
          type: string
          title: oauth_reference_id
          description: (OPTIONAL) the id used to reference the oauth information
        processed_folder:
          type: string
          title: processed_folder
          description: (OPTIONAL) optional custom folder name for messages that are
            successfully processed
        failed_folder:
          type: string
          title: failed_folder
          description: (OPTIONAL) optional custom folder name for messages that have
            failed to send
        sendername:
          type: string
          title: sendername
          description: (OPTIONAL) the display name that will be shown to recipients
            when emails are sent from this address
      title: ConnectedInbox
      required:
      - email_address
      - check_frequency_minutes
      - server
      - server_port
      - max_message_size
      - max_messages
      additionalProperties: false
      description: ConnectedInbox is the public api for the omni/connectedinbox
    tcn.omni.connectedinbox.v1alpha1.CreateConnectedInboxRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the connected inbox
        connected_inbox:
          title: connected_inbox
          description: the connected inbox to be created
          $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
      title: CreateConnectedInboxRequest
      required:
      - parent
      - connected_inbox
      additionalProperties: false
      description: request message CreateConnectedInboxRequest
    tcn.omni.connectedinbox.v1alpha1.DeleteConnectedInboxRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the connected inbox
      title: DeleteConnectedInboxRequest
      required:
      - name
      additionalProperties: false
      description: request to delete a connected inbox
    tcn.omni.connectedinbox.v1alpha1.DescribeConnectedInboxCredentialsRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the connected inbox
      title: DescribeConnectedInboxCredentialsRequest
      required:
      - name
      additionalProperties: false
      description: request to describe/retrieve the connected inbox password and email
        salt
    tcn.omni.connectedinbox.v1alpha1.DescribeConnectedInboxCredentialsResponse:
      type: object
      properties:
        password:
          type: string
          title: password
          description: the password of the connected inbox
        email_salt:
          type: string
          title: email_salt
          description: the email salt of the connected inbox
      title: DescribeConnectedInboxCredentialsResponse
      additionalProperties: false
      description: response message DescribeConnectedInboxCredentialsResponse
    tcn.omni.connectedinbox.v1alpha1.GetConnectedInboxRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the connected inbox
      title: GetConnectedInboxRequest
      required:
      - name
      additionalProperties: false
      description: request message GetConnectedInboxRequest
    tcn.omni.connectedinbox.v1alpha1.ListConnectedInboxesRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the connected inbox
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) filter
      title: ListConnectedInboxesRequest
      required:
      - parent
      additionalProperties: false
      description: request message ListConnectedInboxesRequest
    tcn.omni.connectedinbox.v1alpha1.ListConnectedInboxesResponse:
      type: object
      properties:
        connected_inboxes:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
          title: connected_inboxes
          description: connected inboxes
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListConnectedInboxesResponse
      additionalProperties: false
      description: response message ListConnectedInboxesResponse
    tcn.omni.connectedinbox.v1alpha1.TestConnectedInboxRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the connected inbox
        connected_inbox:
          title: connected_inbox
          description: the connected inbox we are testing
          $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
      title: TestConnectedInboxRequest
      required:
      - name
      - connected_inbox
      additionalProperties: false
      description: request to test the connected inbox
    tcn.omni.connectedinbox.v1alpha1.TestConnectedInboxResponse:
      type: object
      title: TestConnectedInboxResponse
      additionalProperties: false
      description: response message TestConnectedInboxResponse
    tcn.omni.connectedinbox.v1alpha1.UpdateConnectedInboxRequest:
      type: object
      properties:
        connected_inbox:
          title: connected_inbox
          description: the connected inbox we are updating
          $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the field mask used to update the connected inbox
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateConnectedInboxRequest
      required:
      - connected_inbox
      additionalProperties: false
      description: request message UpdateConnectedInboxRequest
    tcn.omni.contactlist.v1alpha1.ContactList:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the unique identifier of the contact list
        title:
          type: string
          title: title
          description: the contact list title identifier
        description:
          type: string
          title: description
          description: the contact list description identifier
        field_names:
          type: array
          items:
            type: string
          title: field_names
          description: list of field names
        project_sid:
          type:
          - integer
          - string
          title: project_sid
          format: int64
          description: identifier of associated project sid
        create_time:
          title: create_time
          description: created date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: updated date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        entry_count:
          type:
          - integer
          - string
          title: entry_count
          format: int64
          description: entry count details for the metadata
      title: ContactList
      required:
      - title
      - description
      - field_names
      - project_sid
      - entry_count
      additionalProperties: false
      description: ContactList is the public api for the omni/contactlist
    tcn.omni.contactlist.v1alpha1.GetContactListRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the contact list
      title: GetContactListRequest
      required:
      - name
      additionalProperties: false
      description: request message GetContactListRequest
    tcn.omni.contactlist.v1alpha1.ListContactListsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed contact lists
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListContactListsRequest
      required:
      - parent
      additionalProperties: false
      description: ListContactListsRequest - request to list contact lists
    tcn.omni.contactlist.v1alpha1.ListContactListsResponse:
      type: object
      properties:
        contact_lists:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.contactlist.v1alpha1.ContactList'
          title: contact_lists
          description: the listed contact lists
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListContactListsResponse
      additionalProperties: false
      description: ListContactListsResponse - result to listing contact lists
    tcn.omni.type.ConversationState:
      type: string
      title: ConversationState
      enum:
      - CONVERSATION_STATUS_NEW
      - CONVERSATION_STATUS_AWAITING_REPLY_FROM_CUSTOMER
      - CONVERSATION_STATUS_AWAITING_REPLY_FROM_AGENT
      - CONVERSATION_STATUS_CLOSED_TIMEOUT
      - CONVERSATION_STATUS_CLOSED_AGENT
      - CONVERSATION_STATUS_CLOSED_CUSTOMER
      - CONVERSATION_STATUS_SUSPENDED_AWAITING_REPLY_FROM_CUSTOMER
      - CONVERSATION_STATUS_AWAITING_ASSIGNMENT
      - CONVERSATION_STATUS_NEWLY_ASSIGNED
      - CONVERSATION_STATUS_WRAP_UP_CUSTOMER
      - CONVERSATION_STATUS_WRAP_UP_TIMEOUT
      - CONVERSATION_STATUS_CLOSED_MANAGER
      - CONVERSATION_STATUS_NEW_PENDING_CUSTOMER_REPLY
      - CONVERSATION_STATUS_FLOW
      - CONVERSATION_STATUS_CLOSED_DUPLICATE_THREAD
      description: ConversationState -
    tcn.omni.type.ProviderType:
      type: string
      title: ProviderType
      enum:
      - PROVIDER_TYPE_UNSPECIFIED
      - PROVIDER_TYPE_SENDGRID
      - PROVIDER_TYPE_TRANSACTIONAL_SENDGRID
      - PROVIDER_TYPE_BANDWIDTH
      - PROVIDER_TYPE_AUS_BURST_SMS
      - PROVIDER_TYPE_BURST_SMS
      - PROVIDER_TYPE_PLIVO
      - PROVIDER_TYPE_APEIRON
      - PROVIDER_TYPE_MEDIA_SAT
      - PROVIDER_TYPE_WHATS_APP
      - PROVIDER_TYPE_TEXT_LOCAL
      - PROVIDER_TYPE_SMART_PING
      description: ProviderType -
    tcn.omni.type.SenderType:
      type: string
      title: SenderType
      enum:
      - OMNI_SENDER_TYPE_AGENT
      - OMNI_SENDER_TYPE_CUSTOMER
      - OMNI_SENDER_TYPE_SYSTEM
      - OMNI_SENDER_TYPE_MANAGER
      - OMNI_SENDER_TYPE_FLOW
      description: SenderType -
    tcn.omni.conversation.v1alpha1.Assignment.AssignmentType:
      type: string
      title: AssignmentType
      enum:
      - PRIMARY_AGENT
      - SECONDARY_AGENT
      description: AssignmentType -
    tcn.omni.conversation.v1alpha1.Assignment:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) primary key or internal identifier for conversation
        is_active:
          type: boolean
          title: is_active
          description: is an active
        assignment_type:
          title: assignment_type
          description: type of assignment
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Assignment.AssignmentType'
        create_time:
          title: create_time
          description: date assignment was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: date assignment was last modified
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        user:
          title: user
          description: user data
          readOnly: true
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Assignment.User'
        asm_session_sid:
          type:
          - integer
          - string
          title: asm_session_sid
          format: int64
          description: (OPTIONAL) asm session sid
          deprecated: true
        asm_session:
          title: asm_session
          description: (OPTIONAL) asm session
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Assignment.AsmSession'
      title: Assignment
      required:
      - is_active
      - assignment_type
      additionalProperties: false
      description: represents a conversation assignment
    tcn.omni.conversation.v1alpha1.Assignment.AsmSession:
      type: object
      properties:
        name:
          type: string
          title: name
          description: asm session identifier
      title: AsmSession
      required:
      - name
      additionalProperties: false
      description: AsmSession -
    tcn.omni.conversation.v1alpha1.Assignment.User:
      type: object
      properties:
        username:
          type: string
          title: username
          description: the assigned user's name
          readOnly: true
      title: User
      additionalProperties: false
      description: metadata details related to the conversation assignment
    tcn.omni.conversation.v1alpha1.AssignmentMetadata.Title:
      type: string
      title: Title
      enum:
      - TITLE_UNSPECIFIED
      - TIMER_WAIT
      - TIMER_TALK
      - TIMER_TALK_INITIAL_AGENT_RESPONSE
      - TIMER_TALK_AGENT_RESPONSE
      - TIMER_TALK_CUSTOMER_RESPONSE
      - TIMER_TALK_SUSPENDED
      - TIMER_WRAP_UP
      - TIMER_IDLE
      description: Title represents the title of the metadata.
    tcn.omni.conversation.v1alpha1.AssignmentMetadata:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the metadata identifier
        create_time:
          title: create_time
          description: the time the metadata was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the metadata was last updated
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        title:
          title: title
          description: "(OPTIONAL) the metadata title\n Title must be provided, including
            AGENT_RESPONSE_TIME (0) as a valid value."
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata.Title'
        value:
          title: value
          description: the metadata value
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata.Value'
      title: AssignmentMetadata
      required:
      - value
      additionalProperties: false
      description: AssignmentMetadata represents system generated metadata for a conversation.
    tcn.omni.conversation.v1alpha1.AssignmentMetadata.DurationValue:
      type: object
      properties:
        start_time:
          title: start_time
          description: the time the duration started
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        end_time:
          title: end_time
          description: (OPTIONAL) the time the duration ended (if unset, still in
            progress)
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        duration:
          title: duration
          description: (OPTIONAL) the duration of the time range (won't be set until
            end_time is set)
          $ref: '#/components/schemas/google.protobuf.Duration'
      title: DurationValue
      required:
      - start_time
      additionalProperties: false
      description: "DurationValue is a value representing a total duration for a\n
        time range."
    tcn.omni.conversation.v1alpha1.AssignmentMetadata.TimeAggregateValue:
      type: object
      properties:
        instances_count:
          type:
          - integer
          - string
          title: instances_count
          format: int64
          description: the number of time instances aggregated
        total_duration:
          title: total_duration
          description: the total duration (sum) of all time instances
          $ref: '#/components/schemas/google.protobuf.Duration'
        average_duration:
          title: average_duration
          description: the average duration of all time instances
          $ref: '#/components/schemas/google.protobuf.Duration'
        last_instance_start_time:
          title: last_instance_start_time
          description: the time the last insance had started
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: TimeAggregateValue
      required:
      - instances_count
      - total_duration
      - average_duration
      - last_instance_start_time
      additionalProperties: false
      description: "TimeAggregateValue is a value representing an aggregate of\n time
        based data (e.g. total time spent in a conversation, etc.)"
    tcn.omni.conversation.v1alpha1.AssignmentMetadata.Value:
      type: object
      oneOf:
      - properties:
          duration:
            title: duration
            description: duration value
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata.DurationValue'
        title: duration
        required:
        - duration
      - properties:
          time_aggregate:
            title: time_aggregate
            description: aggregate of time instances
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata.TimeAggregateValue'
        title: time_aggregate
        required:
        - time_aggregate
      title: Value
      additionalProperties: false
      description: Value represents the value of the metadata.
    tcn.omni.conversation.v1alpha1.CollectedData:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the conversation identifier
        title:
          type: string
          title: title
          description: the name of the data
        value:
          type: string
          title: value
          description: the value of the data
        collection_time:
          title: collection_time
          description: when the data was collected
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        user_id:
          title: user_id
          description: (OPTIONAL) the user that collected the data (if this is not
            set then it was collected by the customer)
          deprecated: true
          $ref: '#/components/schemas/google.protobuf.StringValue'
        user:
          title: user
          description: (OPTIONAL) user
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CollectedData.User'
      title: CollectedData
      required:
      - title
      - value
      additionalProperties: false
      description: represents a a list of information collected for a conversation
    tcn.omni.conversation.v1alpha1.CollectedData.User:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the user identifier
      title: User
      required:
      - name
      additionalProperties: false
      description: User -
    tcn.omni.conversation.v1alpha1.Conversation.ConversationResult:
      type: string
      title: ConversationResult
      enum:
      - NONE
      - ABANDONED
      description: ConversationResult -
    tcn.omni.conversation.v1alpha1.Conversation:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the conversation identifier
        channel_type:
          title: channel_type
          description: channel type
          $ref: '#/components/schemas/tcn.omni.type.ChannelType'
        skills:
          type: object
          title: skills
          additionalProperties:
            type: boolean
            title: value
          description: (OPTIONAL) skills -
        create_time:
          title: create_time
          description: when the conversation was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: when the conversation was last updated
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        end_time:
          title: end_time
          description: time the conversation was ended
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        state:
          title: state
          description: status of the conversation
          readOnly: true
          $ref: '#/components/schemas/tcn.omni.type.ConversationState'
        last_state_change_time:
          title: last_state_change_time
          description: the time the converstion state was last changed
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        reference_id:
          title: reference_id
          description: (OPTIONAL) the indentifire used to reference this converstaion
          $ref: '#/components/schemas/google.protobuf.StringValue'
        sla_timeouts:
          title: sla_timeouts
          description: (OPTIONAL) SLA timers
          $ref: '#/components/schemas/tcn.omni.type.SLATimeouts'
        last_message_time:
          title: last_message_time
          description: time the last message was received
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        last_message_group_time:
          title: last_message_group_time
          description: "the time that the last group of messages was started. A message
            group is a\n continuous set of messages from the same type of sender"
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        last_message_group_sender_type:
          title: last_message_group_sender_type
          description: the sender type of the last message group
          readOnly: true
          $ref: '#/components/schemas/tcn.omni.type.SenderType'
        system_address:
          type: string
          title: system_address
          description: the address used by the system to send messages to the customer
        customer_address:
          type: string
          title: customer_address
          description: the address used by the customer to send message into the system
        provider:
          title: provider
          description: (OPTIONAL) the procvider used to send messages
          $ref: '#/components/schemas/tcn.omni.type.ProviderType'
        result:
          title: result
          description: the result type of the conversation
          readOnly: true
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation.ConversationResult'
        task:
          title: task
          description: (OPTIONAL) task
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation.Task'
        compliance_config:
          title: compliance_config
          description: (OPTIONAL) compliance config
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation.ComplianceConfig'
      title: Conversation
      required:
      - channel_type
      - system_address
      - customer_address
      additionalProperties: false
      description: Conversation service is the public api for the omni/conversation
        service.
    tcn.omni.conversation.v1alpha1.Conversation.ComplianceConfig:
      type: object
      properties:
        name:
          type: string
          title: name
          description: config identifier
      title: ComplianceConfig
      required:
      - name
      additionalProperties: false
      description: ComplianceConfig -
    tcn.omni.conversation.v1alpha1.Conversation.SkillsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: boolean
          title: value
      title: SkillsEntry
      additionalProperties: false
    tcn.omni.conversation.v1alpha1.Conversation.Task:
      type: object
      properties:
        name:
          type: string
          title: name
          description: task identifier
      title: Task
      required:
      - name
      additionalProperties: false
      description: Task -
    tcn.omni.conversation.v1alpha1.Metadata.Title:
      type: string
      title: Title
      enum:
      - AGENT_RESPONSE_TIME
      - CUSTOMER_WAIT_TIME
      - HANDLE_TIME
      - TRANSCRIPT_PATH
      - FLOW_DATA
      - VOICE_DATA
      - TIMER_WAIT
      - TIMER_TALK
      - TIMER_TALK_INITIAL_AGENT_RESPONSE
      - TIMER_TALK_AGENT_RESPONSE
      - TIMER_TALK_CUSTOMER_RESPONSE
      - TIMER_TALK_SUSPENDED
      - TIMER_WRAP_UP
      - TIMER_IDLE
      description: Title represents the title of the metadata.
    tcn.omni.conversation.v1alpha1.Metadata:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the metadata identifier
        create_time:
          title: create_time
          description: the time the metadata was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the metadata was last updated
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        title:
          title: title
          description: "(OPTIONAL) the metadata title\n Title must be provided, including
            AGENT_RESPONSE_TIME (0) as a valid value."
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata.Title'
        value:
          title: value
          description: the metadata value
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata.Value'
      title: Metadata
      required:
      - value
      additionalProperties: false
      description: Metadata represents system generated metadata for a conversation.
    tcn.omni.conversation.v1alpha1.Metadata.DurationValue:
      type: object
      properties:
        start_time:
          title: start_time
          description: the time the duration started
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        end_time:
          title: end_time
          description: (OPTIONAL) the time the duration ended (if unset, still in
            progress)
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        duration:
          title: duration
          description: (OPTIONAL) the duration of the time range (won't be set until
            end_time is set)
          $ref: '#/components/schemas/google.protobuf.Duration'
      title: DurationValue
      required:
      - start_time
      additionalProperties: false
      description: "DurationValue is a value representing a total duration for a\n
        time range."
    tcn.omni.conversation.v1alpha1.Metadata.FlowDataValue:
      type: object
      properties:
        state_id:
          type:
          - integer
          - string
          title: state_id
          format: int64
          description: flow state identifier
        flow_id:
          type:
          - integer
          - string
          title: flow_id
          format: int64
          description: flow identifier
      title: FlowDataValue
      required:
      - state_id
      - flow_id
      additionalProperties: false
      description: FlowDataValue is a value representing data for a conversation flow.
    tcn.omni.conversation.v1alpha1.Metadata.TimeAggregateValue:
      type: object
      properties:
        instances_count:
          type:
          - integer
          - string
          title: instances_count
          format: int64
          description: the number of time instances aggregated
        total_duration:
          title: total_duration
          description: the total duration (sum) of all time instances
          $ref: '#/components/schemas/google.protobuf.Duration'
        average_duration:
          title: average_duration
          description: the average duration of all time instances
          $ref: '#/components/schemas/google.protobuf.Duration'
        last_instance_start_time:
          title: last_instance_start_time
          description: the time the last insance had started
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: TimeAggregateValue
      required:
      - instances_count
      - total_duration
      - average_duration
      - last_instance_start_time
      additionalProperties: false
      description: "TimeAggregateValue is a value representing an aggregate of\n time
        based data (e.g. total time spent in a conversation, etc.)"
    tcn.omni.conversation.v1alpha1.Metadata.Value:
      type: object
      oneOf:
      - properties:
          duration:
            title: duration
            description: duration value
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata.DurationValue'
        title: duration
        required:
        - duration
      - properties:
          flow_data:
            title: flow_data
            description: flow data
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata.FlowDataValue'
        title: flow_data
        required:
        - flow_data
      - properties:
          time_aggregate:
            title: time_aggregate
            description: aggregate of time instances
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata.TimeAggregateValue'
        title: time_aggregate
        required:
        - time_aggregate
      - properties:
          transcript_location:
            type: string
            title: transcript_location
            description: location of conversation transcript
        title: transcript_location
        required:
        - transcript_location
      - properties:
          voice_data:
            title: voice_data
            description: voice call data
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata.VoiceDataValue'
        title: voice_data
        required:
        - voice_data
      title: Value
      additionalProperties: false
      description: Value represents the value of the metadata.
    tcn.omni.conversation.v1alpha1.Metadata.VoiceDataValue:
      type: object
      properties:
        org_id:
          type: string
          title: org_id
          description: the organization identifier of the owning org
        caller_sid:
          type:
          - integer
          - string
          title: caller_sid
          format: int64
          description: the call identifier
        call_type:
          type: integer
          title: call_type
          format: int32
          description: (OPTIONAL) the call type (must be provided, with 0 as a valid
            value)
      title: VoiceDataValue
      required:
      - org_id
      - caller_sid
      additionalProperties: false
      description: VoiceDataValue is a value representing data for a voice call.
    tcn.omni.conversation.v1alpha1.BatchCreateAssignmentMetadataRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: (OPTIONAL) the parent of this assignment_metadata
        requests:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CreateAssignmentMetadataRequest'
          title: requests
          description: "the assignment_metadata to create\n (-- api-linter: core::0233::request-requests-field=disabled\n
            \    aip.dev/not-precedent: This is not assignmentMetadatum. --)"
      title: BatchCreateAssignmentMetadataRequest
      required:
      - requests
      additionalProperties: false
      description: BatchCreateAssignmentMetadataRequest is a request to update or
        insert a new assignment_metadata.
    tcn.omni.conversation.v1alpha1.BatchCreateAssignmentMetadataResponse:
      type: object
      properties:
        assignment_metadata:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata'
          title: assignment_metadata
          description: assignment_metadata to created
      title: BatchCreateAssignmentMetadataResponse
      additionalProperties: false
      description: "BatchCreateAssignmentMetadataResponse is a response to update
        or insert a new assignment_metadata.\n (-- api-linter: core::0233::response-resource-field=disabled\n
        \    aip.dev/not-precedent: The field is not assignmentMetadatum. --)"
    tcn.omni.conversation.v1alpha1.BatchCreateMetadataRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: (OPTIONAL) the parent of this metadata
        requests:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CreateMetadataRequest'
          title: requests
          description: "the metadata to create\n (-- api-linter: core::0233::request-requests-field=disabled\n
            \    aip.dev/not-precedent: This is not metadatum. --)"
      title: BatchCreateMetadataRequest
      required:
      - requests
      additionalProperties: false
      description: BatchCreateMetadataRequest is a request to update or insert a new
        metadata.
    tcn.omni.conversation.v1alpha1.BatchCreateMetadataResponse:
      type: object
      properties:
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata'
          title: metadata
          description: metadata to created
      title: BatchCreateMetadataResponse
      additionalProperties: false
      description: "BatchCreateMetadataResponse is a response to update or insert
        a new metadata.\n (-- api-linter: core::0233::response-resource-field=disabled\n
        \    aip.dev/not-precedent: The field is not metadatum. --)"
    tcn.omni.conversation.v1alpha1.CreateAssignmentMetadataRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of this assignment_metadata
        assignment_metadata:
          title: assignment_metadata
          description: the assignment_metadata to create
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata'
      title: CreateAssignmentMetadataRequest
      required:
      - parent
      - assignment_metadata
      additionalProperties: false
      description: CreateAssignmentMetadataRequest is a request to update or insert
        a new assignment_metadata.
    tcn.omni.conversation.v1alpha1.CreateCollectedDataRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the collected data
        collected_data:
          title: collected_data
          description: the collected data to be created
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CollectedData'
      title: CreateCollectedDataRequest
      required:
      - parent
      - collected_data
      additionalProperties: false
      description: request used to create collected data
    tcn.omni.conversation.v1alpha1.CreateConversationRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of this conversation
        conversation:
          title: conversation
          description: the conversation to create
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation'
      title: CreateConversationRequest
      required:
      - parent
      - conversation
      additionalProperties: false
      description: CreateConversationRequest is a request to create a new conversation.
    tcn.omni.conversation.v1alpha1.CreateMetadataRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of this metadata
        metadata:
          title: metadata
          description: the metadata to create
          $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata'
      title: CreateMetadataRequest
      required:
      - parent
      - metadata
      additionalProperties: false
      description: CreateMetadataRequest is a request to update or insert a new metadata.
    tcn.omni.conversation.v1alpha1.GetAssignmentMetadataRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the assignment_metadata
      title: GetAssignmentMetadataRequest
      required:
      - name
      additionalProperties: false
      description: GetAssignmentMetadataRequest is a request to get a conversation
        assignment_metadata.
    tcn.omni.conversation.v1alpha1.GetAssignmentRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the conversation assignment
      title: GetAssignmentRequest
      required:
      - name
      additionalProperties: false
      description: request message GetAssignmentRequest
    tcn.omni.conversation.v1alpha1.GetCollectedDataRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the collected data
      title: GetCollectedDataRequest
      required:
      - name
      additionalProperties: false
      description: request message GetCollectedDataRequest
    tcn.omni.conversation.v1alpha1.GetConversationRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the conversation
      title: GetConversationRequest
      required:
      - name
      additionalProperties: false
      description: request message GetConversationRequest
    tcn.omni.conversation.v1alpha1.GetMetadataRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the metadata
      title: GetMetadataRequest
      required:
      - name
      additionalProperties: false
      description: GetMetadataRequest is a request to get a conversation metadata.
    tcn.omni.conversation.v1alpha1.ListAssignmentMetadataRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed assignment_metadata
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListAssignmentMetadataRequest
      required:
      - parent
      additionalProperties: false
      description: ListAssignmentMetadataRequest is a request to list conversation
        assignment_metadata.
    tcn.omni.conversation.v1alpha1.ListAssignmentMetadataResponse:
      type: object
      properties:
        assignment_metadata:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.AssignmentMetadata'
          title: assignment_metadata
          description: the listed metadata
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListAssignmentMetadataResponse
      additionalProperties: false
      description: ListAssignmentMetadataResponse is a response to list conversation
        assignment_metadata.
    tcn.omni.conversation.v1alpha1.ListAssignmentsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed conversation assignments
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListAssignmentsRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of conversation assignments
    tcn.omni.conversation.v1alpha1.ListAssignmentsResponse:
      type: object
      properties:
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Assignment'
          title: assignments
          description: conversation assignments
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListAssignmentsResponse
      additionalProperties: false
      description: response message ListAssignmentsResponse
    tcn.omni.conversation.v1alpha1.ListCollectedDataRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed collected data
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListCollectedDataRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of collected data
    tcn.omni.conversation.v1alpha1.ListCollectedDataResponse:
      type: object
      properties:
        collected_data:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.CollectedData'
          title: collected_data
          description: collected data
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListCollectedDataResponse
      additionalProperties: false
      description: response message ListCollectedDataResponse
    tcn.omni.conversation.v1alpha1.ListConversationsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed conversations
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListConversationsRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of conversations
    tcn.omni.conversation.v1alpha1.ListConversationsResponse:
      type: object
      properties:
        conversations:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Conversation'
          title: conversations
          description: conversations
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListConversationsResponse
      additionalProperties: false
      description: response message ListConversationsResponse
    tcn.omni.conversation.v1alpha1.ListMetadataRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed metadata
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListMetadataRequest
      required:
      - parent
      additionalProperties: false
      description: ListMetadataRequest is a request to list conversation metadata.
    tcn.omni.conversation.v1alpha1.ListMetadataResponse:
      type: object
      properties:
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.conversation.v1alpha1.Metadata'
          title: metadata
          description: the listed metadata
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListMetadataResponse
      additionalProperties: false
      description: ListMetadataResponse is a response to list conversation metadata.
    tcn.omni.disposition.v1alpha1.Disposition:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name identifier for a disposition
        create_time:
          title: create_time
          description: created date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: updated date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        disposition:
          type: string
          title: disposition
          description: disposition string
        deleted:
          type: boolean
          title: deleted
          description: if the disposition was deleted
          readOnly: true
      title: Disposition
      required:
      - disposition
      additionalProperties: false
      description: Disposition -
    tcn.omni.disposition.v1alpha1.CreateDispositionRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the diposition
        disposition:
          title: disposition
          description: the disposition to be created
          $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
      title: CreateDispositionRequest
      required:
      - parent
      - disposition
      additionalProperties: false
      description: request to create a new disposition
    tcn.omni.disposition.v1alpha1.DeleteDispositionRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the disposition
      title: DeleteDispositionRequest
      required:
      - name
      additionalProperties: false
      description: request to delete a disposition
    tcn.omni.disposition.v1alpha1.GetDispositionRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the disposition
      title: GetDispositionRequest
      required:
      - name
      additionalProperties: false
      description: request used to get a disposition
    tcn.omni.disposition.v1alpha1.ListDispositionsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed dispositions
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListDispositionsRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of dispositions
    tcn.omni.disposition.v1alpha1.ListDispositionsResponse:
      type: object
      properties:
        dispositions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
          title: dispositions
          description: list of dispositions
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListDispositionsResponse
      additionalProperties: false
      description: response for list dispositions
    tcn.omni.disposition.v1alpha1.UpdateDispositionRequest:
      type: object
      properties:
        disposition:
          title: disposition
          description: the disposition we are updating
          $ref: '#/components/schemas/tcn.omni.disposition.v1alpha1.Disposition'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the field mask used to update the disposition
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateDispositionRequest
      required:
      - disposition
      additionalProperties: false
      description: request to update an existing disposition
    tcn.omni.eventlog.v1alpha1.ProcessOmniEventLogRequest:
      type: object
      properties:
        org_id:
          type: string
          title: org_id
          description: the org id associated
        event:
          type: string
          title: event
          description: the actual event
        event_type:
          type: integer
          title: event_type
          format: int32
          description: the type of the event
        conversation_sid:
          title: conversation_sid
          description: (OPTIONAL) the conversation sid associated with the event
          $ref: '#/components/schemas/google.protobuf.Int64Value'
        primary_user_id:
          title: primary_user_id
          description: (OPTIONAL) the primary user id associated with the event
          $ref: '#/components/schemas/google.protobuf.StringValue'
        secondary_user_id:
          title: secondary_user_id
          description: (OPTIONAL) the secondary user id associated with the event
          $ref: '#/components/schemas/google.protobuf.StringValue'
        primary_asm_session_sid:
          title: primary_asm_session_sid
          description: (OPTIONAL) the primary asm session sid associated with the
            event
          $ref: '#/components/schemas/google.protobuf.Int64Value'
      title: ProcessOmniEventLogRequest
      required:
      - org_id
      - event
      - event_type
      additionalProperties: false
      description: ProcessOmniEventLogRequest -
    tcn.omni.eventlog.v1alpha1.ProcessOmniEventLogResponse:
      type: object
      title: ProcessOmniEventLogResponse
      additionalProperties: false
      description: ProcessOmniEventLogResponse -
    tcn.omni.type.MessageFormat:
      type: string
      title: MessageFormat
      enum:
      - MESSAGE_FORMAT_UNSPECIFIED
      - MESSAGE_FORMAT_HTML
      - MESSAGE_FORMAT_HTML_FORM
      description: MessageFormat -
    tcn.omni.type.MessageState:
      type: string
      title: MessageState
      enum:
      - OMNI_MESSAGE_CREATED
      - OMNI_INBOUND_MESSAGE_RECEIVED
      - OMNI_OUTBOUND_MESSAGE_RECEIVED
      - OMNI_OUTBOUND_MESSAGE_WAITING
      - OMNI_OUTBOUND_MESSAGE_PROCESSING
      - OMNI_OUTBOUND_MESSAGE_DNC
      - OMNI_OUTBOUND_MESSAGE_INVALID
      - OMNI_OUTBOUND_MESSAGE_ATTACHMENT_ERROR
      - OMNI_OUTBOUND_MESSAGE_CANCELLED
      - OMNI_OUTBOUND_MESSAGE_QUEUED
      - OMNI_OUTBOUND_MESSAGE_DELIVERED
      - OMNI_OUTBOUND_MESSAGE_DROPPED
      - OMNI_OUTBOUND_MESSAGE_DEFERRED
      - OMNI_OUTBOUND_MESSAGE_BOUNCED
      - OMNI_OUTBOUND_MESSAGE_OPENED
      - OMNI_OUTBOUND_MESSAGE_CLICKED
      - OMNI_OUTBOUND_MESSAGE_UNSUBSCRIBED
      - OMNI_OUTBOUND_MESSAGE_MARKED_AS_SPAM
      - OMNI_OUTBOUND_MESSAGE_BLOCKED
      - OMNI_OUTBOUND_MESSAGE_UNCONFIRMED_DELIVERY
      - OMNI_SYSTEM_MESSAGE
      description: MessageState -
    tcn.omni.message.v1alpha1.Message:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the name of the message
        create_time:
          title: create_time
          description: the time the message was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the message was last modified
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        task:
          title: task
          description: (OPTIONAL) The details for the task associated with the conversation.
          $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Task'
        user:
          title: user
          description: (OPTIONAL) the user that sent the message
          $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.User'
        sender_type:
          title: sender_type
          description: if this message is coming from omni boss is a manager message
          $ref: '#/components/schemas/tcn.omni.type.SenderType'
        channel_type:
          title: channel_type
          description: the channel type of the message
          $ref: '#/components/schemas/tcn.omni.type.ChannelType'
        system_address:
          type: string
          title: system_address
          description: (OPTIONAL) the address the tcn systen is using
        customer_address:
          type: string
          title: customer_address
          description: (OPTIONAL) the address the customer is using
        provider:
          title: provider
          description: (OPTIONAL) the provider of the message
          $ref: '#/components/schemas/tcn.omni.type.ProviderType'
        provider_metadata:
          type: object
          title: provider_metadata
          additionalProperties:
            type: string
            title: value
          description: (OPTIONAL) The provider metadata for the message
        billed_units:
          type: integer
          title: billed_units
          format: int32
          description: The number of units the message will be billed for
          readOnly: true
        reference_id:
          title: reference_id
          description: "(OPTIONAL) The id a non provider system uses to reference
            the message. An example would be\n the MessageId header in an email."
          $ref: '#/components/schemas/google.protobuf.StringValue'
        provider_reference_id:
          title: provider_reference_id
          description: (OPTIONAL) The id a provider uses to reference the message
          $ref: '#/components/schemas/google.protobuf.StringValue'
        ui_reference_id:
          title: ui_reference_id
          description: (OPTIONAL) The id a ui uses to reference the message
          $ref: '#/components/schemas/google.protobuf.StringValue'
        state:
          title: state
          description: the state of the message
          readOnly: true
          $ref: '#/components/schemas/tcn.omni.type.MessageState'
        state_description:
          title: state_description
          description: the description of the state
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.StringValue'
        compliance_config:
          title: compliance_config
          description: the compliance config ran for the message
          readOnly: true
          $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.ComplianceConfig'
        subject:
          title: subject
          description: (OPTIONAL) the subject of the message
          $ref: '#/components/schemas/google.protobuf.StringValue'
        format:
          title: format
          description: (OPTIONAL) the message format
          $ref: '#/components/schemas/tcn.omni.type.MessageFormat'
        raw_data_location:
          title: raw_data_location
          description: where the raw message is stored
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.StringValue'
        payload:
          title: payload
          description: the payload of the message
          $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload'
      title: Message
      required:
      - sender_type
      - channel_type
      - payload
      additionalProperties: false
      description: Message is the public api for the omni/message=
    tcn.omni.message.v1alpha1.Message.ComplianceConfig:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name/identifier for the compliance config
          readOnly: true
        scrub_list_check:
          type: boolean
          title: scrub_list_check
          description: indicates if the message failed the scrub list check
          readOnly: true
        failed_rules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.ComplianceConfig.Rule'
          title: failed_rules
          description: the complaicne rule set rules that failed
          readOnly: true
      title: ComplianceConfig
      additionalProperties: false
      description: the compliance config ran for the message
    tcn.omni.message.v1alpha1.Message.ComplianceConfig.Rule:
      type: object
      properties:
        text:
          type: string
          title: text
          description: text representation of the compliance rule
          readOnly: true
        plugin_response:
          type: string
          title: plugin_response
          description: extra response data
          readOnly: true
      title: Rule
      additionalProperties: false
      description: the structure of the compliance rule
    tcn.omni.message.v1alpha1.Message.Payload:
      type: object
      oneOf:
      - properties:
          assign_conversation:
            title: assign_conversation
            description: assign conversation
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.AssignConversation'
        title: assign_conversation
        required:
        - assign_conversation
      - properties:
          canned_message:
            title: canned_message
            description: canned message
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.CannedMessage'
        title: canned_message
        required:
        - canned_message
      - properties:
          close_conversation:
            title: close_conversation
            description: close conversation
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.CloseConversation'
        title: close_conversation
        required:
        - close_conversation
      - properties:
          data_message:
            title: data_message
            description: data message
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.DataMessage'
        title: data_message
        required:
        - data_message
      - properties:
          finish_wrap_up:
            title: finish_wrap_up
            description: finished wrap up
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.FinishWrapUp'
        title: finish_wrap_up
        required:
        - finish_wrap_up
      - properties:
          off_loaded_text_message:
            title: off_loaded_text_message
            description: off loaded text message
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.OffLoadedTextMessage'
        title: off_loaded_text_message
        required:
        - off_loaded_text_message
      - properties:
          queue_info:
            title: queue_info
            description: queue info
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.QueueInfo'
        title: queue_info
        required:
        - queue_info
      - properties:
          reassignment:
            title: reassignment
            description: reassignment notification
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.Reassignment'
        title: reassignment
        required:
        - reassignment
      - properties:
          request_queue_info:
            title: request_queue_info
            description: request queue info
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.RequestQueueInfo'
        title: request_queue_info
        required:
        - request_queue_info
      - properties:
          start_wrap_up:
            title: start_wrap_up
            description: start wrap up
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.StartWrapUp'
        title: start_wrap_up
        required:
        - start_wrap_up
      - properties:
          suspend:
            title: suspend
            description: suspend
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.Suspend'
        title: suspend
        required:
        - suspend
      - properties:
          text_message:
            title: text_message
            description: text message
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.TextMessage'
        title: text_message
        required:
        - text_message
      - properties:
          typing_notification:
            title: typing_notification
            description: typing notification
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.TypingNotification'
        title: typing_notification
        required:
        - typing_notification
      - properties:
          unassign_conversation:
            title: unassign_conversation
            description: unassign conversation
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.UnassignConversation'
        title: unassign_conversation
        required:
        - unassign_conversation
      title: Payload
      additionalProperties: false
      description: the structure of the message payload
    tcn.omni.message.v1alpha1.Message.Payload.AssignConversation:
      type: object
      properties:
        user:
          title: user
          description: the user to assign the conversation to
          $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.User'
      title: AssignConversation
      required:
      - user
      additionalProperties: false
      description: assign conversation to agent
    tcn.omni.message.v1alpha1.Message.Payload.CannedMessage:
      type: object
      properties:
        canned_message:
          title: canned_message
          description: canned message
          $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.Payload.CannedMessage.CannedMessage'
      title: CannedMessage
      required:
      - canned_message
      additionalProperties: false
      description: CannedMessage - message payload for canned messages
    tcn.omni.message.v1alpha1.Message.Payload.CannedMessage.CannedMessage:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the canned message
      title: CannedMessage
      required:
      - name
      additionalProperties: false
      description: the structure of the canned message
    tcn.omni.message.v1alpha1.Message.Payload.CloseConversation:
      type: object
      title: CloseConversation
      additionalProperties: false
      description: CloseConversation - message payload to close conversation
    tcn.omni.message.v1alpha1.Message.Payload.DataMessage:
      type: object
      properties:
        data:
          type: string
          title: data
          description: Data for flows, should always be json
        message:
          type: string
          title: message
          description: (OPTIONAL) Message id of the html form this is in reply to
      title: DataMessage
      required:
      - data
      additionalProperties: false
      description: DataMessage - message payload for data messages
    tcn.omni.message.v1alpha1.Message.Payload.FinishWrapUp:
      type: object
      title: FinishWrapUp
      additionalProperties: false
      description: FinishWrapUp - message payload to finish wrap up
    tcn.omni.message.v1alpha1.Message.Payload.OffLoadedTextMessage:
      type: object
      properties:
        location:
          type: string
          title: location
          description: location of the offloaded message
        attachments:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: attachments
          description: (OPTIONAL) attachment names if there are some
      title: OffLoadedTextMessage
      required:
      - location
      additionalProperties: false
      description: OffLoadedTextMessage -
    tcn.omni.message.v1alpha1.Message.Payload.QueueInfo:
      type: object
      properties:
        position:
          type: integer
          title: position
          format: int32
          description: the position in the queue
          readOnly: true
      title: QueueInfo
      additionalProperties: false
      description: QueueInfo - message payload for queue information
    tcn.omni.message.v1alpha1.Message.Payload.Reassignment:
      type: object
      properties:
        current_user:
          title: current_user
          description: the current user being unassigned
          $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.User'
        new_user:
          title: new_user
          description: (OPTIONAL) the new user being assigned
          $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.User'
      title: Reassignment
      required:
      - current_user
      additionalProperties: false
      description: Message payload for reassigning agents
    tcn.omni.message.v1alpha1.Message.Payload.RequestQueueInfo:
      type: object
      title: RequestQueueInfo
      additionalProperties: false
      description: RequestQueueInfo - message payload for requesting queue information
    tcn.omni.message.v1alpha1.Message.Payload.StartWrapUp:
      type: object
      title: StartWrapUp
      additionalProperties: false
      description: StartWrapUp - message payload to start wrap up
    tcn.omni.message.v1alpha1.Message.Payload.Suspend:
      type: object
      title: Suspend
      additionalProperties: false
      description: Suspend - message payload to suspend conversation
    tcn.omni.message.v1alpha1.Message.Payload.TextMessage:
      type: object
      properties:
        text:
          type: string
          title: text
          description: message containing Urls
        attachments:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: attachments
          description: (OPTIONAL) attachments names if there are some
      title: TextMessage
      required:
      - text
      additionalProperties: false
      description: TextMessage -
    tcn.omni.message.v1alpha1.Message.Payload.TypingNotification:
      type: object
      title: TypingNotification
      additionalProperties: false
      description: TypingNotification -
    tcn.omni.message.v1alpha1.Message.Payload.UnassignConversation:
      type: object
      properties:
        user:
          title: user
          description: the list of users to unassign
          $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message.User'
        all:
          type: boolean
          title: all
          description: (OPTIONAL) unassign all users
      title: UnassignConversation
      required:
      - user
      additionalProperties: false
      description: OmniMessage payload for unassigning an agent(s)
    tcn.omni.message.v1alpha1.Message.ProviderMetadataEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: ProviderMetadataEntry
      additionalProperties: false
    tcn.omni.message.v1alpha1.Message.Task:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name/identifier for the task.
      title: Task
      required:
      - name
      additionalProperties: false
      description: The structure of the task details
    tcn.omni.message.v1alpha1.Message.User:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name/identifier for the user
        asm_session:
          type: string
          title: asm_session
          description: (OPTIONAL) the name/identifier for the user's asm session
        given_name:
          type: string
          title: given_name
          description: the display name for the user
          readOnly: true
        family_name:
          type: string
          title: family_name
          description: the family name for the user
          readOnly: true
        username:
          type: string
          title: username
          description: the username for the user
          readOnly: true
      title: User
      required:
      - name
      additionalProperties: false
      description: User - the user structure
    tcn.omni.message.v1alpha1.GetMessageRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the message
      title: GetMessageRequest
      required:
      - name
      additionalProperties: false
      description: request message GetMessageRequest
    tcn.omni.message.v1alpha1.ListMessagesRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the message
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) filter
      title: ListMessagesRequest
      required:
      - parent
      additionalProperties: false
      description: request message ListMessagesRequest
    tcn.omni.message.v1alpha1.ListMessagesResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message'
          title: messages
          description: messages
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListMessagesResponse
      additionalProperties: false
      description: response message ListMessagesResponse
    tcn.omni.message.v1alpha1.SendMessageRequest:
      type: object
      title: SendMessageRequest
      additionalProperties: false
      description: request message SendMessageRequest
    tcn.omni.message.v1alpha1.SendMessageResponse:
      type: object
      title: SendMessageResponse
      additionalProperties: false
      description: response message SendMessageResponse
    tcn.omni.message.v1alpha1.StreamMessagesRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the message
        conversation:
          type: string
          title: conversation
          description: the name of the conversation to stream messages for
      title: StreamMessagesRequest
      required:
      - parent
      - conversation
      additionalProperties: false
      description: request message ListMessagesRequest
    tcn.omni.message.v1alpha1.StreamMessagesResponse:
      type: object
      properties:
        message:
          title: message
          description: message
          $ref: '#/components/schemas/tcn.omni.message.v1alpha1.Message'
      title: StreamMessagesResponse
      additionalProperties: false
      description: request message StreamMessagesResponse
    tcn.omni.msgtextcleaner.v1alpha1.CleanMsgTextsRequest:
      type: object
      properties:
        texts:
          type: array
          items:
            type: string
          title: texts
          description: Required. Contains the 'dirty' msg texts.
        channel_type:
          title: channel_type
          description: "Required. Channel type of the messages containing the msg
            texts.\n Determines the actions performed when cleaning the text.\n\n
            - CHANNEL_TYPE_EMAIL\n    - Strips all html.\n    - Strips email signatures,
            previous replies, etc."
          $ref: '#/components/schemas/tcn.omni.type.ChannelType'
      title: CleanMsgTextsRequest
      required:
      - texts
      - channel_type
      additionalProperties: false
      description: Request to clean msg texts.
    tcn.omni.msgtextcleaner.v1alpha1.CleanMsgTextsResponse:
      type: object
      properties:
        texts:
          type: array
          items:
            type: string
            readOnly: true
          title: texts
          description: Contains the 'clean' msg texts.
          readOnly: true
      title: CleanMsgTextsResponse
      additionalProperties: false
      description: Response to clean msg texts.
    tcn.omni.msgtextcleaner.v1alpha1.CleanStoredMsgTextsRequest:
      type: object
      properties:
        urls:
          type: array
          items:
            type: string
          title: urls
          description: Required. Remote locations containing the 'dirty' msg texts.
        channel_type:
          title: channel_type
          description: "Required. Channel type of the messages containing the msg
            texts.\n Determines the actions performed when cleaning the text.\n\n
            - CHANNEL_TYPE_EMAIL\n    - Strips all html.\n    - Strips email signatures,
            previous replies, etc."
          $ref: '#/components/schemas/tcn.omni.type.ChannelType'
        org_id:
          type: string
          title: org_id
          description: Required. Org ownership of the stored messages.
      title: CleanStoredMsgTextsRequest
      required:
      - urls
      - channel_type
      - org_id
      additionalProperties: false
      description: Request to clean msg texts stored remotely.
    tcn.omni.msgtextcleaner.v1alpha1.CleanStoredMsgTextsResponse:
      type: object
      properties:
        urls:
          type: array
          items:
            type: string
            readOnly: true
          title: urls
          description: Remote locations containing the 'clean' msg texts.
          readOnly: true
      title: CleanStoredMsgTextsResponse
      additionalProperties: false
      description: Response to clean msg texts stored remotely.
    tcn.omni.oauth.v1alpha1.OauthConfig:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name identifier for oauth
        access_token:
          type: string
          title: access_token
          description: the access token for the oauth config
        refresh_token:
          type: string
          title: refresh_token
          description: the refresh token for the oauth config
        expires_time:
          title: expires_time
          description: the time the access token expires
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        reference_id:
          type: string
          title: reference_id
          description: the reference id for the oauth config
      title: OauthConfig
      required:
      - access_token
      - refresh_token
      - expires_time
      - reference_id
      additionalProperties: false
      description: Oauth -
    tcn.omni.oauth.v1alpha1.GetOauthConfigRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the oauthConfig
      title: GetOauthConfigRequest
      required:
      - name
      additionalProperties: false
      description: request used to get a oauthConfig
    tcn.omni.oauth.v1alpha1.ListOauthConfigsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed oauthConfigs
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListOauthConfigsRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of oauthConfigs
    tcn.omni.oauth.v1alpha1.ListOauthConfigsResponse:
      type: object
      properties:
        oauth_configs:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.oauth.v1alpha1.OauthConfig'
          title: oauth_configs
          description: list of oauthConfigs
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListOauthConfigsResponse
      additionalProperties: false
      description: response for list oauthConfigs
    tcn.omni.oauth.v1alpha1.UpdateOauthConfigRequest:
      type: object
      properties:
        oauth_config:
          title: oauth_config
          description: the oauth config we are updating
          $ref: '#/components/schemas/tcn.omni.oauth.v1alpha1.OauthConfig'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the field mask used to update the Oauth Config
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateOauthConfigRequest
      required:
      - oauth_config
      additionalProperties: false
      description: request message UpdateOauthConfigRequest
    tcn.omni.p3scheduler.v1alpha1.CampaignScheduleDetail:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name identifier for campaignScheduleDetail
      title: CampaignScheduleDetail
      additionalProperties: false
      description: CampaignScheduleDetail -
    tcn.omni.p3scheduler.v1alpha1.ScheduleCampaignRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: Defines a string field named 'name' with field number 1.
      title: ScheduleCampaignRequest
      required:
      - name
      additionalProperties: false
      description: Defines the request message for the ScheduleCampaign RPC.
    tcn.omni.p3scheduler.v1alpha1.ScheduleCampaignResponse:
      type: object
      properties:
        campaign_id:
          type: string
          title: campaign_id
          description: Defines a string field named 'campaign_id' with field number
            1, likely representing the ID of the scheduled campaign.
          readOnly: true
      title: ScheduleCampaignResponse
      additionalProperties: false
      description: Defines the response message for the ScheduleCampaign RPC.
    tcn.omni.project.v1alpha1.Project.State:
      type: string
      title: State
      enum:
      - STATE_UNSPECIFIED
      - STATE_OPEN
      - STATE_CLOSED
      description: This enum represents the state of a project
    tcn.omni.project.v1alpha1.Project:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) project identifier
        title:
          type: string
          title: title
          description: project title
        description:
          type: string
          title: description
          description: (OPTIONAL) project description
        state:
          title: state
          description: project state
          readOnly: true
          $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project.State'
        create_time:
          title: create_time
          description: creation date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        compliance_config:
          type: array
          items:
            type: string
          title: compliance_config
          description: The compliance config
      title: Project
      required:
      - title
      - compliance_config
      additionalProperties: false
      description: Project -
    tcn.omni.project.v1alpha1.CreateProjectRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the project
        project:
          title: project
          description: the project to be created
          $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
      title: CreateProjectRequest
      required:
      - parent
      - project
      additionalProperties: false
      description: request used to create a project
    tcn.omni.project.v1alpha1.DeleteProjectRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the project
      title: DeleteProjectRequest
      required:
      - name
      additionalProperties: false
      description: request used to delete a project
    tcn.omni.project.v1alpha1.GetProjectRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the project
      title: GetProjectRequest
      required:
      - name
      additionalProperties: false
      description: get single project based on name and mask used to getting particular
        data
    tcn.omni.project.v1alpha1.ListProjectsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed projects
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListProjectsRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of projects
    tcn.omni.project.v1alpha1.ListProjectsResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
          title: projects
          description: the list of projects
        next_page_token:
          type: string
          title: next_page_token
          description: the next page token
      title: ListProjectsResponse
      additionalProperties: false
      description: response used listing all projects
    tcn.omni.project.v1alpha1.UpdateProjectRequest:
      type: object
      properties:
        project:
          title: project
          description: the project to be updated
          $ref: '#/components/schemas/tcn.omni.project.v1alpha1.Project'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the update mask
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateProjectRequest
      required:
      - project
      additionalProperties: false
      description: request used to update a project
    tcn.omni.smsnumber.v1alpha1.SmsNumber.SmsNumberType:
      type: string
      title: SmsNumberType
      enum:
      - SMS_NUMBER_TYPE_UNSPECIFIED
      - SMS_NUMBER_TYPE_SHORT_CODE
      - SMS_NUMBER_TYPE_ALPHANUMERIC
      - SMS_NUMBER_TYPE_NUMBER
      description: SmsNumberType -
    tcn.omni.smsnumber.v1alpha1.SmsNumber:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the sms number identifier
        number:
          type: string
          title: number
          description: the sms number
        type:
          title: type
          description: the type of sms number (Alphanumeric|ShortCode|LongCode)
          $ref: '#/components/schemas/tcn.omni.smsnumber.v1alpha1.SmsNumber.SmsNumberType'
        provider:
          title: provider
          description: associated provider (Bandwidth|BurseSMS|ect...)
          $ref: '#/components/schemas/tcn.omni.type.ProviderType'
        region_code:
          title: region_code
          description: (OPTIONAL) country the sms number belongs to
          $ref: '#/components/schemas/tcn.omni.smsnumber.v1alpha1.SmsNumber.Country'
        project:
          title: project
          description: (OPTIONAL) The project that owns the sms number
          $ref: '#/components/schemas/tcn.omni.smsnumber.v1alpha1.SmsNumber.Project'
      title: SmsNumber
      required:
      - number
      - type
      - provider
      additionalProperties: false
      description: SmsNumber -
    tcn.omni.smsnumber.v1alpha1.SmsNumber.Country:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (OPTIONAL) the name of the country
        region_code:
          type: string
          title: region_code
          description: the code of the country
      title: Country
      required:
      - region_code
      additionalProperties: false
      description: Country - country configuration
    tcn.omni.smsnumber.v1alpha1.SmsNumber.Project:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name/identifier of the project
      title: Project
      required:
      - name
      additionalProperties: false
      description: The project structure
    tcn.omni.verifiedemail.v1alpha1.VerifiedEmail:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the verified email identifier
        email_address:
          type: string
          title: email_address
          description: email_address
        verified:
          type: boolean
          title: verified
          description: verified or not
          readOnly: true
        create_time:
          title: create_time
          description: date created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        verified_time:
          title: verified_time
          description: verified_time keep track when it was verified
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        deleted:
          type: boolean
          title: deleted
          description: deleted or not
          readOnly: true
        description:
          title: description
          description: (OPTIONAL) description of the verified email
          $ref: '#/components/schemas/google.protobuf.StringValue'
        sendername:
          type: string
          title: sendername
          description: (OPTIONAL) the display name that will be shown to recipients
            when emails are sent from this address
      title: VerifiedEmail
      required:
      - email_address
      additionalProperties: false
      description: VerifiedEmail  is the public api for the omni/verifiedEmails service.
    tcn.omni.routingrule.v1alpha1.RoutingRule:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) The resource rule identifier
        create_time:
          title: create_time
          description: The time when the routing rule was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: The time when the routing rule was last updated
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        deleted_time:
          title: deleted_time
          description: The time when the routing rule was deleted
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        resource:
          title: resource
          description: The resource to which messages should be routed
          $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.RoutingRule.Resource'
        config:
          title: config
          description: The configuration for the routing rule
          $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.RoutingRule.Config'
      title: RoutingRule
      required:
      - resource
      - config
      additionalProperties: false
      description: RoutingRule -
    tcn.omni.routingrule.v1alpha1.RoutingRule.Config:
      type: object
      oneOf:
      - properties:
          default_config:
            title: default_config
            description: Default config containing campaign information
            $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.RoutingRule.Config.Default'
        title: default_config
        required:
        - default_config
      title: Config
      additionalProperties: false
      description: Config represents the configuration for the routing rule
    tcn.omni.routingrule.v1alpha1.RoutingRule.Config.Default:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The identifying name of the default config
      title: Default
      required:
      - name
      additionalProperties: false
      description: Default config
    tcn.omni.routingrule.v1alpha1.RoutingRule.Resource:
      type: object
      oneOf:
      - properties:
          chat_widget:
            title: chat_widget
            description: Chat widget resource
            $ref: '#/components/schemas/tcn.omni.chatwidget.v1alpha1.ChatWidget'
        title: chat_widget
        required:
        - chat_widget
      - properties:
          connected_inbox:
            title: connected_inbox
            description: Connected inbox resource
            $ref: '#/components/schemas/tcn.omni.connectedinbox.v1alpha1.ConnectedInbox'
        title: connected_inbox
        required:
        - connected_inbox
      - properties:
          sms_number:
            title: sms_number
            description: SMS number resource
            $ref: '#/components/schemas/tcn.omni.smsnumber.v1alpha1.SmsNumber'
        title: sms_number
        required:
        - sms_number
      - properties:
          verified_email:
            title: verified_email
            description: Verified email resource
            $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
        title: verified_email
        required:
        - verified_email
      title: Resource
      additionalProperties: false
      description: Resource represents the target resource for routing
    tcn.omni.routingrule.v1alpha1.CreateRoutingRuleRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the routing rule
        routing_rule:
          title: routing_rule
          description: the routing rule to be created
          $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.RoutingRule'
      title: CreateRoutingRuleRequest
      required:
      - parent
      - routing_rule
      additionalProperties: false
      description: request message for CreateRoutingRule
    tcn.omni.routingrule.v1alpha1.DeleteRoutingRuleRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the AIP name of the routing rule
      title: DeleteRoutingRuleRequest
      required:
      - name
      additionalProperties: false
      description: request message to delete a routing rule
    tcn.omni.routingrule.v1alpha1.GetRoutingRuleRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the routing rule
      title: GetRoutingRuleRequest
      required:
      - name
      additionalProperties: false
      description: request message GetRoutingRuleRequest
    tcn.omni.routingrule.v1alpha1.ListRoutingRulesRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the routing rule
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) filter
      title: ListRoutingRulesRequest
      required:
      - parent
      additionalProperties: false
      description: request message ListRoutingRulesRequest
    tcn.omni.routingrule.v1alpha1.ListRoutingRulesResponse:
      type: object
      properties:
        routing_rules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.RoutingRule'
          title: routing_rules
          description: list of routing rules
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListRoutingRulesResponse
      additionalProperties: false
      description: response message ListRoutingRulesResponse
    tcn.omni.routingrule.v1alpha1.UpdateRoutingRuleRequest:
      type: object
      properties:
        routing_rule:
          title: routing_rule
          description: the routing rule we are updating
          $ref: '#/components/schemas/tcn.omni.routingrule.v1alpha1.RoutingRule'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the field mask used to update the routing rule
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateRoutingRuleRequest
      required:
      - routing_rule
      additionalProperties: false
      description: request message for UpdateRoutingRule
    tcn.omni.sendgrid.v1alpha1.PerformSendgridAccountChecksRequest:
      type: object
      properties:
        org_id:
          type: string
          title: org_id
          description: the organization identifier
      title: PerformSendgridAccountChecksRequest
      required:
      - org_id
      additionalProperties: false
      description: PerformSendgridAccountChecksRequest -
    tcn.omni.sendgrid.v1alpha1.PerformSendgridAccountChecksResponse:
      type: object
      title: PerformSendgridAccountChecksResponse
      additionalProperties: false
      description: PerformSendgridAccountChecksResponse -
    tcn.omni.signature.v1alpha1.Signature:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name identifier for a signature
        signature:
          type: string
          title: signature
          description: signature string
        create_time:
          title: create_time
          description: created date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: updated date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        deleted_time:
          title: deleted_time
          description: if the signature was deleted
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        title:
          type: string
          title: title
          description: tittle of the signature
        description:
          type: string
          title: description
          description: description of the signature
      title: Signature
      required:
      - signature
      - title
      - description
      additionalProperties: false
      description: Signature -
    tcn.omni.signature.v1alpha1.CreateSignatureRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the diposition
        signature:
          title: signature
          description: the signature to be created
          $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
      title: CreateSignatureRequest
      required:
      - parent
      - signature
      additionalProperties: false
      description: request to create a new signature
    tcn.omni.signature.v1alpha1.DeleteSignatureRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the signature
      title: DeleteSignatureRequest
      required:
      - name
      additionalProperties: false
      description: request to delete a signature
    tcn.omni.signature.v1alpha1.GetSignatureRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the signature
      title: GetSignatureRequest
      required:
      - name
      additionalProperties: false
      description: request used to get a signature
    tcn.omni.signature.v1alpha1.ListSignaturesRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed signatures
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListSignaturesRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of signatures
    tcn.omni.signature.v1alpha1.ListSignaturesResponse:
      type: object
      properties:
        signatures:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
          title: signatures
          description: list of signatures
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListSignaturesResponse
      additionalProperties: false
      description: response for list signatures
    tcn.omni.signature.v1alpha1.UpdateSignatureRequest:
      type: object
      properties:
        signature:
          title: signature
          description: the signature we are updating
          $ref: '#/components/schemas/tcn.omni.signature.v1alpha1.Signature'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the field mask used to update the signature
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateSignatureRequest
      required:
      - signature
      additionalProperties: false
      description: request to update an existing signature
    tcn.omni.smsnumber.v1alpha1.GetSmsNumberRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the sms number
      title: GetSmsNumberRequest
      required:
      - name
      additionalProperties: false
      description: request message GetSmsNumberRequest
    tcn.omni.smsnumber.v1alpha1.ListSmsNumbersRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the sms number
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) filter
      title: ListSmsNumbersRequest
      required:
      - parent
      additionalProperties: false
      description: request message ListSmsNumbersRequest
    tcn.omni.smsnumber.v1alpha1.ListSmsNumbersResponse:
      type: object
      properties:
        sms_numbers:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.smsnumber.v1alpha1.SmsNumber'
          title: sms_numbers
          description: list of sms number
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListSmsNumbersResponse
      additionalProperties: false
      description: response message ListSmsNumbersResponse
    tcn.omni.type.FieldType:
      type: string
      title: FieldType
      enum:
      - FIELD_TYPE_STRING
      - FIELD_TYPE_NUMBER
      - FIELD_TYPE_BOOLEAN
      - FIELD_TYPE_PHONE
      - FIELD_TYPE_CURRENCY
      - FIELD_TYPE_EMAIL
      - FIELD_TYPE_DATETIME_NOW
      - FIELD_TYPE_DATETIME_TIMESTAMP
      - FIELD_TYPE_DATE
      - FIELD_TYPE_DATETIME_MONTH_DAY
      - FIELD_TYPE_DATETIME_TIME_OF_DAY
      - FIELD_TYPE_POSTAL_CODE
      - FIELD_TYPE_ENRICHED_PHONE
      - FIELD_TYPE_ENRICHED_ZIP
      - FIELD_TYPE_SOCIAL
      - FIELD_TYPE_DATE_OF_BIRTH
      - FIELD_TYPE_FULL_NAME
      - FIELD_TYPE_ACCOUNT_NUMBER
      - FIELD_TYPE_ERROR
      - FIELD_TYPE_STRICT_VALUE
      - FIELD_TYPE_EHR_DETAILS
      description: FieldType -
    tcn.omni.type.TaskState:
      type: string
      title: TaskState
      enum:
      - OMNI_TASK_WAITING
      - OMNI_TASK_WAITING_FOR_QUEUED
      - OMNI_TASK_WAITING_FOR_APPROVAL
      - OMNI_TASK_SENDING
      - OMNI_TASK_SENDING_FAILED
      - OMNI_TASK_SENDING_IMCOMPLETE
      - OMNI_TASK_SENT
      - OMNI_TASK_RECIEVED
      - OMNI_TASK_CANCELLED
      description: TaskState -
    tcn.omni.task.v1alpha1.Task:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the task identifier
        state:
          title: state
          description: the task state
          readOnly: true
          $ref: '#/components/schemas/tcn.omni.type.TaskState'
        create_time:
          title: create_time
          description: the time the task was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the task was last updated
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        campaign_module_sid:
          type:
          - integer
          - string
          title: campaign_module_sid
          format: int64
          description: campaign module sid
        campaign_sid:
          type:
          - integer
          - string
          title: campaign_sid
          format: int64
          description: campaign sid
        contact_list_sid:
          title: contact_list_sid
          description: identifier of associated contact list
          $ref: '#/components/schemas/google.protobuf.Int64Value'
        task_history:
          title: task_history
          description: the task history
          readOnly: true
          $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task.TaskHistory'
        data_fields:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task.DataField'
          title: data_fields
          description: '(OPTIONAL) list of fields associated to task (can contain
            different types of data : string|int64|ect.)'
        details:
          title: details
          description: retrievable fields with field mask
          readOnly: true
          $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task.Details'
        description:
          type: string
          title: description
          description: (OPTIONAL) Task description
        status_message:
          title: status_message
          description: (OPTIONAL) a message reguarding the task's status, should be
            ignored if there is an associated Message
          $ref: '#/components/schemas/google.protobuf.StringValue'
        schedule_time:
          title: schedule_time
          description: (OPTIONAL) scheduled time for task
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        task_config:
          title: task_config
          description: task config
          $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task.TaskConfig'
      title: Task
      required:
      - campaign_module_sid
      - campaign_sid
      - contact_list_sid
      - task_config
      additionalProperties: false
      description: Task -
    tcn.omni.task.v1alpha1.Task.DataField:
      type: object
      properties:
        field_sid:
          type:
          - integer
          - string
          title: field_sid
          format: int64
          description: the field identifier
        parent_sid:
          type:
          - integer
          - string
          title: parent_sid
          format: int64
          description: the identifier of the "parent" this field belongs to
        title:
          type: string
          title: title
          description: the title of this field
        value:
          type: string
          title: value
          description: the value of this field encoded as a string
        type:
          title: type
          description: the type of value stored in this field (string|json|int|etc.)
          $ref: '#/components/schemas/tcn.omni.type.FieldType'
      title: DataField
      required:
      - field_sid
      - parent_sid
      - title
      - value
      - type
      additionalProperties: false
      description: DataField -
    tcn.omni.task.v1alpha1.Task.Details:
      type: object
      properties:
        contact_list_title:
          title: contact_list_title
          description: (OPTIONAL) title of the contact list
          $ref: '#/components/schemas/google.protobuf.StringValue'
      title: Details
      additionalProperties: false
      description: Details -
    tcn.omni.task.v1alpha1.Task.TaskConfig:
      type: object
      properties:
        skills:
          title: skills
          description: (OPTIONAL) conversation skills that the task should use
          $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task.TaskConfig.ConversationSkills'
        absolute_timeout_duration:
          title: absolute_timeout_duration
          description: the task's absolute timeout duration
          $ref: '#/components/schemas/google.protobuf.Duration'
        agent_timeout_duration:
          title: agent_timeout_duration
          description: the task's agent timeout duration
          $ref: '#/components/schemas/google.protobuf.Duration'
        subject:
          type: string
          title: subject
          description: the task subject
        message:
          title: message
          description: the task textmessage
          $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task.TaskConfig.TextMessage'
        user_id:
          type: string
          title: user_id
          description: the task's user id
      title: TaskConfig
      required:
      - absolute_timeout_duration
      - agent_timeout_duration
      - subject
      - message
      - user_id
      additionalProperties: false
      description: TaskConfig -
    tcn.omni.task.v1alpha1.Task.TaskConfig.ConversationSkills:
      type: object
      properties:
        skills:
          type: object
          title: skills
          additionalProperties:
            type: boolean
            title: value
          description: (OPTIONAL) map of agent skills
      title: ConversationSkills
      additionalProperties: false
      description: ConversationSkills -
    tcn.omni.task.v1alpha1.Task.TaskConfig.ConversationSkills.SkillsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: boolean
          title: value
      title: SkillsEntry
      additionalProperties: false
    tcn.omni.task.v1alpha1.Task.TaskConfig.TextMessage:
      type: object
      properties:
        message:
          type: string
          title: message
          description: message containing Urls
        attachments:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: attachments
          description: (OPTIONAL) attachment names
        primary_asm_session_sid:
          title: primary_asm_session_sid
          description: (OPTIONAL) primary asm session identifier
          $ref: '#/components/schemas/google.protobuf.Int64Value'
      title: TextMessage
      required:
      - message
      additionalProperties: false
      description: TextMessage -
    tcn.omni.task.v1alpha1.Task.TaskHistory:
      type: object
      properties:
        destination:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task.TaskHistory.Entry'
          title: destination
          description: list of destination addresses (should not include same destination
            twice)
        source:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task.TaskHistory.Entry'
          title: source
          description: list of source addresses (should not include same source twice)
        rule_set:
          title: rule_set
          description: (OPTIONAL) the rule set used with the task.  This won't be
            set if a rule set didn't exist when the task ran
          $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task.TaskHistory.ComplianceRuleSet'
        scrub_list_id:
          title: scrub_list_id
          description: (OPTIONAL) scrub list id the task uses
          $ref: '#/components/schemas/google.protobuf.StringValue'
      title: TaskHistory
      required:
      - destination
      - source
      additionalProperties: false
      description: TaskHistory -
    tcn.omni.task.v1alpha1.Task.TaskHistory.ComplianceRuleSet:
      type: object
      properties:
        id:
          type: string
          title: id
          description: the compliance rule set identifier
        tittle:
          type: string
          title: tittle
          description: tittle of the compliance rule set
        sha:
          type: string
          title: sha
          description: the SHA indicating the version of the rule set
        rules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task.TaskHistory.ComplianceRuleSet.ComplianceRule'
          title: rules
          description: "list of compliance rules ran in this version of the\n rule
            set."
      title: ComplianceRuleSet
      required:
      - id
      - tittle
      - sha
      - rules
      additionalProperties: false
      description: ComplianceRuleSet - The compliance result will be moved into the
        task message
    tcn.omni.task.v1alpha1.Task.TaskHistory.ComplianceRuleSet.ComplianceRule:
      type: object
      properties:
        text:
          type: string
          title: text
          description: text representation of the compliance rule
        permit:
          type: boolean
          title: permit
          description: whether the compliance rule passed or not
        plugin_response:
          type: string
          title: plugin_response
          description: (OPTIONAL) extra response data
      title: ComplianceRule
      required:
      - text
      - permit
      additionalProperties: false
      description: ComplianceRule -
    tcn.omni.task.v1alpha1.Task.TaskHistory.Entry:
      type: object
      properties:
        address:
          type: string
          title: address
          description: the address (email_address|phone_number|etc.)
        times_used:
          type:
          - integer
          - string
          title: times_used
          format: int64
          description: times address was used
        last_used_time:
          title: last_used_time
          description: the time this entry was last used
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Entry
      required:
      - address
      - times_used
      - last_used_time
      additionalProperties: false
      description: Entry -
    tcn.omni.task.v1alpha1.GetTaskRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the task
      title: GetTaskRequest
      required:
      - name
      additionalProperties: false
      description: request message GetTaskRequest
    tcn.omni.task.v1alpha1.ListTasksRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the task
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) filter
        order_by:
          type: string
          title: order_by
          description: (OPTIONAL) order by
      title: ListTasksRequest
      required:
      - parent
      additionalProperties: false
      description: request message ListTasksRequest
    tcn.omni.task.v1alpha1.ListTasksResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.task.v1alpha1.Task'
          title: tasks
          description: list of tasks
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListTasksResponse
      additionalProperties: false
      description: response message ListTasksResponse
    tcn.omni.taskcounts.v1alpha1.TaskCounts:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the TaskCounts identifier
        total_task_count:
          title: total_task_count
          description: the total number of tasks created by an outbound module
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Int64Value'
        completed_task_count:
          title: completed_task_count
          description: the total number of tasks that have successfully completed
            for an outbound module
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Int64Value'
        pending_task_count:
          title: pending_task_count
          description: the number of tasks pending
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Int64Value'
        failed_task_count:
          title: failed_task_count
          description: the number of tasks that failed
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Int64Value'
        canceled_task_count:
          title: canceled_task_count
          description: the number of tasks that are canceled
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Int64Value'
      title: TaskCounts
      additionalProperties: false
      description: TaskCounts - task counts for a campaign module
    tcn.omni.taskcounts.v1alpha1.GetTaskCountsRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the taskcounts
      title: GetTaskCountsRequest
      required:
      - name
      additionalProperties: false
      description: request message GetTaskCountsRequest
    tcn.omni.taskcounts.v1alpha1.ListTaskCountsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the taskcounts
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) page token
      title: ListTaskCountsRequest
      required:
      - parent
      additionalProperties: false
      description: request message ListTaskCountsRequest
    tcn.omni.taskcounts.v1alpha1.ListTaskCountsResponse:
      type: object
      properties:
        task_counts:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.taskcounts.v1alpha1.TaskCounts'
          title: task_counts
          description: list of taskcounts
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListTaskCountsResponse
      additionalProperties: false
      description: response message ListTaskCountsResponse
    tcn.omni.type.MessageType:
      type: string
      title: MessageType
      enum:
      - MESSAGE_TYPE_TEXT_MESSAGE
      - MESSAGE_TYPE_TYPING_NOTIFICATION
      - MESSAGE_TYPE_REASSIGNMENT_NOTIFICATION
      - MESSAGE_TYPE_ASSIGN_CONVERSATION
      - MESSAGE_TYPE_UNASSIGN_CONVERSATION
      - MESSAGE_TYPE_ATTACHMENT
      - MESSAGE_TYPE_ATTACHMENT_UPLOAD_URL
      - MESSAGE_TYPE_REQUEST_ATTACHMENT_UPLOAD_URL
      - MESSAGE_TYPE_CLOSE_CONVERSATION
      - MESSAGE_TYPE_START_WRAP_UP
      - MESSAGE_TYPE_FINISH_WRAP_UP
      - MESSAGE_TYPE_UNKNOWN
      - MESSAGE_TYPE_SUSPEND
      - MESSAGE_TYPE_QUEUE_INFO
      - MESSAGE_TYPE_REQUEST_QUEUE_INFO
      - MESSAGE_TYPE_OFFLOADED_TEXT_MESSAGE
      - MESSAGE_TYPE_CANNED_MESSAGE
      description: MessageType -
    tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name identifier for an unsubscribe link
        title:
          type: string
          title: title
          description: the title of the unsubscribe link
        uri:
          type: string
          title: uri
          description: the links uri
        validated:
          type: boolean
          title: validated
          description: if the link has been validated
          readOnly: true
        create_time:
          title: create_time
          description: the time the link was created
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the link was last updated
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        validated_time:
          title: validated_time
          description: the time the link was validated
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        description:
          type: string
          title: description
          description: the link's description
      title: UnsubscribeLink
      required:
      - title
      - uri
      - description
      additionalProperties: false
      description: UnsubscribeLink -
    tcn.omni.unsubscribelink.v1alpha1.CreateUnsubscribeLinkRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the unsubscribe link
        unsubscribe_link:
          title: unsubscribe_link
          description: the unsubscribe link to be created
          $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
      title: CreateUnsubscribeLinkRequest
      required:
      - parent
      - unsubscribe_link
      additionalProperties: false
      description: request used to create an unsubscribe link
    tcn.omni.unsubscribelink.v1alpha1.DeleteUnsubscribeLinkRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the unsubscribe link to be deleted
      title: DeleteUnsubscribeLinkRequest
      required:
      - name
      additionalProperties: false
      description: request used to delete an unsubscribe link
    tcn.omni.unsubscribelink.v1alpha1.GetUnsubscribeLinkRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the unsubscribe link
      title: GetUnsubscribeLinkRequest
      required:
      - name
      additionalProperties: false
      description: request used to get an unsubscribe link
    tcn.omni.unsubscribelink.v1alpha1.ListUnsubscribeLinksRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed unsubscribe links
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListUnsubscribeLinksRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of unsubscribe links
    tcn.omni.unsubscribelink.v1alpha1.ListUnsubscribeLinksResponse:
      type: object
      properties:
        unsubscribe_links:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
          title: unsubscribe_links
          description: list of unsubscribe links
        next_page_token:
          type: string
          title: next_page_token
          description: used to specify the next page token
      title: ListUnsubscribeLinksResponse
      additionalProperties: false
      description: response for list unsubscribe links
    tcn.omni.unsubscribelink.v1alpha1.UpdateUnsubscribeLinkRequest:
      type: object
      properties:
        unsubscribe_link:
          title: unsubscribe_link
          description: the unsubscribe link to be updated
          $ref: '#/components/schemas/tcn.omni.unsubscribelink.v1alpha1.UnsubscribeLink'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the field mask used to update the unsubscribe link
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateUnsubscribeLinkRequest
      required:
      - unsubscribe_link
      additionalProperties: false
      description: request used to update an unsubscribe link
    tcn.omni.verifiedemail.v1alpha1.CreateVerifiedEmailRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the verified email
        verified_email:
          title: verified_email
          description: the verified email to be created
          $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
      title: CreateVerifiedEmailRequest
      required:
      - parent
      - verified_email
      additionalProperties: false
      description: request message CreateVerifiedEmail
    tcn.omni.verifiedemail.v1alpha1.DeleteVerifiedEmailRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the verified email
      title: DeleteVerifiedEmailRequest
      required:
      - name
      additionalProperties: false
      description: request message DeleteVerifiedEmail
    tcn.omni.verifiedemail.v1alpha1.GetVerifiedEmailRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the verified email
      title: GetVerifiedEmailRequest
      required:
      - name
      additionalProperties: false
      description: request message GetVerifiedEmailRequest
    tcn.omni.verifiedemail.v1alpha1.ListVerifiedEmailsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the verified email
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) filter
      title: ListVerifiedEmailsRequest
      required:
      - parent
      additionalProperties: false
      description: request message ListVerifiedEmailsRequest
    tcn.omni.verifiedemail.v1alpha1.ListVerifiedEmailsResponse:
      type: object
      properties:
        verified_emails:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
          title: verified_emails
          description: list of verified email
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListVerifiedEmailsResponse
      additionalProperties: false
      description: response message ListVerifiedEmailsResponse
    tcn.omni.verifiedemail.v1alpha1.ResendVerifiedEmailRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the verified email
      title: ResendVerifiedEmailRequest
      required:
      - name
      additionalProperties: false
      description: request message ResendVerifiedEmail
    tcn.omni.verifiedemail.v1alpha1.ResendVerifiedEmailResponse:
      type: object
      title: ResendVerifiedEmailResponse
      additionalProperties: false
      description: response message ResendVerifiedEmail
    tcn.omni.verifiedemail.v1alpha1.UpdateVerifiedEmailRequest:
      type: object
      properties:
        verified_email:
          title: verified_email
          description: the verified email we are updating
          $ref: '#/components/schemas/tcn.omni.verifiedemail.v1alpha1.VerifiedEmail'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the field mask used to update the email
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateVerifiedEmailRequest
      required:
      - verified_email
      additionalProperties: false
      description: request message UpdateVerifiedEmailRequeset
    tcn.omni.whatsappnumber.v1alpha1.WhatsAppNumber:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the whatsApp number identifier
        number:
          type: string
          title: number
          description: the whatsApp number
        provider:
          title: provider
          description: the whatsApp provider
          $ref: '#/components/schemas/tcn.omni.type.ProviderType'
        country_code_number:
          type: integer
          title: country_code_number
          format: int32
          description: the whatsApp country code
      title: WhatsAppNumber
      required:
      - number
      - provider
      - country_code_number
      additionalProperties: false
      description: WhatsAppNumber  is the public api for the omni/whatsAppNumber service.
    tcn.omni.whatsappnumber.v1alpha1.GetWhatsAppNumberRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the whatsApp number
      title: GetWhatsAppNumberRequest
      required:
      - name
      additionalProperties: false
      description: request message GetWhatsAppNumberRequest
    tcn.omni.whatsappnumber.v1alpha1.ListWhatsAppNumbersRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the whatsApp number
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) page size
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) filter
      title: ListWhatsAppNumbersRequest
      required:
      - parent
      additionalProperties: false
      description: request message ListWhatsAppNumbersRequest
    tcn.omni.whatsappnumber.v1alpha1.ListWhatsAppNumbersResponse:
      type: object
      properties:
        whats_app_numbers:
          type: array
          items:
            $ref: '#/components/schemas/tcn.omni.whatsappnumber.v1alpha1.WhatsAppNumber'
          title: whats_app_numbers
          description: list of whatsApp number
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListWhatsAppNumbersResponse
      additionalProperties: false
      description: response message ListWhatsAppNumbersResponse
    tcn.org.agentprofilegroups.v1alpha1.AgentProfileGroup:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) agent profile group identifier
        title:
          type: string
          title: title
          description: agent profile group title
        priority_groups:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.agentprofilegroups.v1alpha1.AgentProfileGroup.PriorityGroup'
          title: priority_groups
          description: priority groups for the agent profile group
        update_time:
          title: update_time
          description: last time agent profile group was updated
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        default_group:
          type: boolean
          title: default_group
          description: default group flag
          readOnly: true
      title: AgentProfileGroup
      required:
      - title
      - priority_groups
      additionalProperties: false
      description: AgentProfileGroup is a type and threshold in array for AgentProfileGroup
    tcn.org.agentprofilegroups.v1alpha1.AgentProfileGroup.PriorityGroup:
      type: object
      properties:
        threshold:
          type: integer
          title: threshold
          format: int32
          description: threshold for the priority group
        channel_type:
          title: channel_type
          description: channel type for the priority group
          $ref: '#/components/schemas/tcn.omni.type.ChannelType'
      title: PriorityGroup
      required:
      - threshold
      - channel_type
      additionalProperties: false
      description: PriorityGroup is a type and threshold in array for AgentProfileGroup
    tcn.org.agentprofilegroups.v1alpha1.AssignAgentProfileGroupRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the agent profile group
        user_ids:
          type: array
          items:
            type: string
          title: user_ids
          description: users to assign the agent profile group
      title: AssignAgentProfileGroupRequest
      required:
      - name
      - user_ids
      additionalProperties: false
      description: request message AssignAgentProfileGroupRequest
    tcn.org.agentprofilegroups.v1alpha1.AssignAgentProfileGroupResponse:
      type: object
      properties:
        user_ids:
          type: array
          items:
            type: string
          title: user_ids
          description: assigned users
      title: AssignAgentProfileGroupResponse
      additionalProperties: false
      description: response message AssignAgentProfileGroupResponse
    tcn.org.agentprofilegroups.v1alpha1.CreateAgentProfileGroupRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the agent profile group
        agent_profile_group:
          title: agent_profile_group
          description: agent profile group to create
          $ref: '#/components/schemas/tcn.org.agentprofilegroups.v1alpha1.AgentProfileGroup'
      title: CreateAgentProfileGroupRequest
      required:
      - parent
      - agent_profile_group
      additionalProperties: false
      description: request message CreateAgentProfileGroupRequest
    tcn.org.agentprofilegroups.v1alpha1.DeleteAgentProfileGroupRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the agent profile group
      title: DeleteAgentProfileGroupRequest
      required:
      - name
      additionalProperties: false
      description: request message DeleteAgentProfileGroupRequest
    tcn.org.agentprofilegroups.v1alpha1.GetAgentProfileGroupRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the agent profile group
      title: GetAgentProfileGroupRequest
      required:
      - name
      additionalProperties: false
      description: request message GetAgentProfileGroupRequest
    tcn.org.agentprofilegroups.v1alpha1.ListAgentProfileGroupsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the agent profile groups
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
        filter:
          type: string
          title: filter
          description: (OPTIONAL) The filter to apply to list results.
      title: ListAgentProfileGroupsRequest
      required:
      - parent
      additionalProperties: false
      description: request message ListAgentProfileGroupsRequest
    tcn.org.agentprofilegroups.v1alpha1.ListAgentProfileGroupsResponse:
      type: object
      properties:
        agent_profile_groups:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.agentprofilegroups.v1alpha1.AgentProfileGroup'
          title: agent_profile_groups
          description: agent profile groups
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListAgentProfileGroupsResponse
      additionalProperties: false
      description: response message ListAgentProfileGroupsResponse
    tcn.org.agentprofilegroups.v1alpha1.UpdateAgentProfileGroupRequest:
      type: object
      properties:
        agent_profile_group:
          title: agent_profile_group
          description: agent profile group to update
          $ref: '#/components/schemas/tcn.org.agentprofilegroups.v1alpha1.AgentProfileGroup'
        update_mask:
          title: update_mask
          description: (OPTIONAL) update mask
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateAgentProfileGroupRequest
      required:
      - agent_profile_group
      additionalProperties: false
      description: request message UpdateAgentProfileGroupRequest
    google.type.Date:
      type: object
      properties:
        year:
          type: integer
          title: year
          format: int32
          description: "Year of the date. Must be from 1 to 9999, or 0 to specify
            a date without\n a year."
        month:
          type: integer
          title: month
          format: int32
          description: "Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a\n month and day."
        day:
          type: integer
          title: day
          format: int32
          description: "Day of a month. Must be from 1 to 31 and valid for the year
            and month, or 0\n to specify a year by itself or a year and month where
            the day isn't\n significant."
      title: Date
      additionalProperties: false
      description: "Represents a whole or partial calendar date, such as a birthday.
        The time of\n day and time zone are either specified elsewhere or are insignificant.
        The\n date is relative to the Gregorian Calendar. This can represent one of
        the\n following:\n\n * A full date, with non-zero year, month, and day values\n
        * A month and day value, with a zero year, such as an anniversary\n * A year
        on its own, with zero month and day values\n * A year and month value, with
        a zero day, such as a credit card expiration\n date\n\n Related types are
        [google.type.TimeOfDay][google.type.TimeOfDay] and\n `google.protobuf.Timestamp`."
    tcn.org.billing.billingplan.v1alpha5.BillingPlan:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the name used to identify the billing plan
        title:
          type: string
          title: title
          description: the human-readable title of the billing plan (only returned
            on draft plans)
        create_time:
          title: create_time
          description: the time the billing plan was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        delete_time:
          title: delete_time
          description: the time the billing plan was deleted.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the billing plan was last updated.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        start_date:
          title: start_date
          description: the date the billing plan will become active (only returned
            on active plans).
          readOnly: true
          $ref: '#/components/schemas/google.type.Date'
        user_id:
          type: string
          title: user_id
          description: the id of the user who last modified it.
          readOnly: true
        is_draft:
          type: boolean
          title: is_draft
          description: whether the billing plan is a draft or active.
          readOnly: true
      title: BillingPlan
      required:
      - title
      additionalProperties: false
      description: BillingPlan defines a set of configurations for billing.
    tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the name used to identify the billing plan
        title:
          type: string
          title: title
          description: the human-readable title of the billing plan (only returned
            on draft plans)
        create_time:
          title: create_time
          description: the time the billing plan was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        delete_time:
          title: delete_time
          description: the time the billing plan was deleted.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the billing plan was last updated.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        start_date:
          title: start_date
          description: the date the billing plan will become active (only returned
            on active plans).
          readOnly: true
          $ref: '#/components/schemas/google.type.Date'
        user_id:
          type: string
          title: user_id
          description: the id of the user who last modified it.
          readOnly: true
        is_draft:
          type: boolean
          title: is_draft
          description: whether the billing plan is a draft or active.
          readOnly: true
      title: DefaultBillingPlan
      required:
      - title
      additionalProperties: false
      description: DefaultBillingPlan defines a set of configurations for billing.
    tcn.org.billing.billingplan.v1alpha5.ApplyBillingPlanDraftRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the billing plan to apply.\n Format: orgs/{org}/billingPlans/{billing_plan}"
        start_date:
          title: start_date
          description: (OPTIONAL) the date when the applied billing plan will become
            active, or null to apply immediately
          $ref: '#/components/schemas/google.type.Date'
      title: ApplyBillingPlanDraftRequest
      required:
      - name
      additionalProperties: false
      description: ApplyBillingPlanDraftRequest -
    tcn.org.billing.billingplan.v1alpha5.ApplyBillingPlanDraftResponse:
      type: object
      title: ApplyBillingPlanDraftResponse
      additionalProperties: false
      description: ApplyBillingPlanDraftResponse -
    tcn.org.billing.billingplan.v1alpha5.ApplyDefaultBillingPlanDraftRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the billing plan to apply.\n Format: defaultBillingPlans/{billing_plan}"
        start_date:
          title: start_date
          description: (OPTIONAL) the date when the applied billing plan will become
            active
          $ref: '#/components/schemas/google.type.Date'
      title: ApplyDefaultBillingPlanDraftRequest
      required:
      - name
      additionalProperties: false
      description: ApplyDefaultBillingPlanDraftRequest -
    tcn.org.billing.billingplan.v1alpha5.ApplyDefaultBillingPlanDraftResponse:
      type: object
      title: ApplyDefaultBillingPlanDraftResponse
      additionalProperties: false
      description: ApplyDefaultBillingPlanDraftResponse -
    tcn.org.billing.billingplan.v1alpha5.CopyBillingPlanRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the billing plan to copy.\n Format: orgs/{org}/billingPlans/{billing_plan}"
        title:
          type: string
          title: title
          description: the title of the billing plan being created.
      title: CopyBillingPlanRequest
      required:
      - name
      - title
      additionalProperties: false
      description: CopyBillingPlanRequest -
    tcn.org.billing.billingplan.v1alpha5.CopyBillingPlanResponse:
      type: object
      properties:
        billing_plan:
          type: string
          title: billing_plan
          description: the name of the copied billing plan.
      title: CopyBillingPlanResponse
      additionalProperties: false
      description: CopyBillingPlanResponse -
    tcn.org.billing.billingplan.v1alpha5.CopyDefaultBillingPlanRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the billing plan to copy.\n Format: defaultBillingPlans/{billing_plan}"
        title:
          type: string
          title: title
          description: the title of the billing plan being created.
      title: CopyDefaultBillingPlanRequest
      required:
      - name
      - title
      additionalProperties: false
      description: CopyDefaultBillingPlanRequest -
    tcn.org.billing.billingplan.v1alpha5.CopyDefaultBillingPlanResponse:
      type: object
      properties:
        default_billing_plan:
          type: string
          title: default_billing_plan
          description: the name of the copied billing plan.
      title: CopyDefaultBillingPlanResponse
      additionalProperties: false
      description: CopyDefaultBillingPlanResponse -
    tcn.org.billing.billingplan.v1alpha5.CreateBillingPlanRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "the parent resource where the billing plan will be created.\n
            Format: orgs/{org}"
        billing_plan_id:
          type: string
          title: billing_plan_id
          description: (OPTIONAL) the id of the billing plan to create.
        billing_plan:
          title: billing_plan
          description: the billing plan to create.
          $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
      title: CreateBillingPlanRequest
      required:
      - parent
      - billing_plan
      additionalProperties: false
      description: CreateBillingPlanRequest -
    tcn.org.billing.billingplan.v1alpha5.CreateDefaultBillingPlanRequest:
      type: object
      properties:
        default_billing_plan_id:
          type: string
          title: default_billing_plan_id
          description: (OPTIONAL) the id of the billing plan to create.
        default_billing_plan:
          title: default_billing_plan
          description: the default billing plan to create.
          $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
      title: CreateDefaultBillingPlanRequest
      required:
      - default_billing_plan
      additionalProperties: false
      description: CreateDefaultBillingPlanRequest -
    tcn.org.billing.billingplan.v1alpha5.DeleteBillingPlanRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the billing plan to delete.\n Format: orgs/{org}/billingPlans/{billing_plan}"
        allow_missing:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the billing plan is missing,
            the request will succeed\n but no action will be taken on the server."
      title: DeleteBillingPlanRequest
      required:
      - name
      additionalProperties: false
      description: DeleteBillingPlanRequest -
    tcn.org.billing.billingplan.v1alpha5.DeleteDefaultBillingPlanRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the billing plan to delete.\n Format: defaultBillingPlans/{billing_plan}"
        allow_missing:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the billing plan is missing,
            the request will succeed\n but no action will be taken on the server."
      title: DeleteDefaultBillingPlanRequest
      required:
      - name
      additionalProperties: false
      description: DeleteDefaultBillingPlanRequest -
    tcn.org.billing.billingplan.v1alpha5.GetBillingPlanRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the billing plan to get.\n Format: orgs/{org}/billingPlans/{billing_plan}"
      title: GetBillingPlanRequest
      required:
      - name
      additionalProperties: false
      description: GetBillingPlanRequest -
    tcn.org.billing.billingplan.v1alpha5.GetDefaultBillingPlanRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the billing plan to get.\n Format: defaultBillingPlans/{billing_plan}"
      title: GetDefaultBillingPlanRequest
      required:
      - name
      additionalProperties: false
      description: GetDefaultBillingPlanRequest -
    tcn.org.billing.billingplan.v1alpha5.ListBillingPlansRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "the parent of the billing plans to be listed.\n Format: orgs/{org}"
        page_size:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of billing plans to return.
            If unspecified, at most 50 billing plans\n will be returned. The maximum
            value is 1000; values above 1000 will be coerced to 1000."
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListBillingPlans`
            call. Provide this to retrieve the\n subsequent page. When paginating,
            all other parameters provided to `ListBillingPlans` must\n match the call
            that provided the page token."
        skip:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of billing plans to skip.
        filter:
          type: string
          title: filter
          description: (OPTIONAL) filters the results
        order_by:
          type: string
          title: order_by
          description: (OPTIONAL) orders the results
      title: ListBillingPlansRequest
      required:
      - parent
      additionalProperties: false
      description: ListBillingPlansResponse -
    tcn.org.billing.billingplan.v1alpha5.ListBillingPlansResponse:
      type: object
      properties:
        billing_plans:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
          title: billing_plans
          description: the billing plans.
        next_page_token:
          type: string
          title: next_page_token
          description: "a token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      title: ListBillingPlansResponse
      additionalProperties: false
      description: ListBillingPlansResponse -
    tcn.org.billing.billingplan.v1alpha5.ListDefaultBillingPlansRequest:
      type: object
      properties:
        page_size:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of billing plans to return.
            If unspecified, at most 50 billing plans\n will be returned. The maximum
            value is 1000; values above 1000 will be coerced to 1000."
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListDefaultBillingPlans`
            call. Provide this to retrieve\n the subsequent page. When paginating,
            all other parameters provided to `ListDefaultBillingPlans`\n must match
            the call that provided the page token."
        skip:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of billing plans to skip.
        filter:
          type: string
          title: filter
          description: (OPTIONAL) filters the results
        order_by:
          type: string
          title: order_by
          description: (OPTIONAL) orders the results
      title: ListDefaultBillingPlansRequest
      additionalProperties: false
      description: ListDefaultBillingPlansRequest -
    tcn.org.billing.billingplan.v1alpha5.ListDefaultBillingPlansResponse:
      type: object
      properties:
        default_billing_plans:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
          title: default_billing_plans
          description: the billing plans.
        next_page_token:
          type: string
          title: next_page_token
          description: "a token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      title: ListDefaultBillingPlansResponse
      additionalProperties: false
      description: ListDefaultBillingPlansResponse -
    tcn.org.billing.billingplan.v1alpha5.UpdateBillingPlanRequest:
      type: object
      properties:
        billing_plan:
          title: billing_plan
          description: the billing plan to update.
          $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.BillingPlan'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the update mask.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateBillingPlanRequest
      required:
      - billing_plan
      additionalProperties: false
      description: UpdateBillingPlanRequest -
    tcn.org.billing.billingplan.v1alpha5.UpdateDefaultBillingPlanRequest:
      type: object
      properties:
        default_billing_plan:
          title: default_billing_plan
          description: the billing plan to update.
          $ref: '#/components/schemas/tcn.org.billing.billingplan.v1alpha5.DefaultBillingPlan'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the update mask.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateDefaultBillingPlanRequest
      required:
      - default_billing_plan
      additionalProperties: false
      description: UpdateDefaultBillingPlanRequest -
    tcn.org.billing.billingtag.v1alpha5.BillingTag.ProductCategory:
      type: string
      title: ProductCategory
      enum:
      - PRODUCT_CATEGORY_UNSPECIFIED
      - COMMUNICATIONS_OMNI_CHAT
      - COMMUNICATIONS_OMNI_EMAIL
      - COMMUNICATIONS_OMNI_SMS
      - COMMUNICATIONS_OMNI_AGENT
      - COMMUNICATIONS_OMNI_RESOURCES
      - DATA_MANAGEMENT_COMPLIANCE_COMPLIANCE
      - WORKFORCE_ENGAGEMENT_WORKFORCE_OPTIMIZATION_VOICE_ANALYTICS
      description: ProductCategory -
    tcn.org.billing.billingtag.v1alpha5.BillingTag:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the name used to identify the billing tag
        title:
          type: string
          title: title
          description: the human-readable title of the billing tag
        product_category:
          title: product_category
          description: (IMMUTABLE) the category of products this billing tag can be
            applied to
          $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag.ProductCategory'
        create_time:
          title: create_time
          description: the time the billing tag was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        delete_time:
          title: delete_time
          description: the time the billing tag was deleted.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the billing tag was last updated.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: BillingTag
      required:
      - title
      - product_category
      additionalProperties: false
      description: BillingTag defines a tag or label that can be attached to a sku.
    tcn.org.billing.billingtag.v1alpha5.BatchCreateBillingTagsRequest:
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.CreateBillingTagRequest'
          title: requests
          description: "the billing tags to create.\n a maximum of 1000 billing tags
            can be created in a single request."
      title: BatchCreateBillingTagsRequest
      required:
      - requests
      additionalProperties: false
      description: BatchCreateBillingTagsRequest -
    tcn.org.billing.billingtag.v1alpha5.BatchCreateBillingTagsResponse:
      type: object
      properties:
        billing_tags:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag'
          title: billing_tags
          description: created billing tags
      title: BatchCreateBillingTagsResponse
      additionalProperties: false
      description: BatchCreateBillingTagsResponse -
    tcn.org.billing.billingtag.v1alpha5.CreateBillingTagRequest:
      type: object
      properties:
        billing_tag_id:
          type: string
          title: billing_tag_id
          description: (OPTIONAL) the id of the billing tag to create.
        billing_tag:
          title: billing_tag
          description: the billing tag to create.
          $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag'
      title: CreateBillingTagRequest
      required:
      - billing_tag
      additionalProperties: false
      description: CreateBillingTagRequest -
    tcn.org.billing.billingtag.v1alpha5.GetBillingTagRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the billing tag to get.\n Format: billingTags/{billing_tag}"
      title: GetBillingTagRequest
      required:
      - name
      additionalProperties: false
      description: GetBillingTagRequest -
    tcn.org.billing.billingtag.v1alpha5.ListBillingTagsRequest:
      type: object
      properties:
        page_size:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of billing tags to return. If
            unspecified, at most 50 billing tags\n will be returned. The maximum value
            is 1000; values above 1000 will be coerced to 1000."
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListBillingTags`
            call. Provide this to retrieve the\n subsequent page. When paginating,
            all other parameters provided to `ListBillingTags` must\n match the call
            that provided the page token."
        skip:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of billing tags to skip.
      title: ListBillingTagsRequest
      additionalProperties: false
      description: ListBillingTagsRequest -
    tcn.org.billing.billingtag.v1alpha5.ListBillingTagsResponse:
      type: object
      properties:
        billing_tags:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.billingtag.v1alpha5.BillingTag'
          title: billing_tags
          description: the billing tags.
        next_page_token:
          type: string
          title: next_page_token
          description: "a token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      title: ListBillingTagsResponse
      additionalProperties: false
      description: ListBillingTagsResponse -
    tcn.org.billing.event.v1alpha5.ProcessEventsJob:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the name used to identify the job
        title:
          type: string
          title: title
          description: (IMMUTABLE) the human-readable title of the job.
        create_time:
          title: create_time
          description: the time the job was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        delete_time:
          title: delete_time
          description: the time the job was deleted.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the job was last updated.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        org_ids:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: org_ids
          description: (OPTIONAL) the org ids that the job will process events for;
            defaults to all.
        event_types:
          type: array
          items:
            type: integer
            format: int32
            description: '(OPTIONAL) '
          title: event_types
          description: (OPTIONAL) the event types that the job will process events
            for; defaults to all.
        start_time:
          title: start_time
          description: "(OPTIONAL) the start time that the job will process events
            for. If not set, defaults to\n the beginning of time."
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        end_time:
          title: end_time
          description: "(OPTIONAL) the end time that the job will process events for.
            If not set, defaults to\n the end of time."
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: ProcessEventsJob
      required:
      - title
      additionalProperties: false
      description: ProcessEventsJob is a resource that represents a job to process
        events.
    tcn.org.billing.event.v1alpha5.RunProcessEventsJobMetadata.State:
      type: string
      title: State
      enum:
      - STATE_UNSPECIFIED
      - RUNNING
      - SUCCEEDED
      - FAILED
      description: State -
    google.longrunning.Operation:
      type: object
      oneOf:
      - properties:
          error:
            title: error
            description: The error result of the operation in case of failure or cancellation.
            $ref: '#/components/schemas/google.rpc.Status'
        title: error
        required:
        - error
      - properties:
          response:
            title: response
            description: "The normal, successful response of the operation.  If the
              original\n method returns no data on success, such as `Delete`, the
              response is\n `google.protobuf.Empty`.  If the original method is standard\n
              `Get`/`Create`/`Update`, the response should be the resource.  For other\n
              methods, the response should have the type `XxxResponse`, where `Xxx`\n
              is the original method name.  For example, if the original method name\n
              is `TakeSnapshot()`, the inferred response type is\n `TakeSnapshotResponse`."
            $ref: '#/components/schemas/google.protobuf.Any'
        title: response
        required:
        - response
      properties:
        name:
          type: string
          title: name
          description: "The server-assigned name, which is only unique within the
            same service that\n originally returns it. If you use the default HTTP
            mapping, the\n `name` should be a resource name ending with `operations/{unique_id}`."
        metadata:
          title: metadata
          description: "Service-specific metadata associated with the operation.  It
            typically\n contains progress information and common metadata such as
            create time.\n Some services might not provide such metadata.  Any method
            that returns a\n long-running operation should document the metadata type,
            if any."
          $ref: '#/components/schemas/google.protobuf.Any'
        done:
          type: boolean
          title: done
          description: "If the value is `false`, it means the operation is still in
            progress.\n If `true`, the operation is completed, and either `error`
            or `response` is\n available."
      title: Operation
      additionalProperties: false
      description: "This resource represents a long-running operation that is the
        result of a\n network API call."
    google.rpc.Status:
      type: object
      properties:
        code:
          type: integer
          title: code
          format: int32
          description: "The status code, which should be an enum value of\n [google.rpc.Code][google.rpc.Code]."
        message:
          type: string
          title: message
          description: "A developer-facing error message, which should be in English.
            Any\n user-facing error message should be localized and sent in the\n
            [google.rpc.Status.details][google.rpc.Status.details] field, or localized\n
            by the client."
        details:
          type: array
          items:
            $ref: '#/components/schemas/google.protobuf.Any'
          title: details
          description: "A list of messages that carry the error details.  There is
            a common set of\n message types for APIs to use."
      title: Status
      additionalProperties: false
      description: "The `Status` type defines a logical error model that is suitable
        for\n different programming environments, including REST APIs and RPC APIs.
        It is\n used by [gRPC](https://github.com/grpc). Each `Status` message contains\n
        three pieces of data: error code, error message, and error details.\n\n You
        can find out more about this error model and how to work with it in the\n
        [API Design Guide](https://cloud.google.com/apis/design/errors)."
    tcn.org.billing.event.v1alpha5.CreateProcessEventsJobRequest:
      type: object
      properties:
        process_events_job_id:
          type: string
          title: process_events_job_id
          description: (OPTIONAL) the process events job id.
        process_events_job:
          title: process_events_job
          description: the process events job to be created.
          $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.ProcessEventsJob'
      title: CreateProcessEventsJobRequest
      required:
      - process_events_job
      additionalProperties: false
      description: CreateProcessEventsJobRequest -
    tcn.org.billing.event.v1alpha5.DeleteProcessEventsJobRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the process events job to be deleted.\n Format:
            processEventsJobs/{process_events_job}"
        force:
          type: boolean
          title: force
          description: (OPTIONAL) if set to true, all executions of the job will also
            be deleted.
        allow_missing:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the job is missing, the request
            will succeed\n but no action will be taken on the server."
      title: DeleteProcessEventsJobRequest
      required:
      - name
      additionalProperties: false
      description: DeleteProcessEventsJobRequest -
    tcn.org.billing.event.v1alpha5.GetProcessEventsJobRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the process events job to be retrieved.\n Format:
            processEventsJobs/{process_events_job}"
      title: GetProcessEventsJobRequest
      required:
      - name
      additionalProperties: false
      description: GetProcessEventsJobRequest -
    tcn.org.billing.event.v1alpha5.ListProcessEventsJobsRequest:
      type: object
      properties:
        page_size:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of matching rules to return.
            If unspecified, at most 50 jobs will be\n returned. The maximum value
            is 1000; values above 1000 will be coerced to 1000."
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListProcessEventsJobsRequest`
            call. Provide this\n to retrieve the subsequent page. When paginating,
            all other parameters provided to\n `ListProcessEventsJobsRequest` must
            match the call that provided the page token."
        skip:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of jobs to skip.
      title: ListProcessEventsJobsRequest
      additionalProperties: false
      description: ListProcessEventsJobsRequest -
    tcn.org.billing.event.v1alpha5.ListProcessEventsJobsResponse:
      type: object
      properties:
        process_events_jobs:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.ProcessEventsJob'
          title: process_events_jobs
          description: the list of process events jobs.
        next_page_token:
          type: string
          title: next_page_token
          description: "a token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      title: ListProcessEventsJobsResponse
      additionalProperties: false
      description: ListProcessEventsJobsResponse -
    tcn.org.billing.event.v1alpha5.RunProcessEventsJobMetadata:
      type: object
      properties:
        state:
          title: state
          description: the current state of the job.
          readOnly: true
          $ref: '#/components/schemas/tcn.org.billing.event.v1alpha5.RunProcessEventsJobMetadata.State'
        processed_event_count:
          type:
          - integer
          - string
          title: processed_event_count
          format: int64
          description: the number of events processed by the job.
          readOnly: true
        total_events_count:
          type:
          - integer
          - string
          title: total_events_count
          format: int64
          description: the total number of events the job will process.
          readOnly: true
        error:
          title: error
          description: the error message if the job failed.
          readOnly: true
          $ref: '#/components/schemas/google.rpc.Status'
      title: RunProcessEventsJobMetadata
      additionalProperties: false
      description: RunProcessEventsJobMetadata -
    tcn.org.billing.event.v1alpha5.RunProcessEventsJobRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the process events job to be run.\n Format: processEventsJobs/{process_events_job}"
      title: RunProcessEventsJobRequest
      required:
      - name
      additionalProperties: false
      description: RunProcessEventsJobRequest -
    tcn.org.billing.event.v1alpha5.RunProcessEventsJobResponse:
      type: object
      title: RunProcessEventsJobResponse
      additionalProperties: false
      description: RunProcessEventsJobResponse -
    tcn.org.billing.invoice.v1alpha5.GenerateInvoiceRequest.InvoiceFormat:
      type: string
      title: InvoiceFormat
      enum:
      - INVOICE_FORMAT_UNSPECIFIED
      - CSV
      description: InvoiceFormat -
    tcn.org.billing.invoice.v1alpha5.GenerateInvoiceRequest:
      type: object
      properties:
        invoice_time:
          title: invoice_time
          description: "(OPTIONAL) the date of the invoice, or in other words, a date
            that lies within the billing cycle\n for which the invoice is being generated."
          $ref: '#/components/schemas/google.type.Date'
        format:
          title: format
          description: (OPTIONAL) the format of the invoice.
          $ref: '#/components/schemas/tcn.org.billing.invoice.v1alpha5.GenerateInvoiceRequest.InvoiceFormat'
      title: GenerateInvoiceRequest
      additionalProperties: false
      description: GenerateInvoiceRequest -
    tcn.org.billing.invoice.v1alpha5.GenerateInvoiceResponse:
      type: object
      properties:
        billing_cycle:
          type: string
          title: billing_cycle
          description: the billing cycle for which the invoice was generated.
        generate_time:
          title: generate_time
          description: the time at which the invoice was generated.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        download_uri:
          title: download_uri
          description: the download uri for the invoice.
          $ref: '#/components/schemas/google.protobuf.StringValue'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.invoice.v1alpha5.GenerateInvoiceResponse.InvoiceRow'
          title: rows
          description: the invoice rows.
      title: GenerateInvoiceResponse
      additionalProperties: false
      description: GenerateInvoiceResponse -
    tcn.org.billing.invoice.v1alpha5.GenerateInvoiceResponse.InvoiceColumn:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the column.
        value:
          type: string
          title: value
          description: the value of the column.
      title: InvoiceColumn
      additionalProperties: false
      description: InvoiceColumn -
    tcn.org.billing.invoice.v1alpha5.GenerateInvoiceResponse.InvoiceRow:
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.invoice.v1alpha5.GenerateInvoiceResponse.InvoiceColumn'
          title: columns
          description: the columns of the invoice row.
      title: InvoiceRow
      additionalProperties: false
      description: InvoiceRow -
    tcn.org.billing.matchingrule.type.CountryPrefixes:
      type: object
      properties:
        country_prefix:
          type: string
          title: country_prefix
          description: the country prefix to match
        prefixes:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: prefixes
          description: (OPTIONAL) the list of prefixes to match; each prefix must
            start with the country prefix.
      title: CountryPrefixes
      required:
      - country_prefix
      additionalProperties: false
      description: "CountryPrefixes defines a rule for matching a set of prefixes
        mapped\n to a single country."
    tcn.org.billing.matchingrule.type.MatchingConfig:
      type: object
      properties:
        country_prefixes:
          title: country_prefixes
          description: (OPTIONAL) The country prefixes to be used for matching.
          $ref: '#/components/schemas/tcn.org.billing.matchingrule.type.CountryPrefixes'
      title: MatchingConfig
      additionalProperties: false
      description: "MatchingConfig defines the configuration for a matching rule.
        This\n should be functionally equivalent to a union type in C."
    tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the matching rule id used to identify the rule.
        title:
          type: string
          title: title
          description: the human-readable title of the matching rule.
        create_time:
          title: create_time
          description: the time the matching rule was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        delete_time:
          title: delete_time
          description: the time the matching rule was deleted.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the matching rule was last updated.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        config:
          title: config
          description: the configuration for the matching rule.
          $ref: '#/components/schemas/tcn.org.billing.matchingrule.type.MatchingConfig'
      title: DraftMatchingRule
      required:
      - title
      - config
      additionalProperties: false
      description: DraftMatchingRule defines a draft rule for matching a set of events.
    tcn.org.billing.matchingrule.v1alpha5.MatchingRule:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the matching rule id used to identify the rule.
        title:
          type: string
          title: title
          description: the human-readable title of the matching rule.
        create_time:
          title: create_time
          description: the time the matching rule was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        delete_time:
          title: delete_time
          description: the time the matching rule was deleted.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the matching rule was last updated.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        config:
          title: config
          description: the configuration for the matching rule.
          $ref: '#/components/schemas/tcn.org.billing.matchingrule.type.MatchingConfig'
      title: MatchingRule
      required:
      - title
      - config
      additionalProperties: false
      description: MatchingRule defines a rule for matching a set of events.
    tcn.org.billing.matchingrule.v1alpha5.BatchDeleteDraftMatchingRulesRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "(OPTIONAL) the parent of the matching rules to be deleted.\n
            Format: defaultBillingPlans/{defaultBillingPlan}"
        names:
          type: array
          items:
            type: string
          title: names
          description: "the names of the matching rules to be deleted.\n a maximum
            of 1000 matching rules can be deleted in a single request.\n Format: defaultBillingPlans/{defaultBillingPlan}/draftMatchingRules/{draftMatchingRule}"
        allow_missing:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the matching rule is missing,
            the request will succeed\n but no action will be taken on the server."
      title: BatchDeleteDraftMatchingRulesRequest
      required:
      - names
      additionalProperties: false
      description: BatchDeleteDraftMatchingRulesRequest -
    tcn.org.billing.matchingrule.v1alpha5.CreateDraftMatchingRuleRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "the name of the matching rule to be created.\n Format: defaultBillingPlans/{defaultBillingPlan}"
        draft_matching_rule_id:
          type: string
          title: draft_matching_rule_id
          description: (OPTIONAL) the matching rule id.
        draft_matching_rule:
          title: draft_matching_rule
          description: the matching rule to create.
          $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
      title: CreateDraftMatchingRuleRequest
      required:
      - parent
      - draft_matching_rule
      additionalProperties: false
      description: CreateDraftMatchingRuleRequest -
    tcn.org.billing.matchingrule.v1alpha5.DeleteDraftMatchingRuleRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the matching rule to be deleted.\n Format: defaultBillingPlans/{defaultBillingPlan}/matchingRules/{matchingRule}"
        allow_missing:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the matching rule is missing,
            the request will succeed\n but no action will be taken on the server."
      title: DeleteDraftMatchingRuleRequest
      required:
      - name
      additionalProperties: false
      description: DeleteDraftMatchingRuleRequest -
    tcn.org.billing.matchingrule.v1alpha5.GetDraftMatchingRuleRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the matching rule to be retrieved.\n Format: defaultBillingPlans/{defaultBillingPlan}/draftMatchingRules/{draftMatchingRule}\n
            Format: orgs/{org}/billingPlans/{billingPlan}/draftMatchingRules/{draftMatchingRule}"
      title: GetDraftMatchingRuleRequest
      required:
      - name
      additionalProperties: false
      description: GetDraftMatchingRuleRequest -
    tcn.org.billing.matchingrule.v1alpha5.GetMatchingRuleRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the matching rule to be retrieved.\n Format: matchingRules/{matchingRule}"
      title: GetMatchingRuleRequest
      required:
      - name
      additionalProperties: false
      description: GetMatchingRuleRequest -
    tcn.org.billing.matchingrule.v1alpha5.ListDraftMatchingRulesRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "the parent of the matching rules to be listed.\n Format: defaultBillingPlans/{defaultBillingPlan}\n
            Format: orgs/{org}/billingPlans/{billingPlan}"
        page_size:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of matching rules to return.
            If unspecified, at most 50 matching rules\n will be returned. The maximum
            value is 1000; values above 1000 will be coerced to 1000."
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListDraftMatchingRules`
            call. Provide this to retrieve\n the subsequent page. When paginating,
            all other parameters provided to `ListDraftMatchingRules`\n must match
            the call that provided the page token."
        skip:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of matching rules to skip.
      title: ListDraftMatchingRulesRequest
      required:
      - parent
      additionalProperties: false
      description: ListDraftMatchingRulesRequest -
    tcn.org.billing.matchingrule.v1alpha5.ListDraftMatchingRulesResponse:
      type: object
      properties:
        draft_matching_rules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
          title: draft_matching_rules
          description: the draft matching rules.
        next_page_token:
          type: string
          title: next_page_token
          description: "a token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      title: ListDraftMatchingRulesResponse
      additionalProperties: false
      description: ListDraftMatchingRulesResponse -
    tcn.org.billing.matchingrule.v1alpha5.ListMatchingRulesRequest:
      type: object
      properties:
        page_size:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) the maximum number of matching rules to return.
            If unspecified, at most 50 matching rules\n will be returned. The maximum
            value is 1000; values above 1000 will be coerced to 1000."
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListMatchingRules`
            call. Provide this to retrieve the\n subsequent page. When paginating,
            all other parameters provided to `ListMatchingRules` must\n match the
            call that provided the page token."
        skip:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of matching rules to skip.
      title: ListMatchingRulesRequest
      additionalProperties: false
      description: ListMatchingRulesResponse -
    tcn.org.billing.matchingrule.v1alpha5.ListMatchingRulesResponse:
      type: object
      properties:
        matching_rules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.MatchingRule'
          title: matching_rules
          description: the matching rules.
        next_page_token:
          type: string
          title: next_page_token
          description: "a token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      title: ListMatchingRulesResponse
      additionalProperties: false
      description: ListMatchingRulesResponse -
    tcn.org.billing.matchingrule.v1alpha5.UpdateDraftMatchingRuleRequest:
      type: object
      properties:
        draft_matching_rule:
          title: draft_matching_rule
          description: the matching rule to update.
          $ref: '#/components/schemas/tcn.org.billing.matchingrule.v1alpha5.DraftMatchingRule'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the list of fields to update, defaults to all populated
            fields.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateDraftMatchingRuleRequest
      required:
      - draft_matching_rule
      additionalProperties: false
      description: UpdateDraftMatchingRuleRequest -
    tcn.org.billing.type.ProductType:
      type: string
      title: ProductType
      enum:
      - PRODUCT_TYPE_UNSPECIFIED
      - COMMUNICATIONS_OMNI_CHAT_AGENT_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_CHAT_AGENT_ATTACHMENT
      - COMMUNICATIONS_OMNI_CHAT_AGENT_ACCUMULATED_ATTACHMENTS
      - COMMUNICATIONS_OMNI_CHAT_CUSTOMER_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_CHAT_CUSTOMER_ATTACHMENT
      - COMMUNICATIONS_OMNI_CHAT_CUSTOMER_ACCUMULATED_ATTACHMENTS
      - COMMUNICATIONS_OMNI_CHAT_MANAGER_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_CHAT_MANAGER_ATTACHMENT
      - COMMUNICATIONS_OMNI_CHAT_MANAGER_ACCUMULATED_ATTACHMENTS
      - COMMUNICATIONS_OMNI_CHAT_SYSTEM_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_CHAT_SYSTEM_ATTACHMENT
      - COMMUNICATIONS_OMNI_CHAT_SYSTEM_ACCUMULATED_ATTACHMENTS
      - COMMUNICATIONS_OMNI_CHAT_FLOW_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_CHAT_FLOW_ATTACHMENT
      - COMMUNICATIONS_OMNI_CHAT_FLOW_ACCUMULATED_ATTACHMENTS
      - COMMUNICATIONS_OMNI_EMAIL_AGENT_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_EMAIL_AGENT_SIZE
      - COMMUNICATIONS_OMNI_EMAIL_AGENT_ACCUMULATED_SIZE
      - COMMUNICATIONS_OMNI_EMAIL_CUSTOMER_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_EMAIL_CUSTOMER_SIZE
      - COMMUNICATIONS_OMNI_EMAIL_CUSTOMER_ACCUMULATED_SIZE
      - COMMUNICATIONS_OMNI_EMAIL_MANAGER_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_EMAIL_MANAGER_SIZE
      - COMMUNICATIONS_OMNI_EMAIL_MANAGER_ACCUMULATED_SIZE
      - COMMUNICATIONS_OMNI_EMAIL_SYSTEM_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_EMAIL_SYSTEM_SIZE
      - COMMUNICATIONS_OMNI_EMAIL_SYSTEM_ACCUMULATED_SIZE
      - COMMUNICATIONS_OMNI_EMAIL_FLOW_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_EMAIL_FLOW_SIZE
      - COMMUNICATIONS_OMNI_EMAIL_FLOW_ACCUMULATED_SIZE
      - COMMUNICATIONS_OMNI_SMS_AGENT_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_SMS_AGENT_ATTACHMENT
      - COMMUNICATIONS_OMNI_SMS_AGENT_ACCUMULATED_ATTACHMENTS
      - COMMUNICATIONS_OMNI_SMS_CUSTOMER_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_SMS_CUSTOMER_ATTACHMENT
      - COMMUNICATIONS_OMNI_SMS_CUSTOMER_ACCUMULATED_ATTACHMENTS
      - COMMUNICATIONS_OMNI_SMS_MANAGER_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_SMS_MANAGER_ATTACHMENT
      - COMMUNICATIONS_OMNI_SMS_MANAGER_ACCUMULATED_ATTACHMENTS
      - COMMUNICATIONS_OMNI_SMS_SYSTEM_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_SMS_SYSTEM_ATTACHMENT
      - COMMUNICATIONS_OMNI_SMS_SYSTEM_ACCUMULATED_ATTACHMENTS
      - COMMUNICATIONS_OMNI_SMS_FLOW_MESSAGE_UNIT
      - COMMUNICATIONS_OMNI_SMS_FLOW_ATTACHMENT
      - COMMUNICATIONS_OMNI_SMS_FLOW_ACCUMULATED_ATTACHMENTS
      - COMMUNICATIONS_OMNI_AGENT_SEATS
      - COMMUNICATIONS_OMNI_RESOURCES_CONNECTED_INBOX_POLL
      - COMMUNICATIONS_OMNI_RESOURCES_CONNECTED_INBOX_CREATED
      - DATA_MANAGEMENT_COMPLIANCE_COMPLIANCE_RND_QUERY
      - DATA_MANAGEMENT_COMPLIANCE_COMPLIANCE_RND_QUERY_CACHED
      - WORKFORCE_ENGAGEMENT_WORKFORCE_OPTIMIZATION_VOICE_ANALYTICS_CALL_TRANSCRIPTS
      - WORKFORCE_ENGAGEMENT_WORKFORCE_OPTIMIZATION_VOICE_ANALYTICS_ACCUMULATED_CALL_TRANSCRIPTS
      - WORKFORCE_ENGAGEMENT_WORKFORCE_OPTIMIZATION_VOICE_ANALYTICS_SMS_TRANSCRIPTS
      - WORKFORCE_ENGAGEMENT_WORKFORCE_OPTIMIZATION_VOICE_ANALYTICS_CHAT_TRANSCRIPTS
      - WORKFORCE_ENGAGEMENT_WORKFORCE_OPTIMIZATION_AI_BUNDLE_SMART_EVALUATIONS
      - WORKFORCE_ENGAGEMENT_WORKFORCE_OPTIMIZATION_AI_BUNDLE_ACCUMULATED_SMART_EVALUATIONS
      - WORKFORCE_ENGAGEMENT_WORKFORCE_OPTIMIZATION_AI_BUNDLE_SENTIMENTS
      - WORKFORCE_ENGAGEMENT_WORKFORCE_OPTIMIZATION_AI_BUNDLE_ACCUMULATED_SENTIMENTS
      - WORKFORCE_ENGAGEMENT_WORKFORCE_OPTIMIZATION_AI_BUNDLE_SUMMARIES
      - WORKFORCE_ENGAGEMENT_WORKFORCE_OPTIMIZATION_AI_BUNDLE_ACCUMULATED_SUMMARIES
      description: ProductType represents the types of products billable.
    google.type.Money:
      type: object
      properties:
        currency_code:
          type: string
          title: currency_code
          description: The three-letter currency code defined in ISO 4217.
        units:
          type:
          - integer
          - string
          title: units
          format: int64
          description: "The whole units of the amount.\n For example if `currencyCode`
            is `\"USD\"`, then 1 unit is one US dollar."
        nanos:
          type: integer
          title: nanos
          format: int32
          description: "Number of nano (10^-9) units of the amount.\n The value must
            be between -999,999,999 and +999,999,999 inclusive.\n If `units` is positive,
            `nanos` must be positive or zero.\n If `units` is zero, `nanos` can be
            positive, zero, or negative.\n If `units` is negative, `nanos` must be
            negative or zero.\n For example $-1.75 is represented as `units`=-1 and
            `nanos`=-750,000,000."
      title: Money
      additionalProperties: false
      description: Represents an amount of money with its currency type.
    tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition:
      type: object
      oneOf:
      - properties:
          draft_matching_rule:
            title: draft_matching_rule
            description: (OPTIONAL) the draft matching rule
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition.DraftMatchingRule'
        title: draft_matching_rule
        required:
        - draft_matching_rule
      - properties:
          matching_rule:
            title: matching_rule
            description: (OPTIONAL) the active matching rule
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition.MatchingRule'
        title: matching_rule
        required:
        - matching_rule
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the name used to identify the billing plan
        create_time:
          title: create_time
          description: the time the rate definition was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        delete_time:
          title: delete_time
          description: the time the rate definition was deleted.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the rate definition was last updated.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        is_draft:
          type: boolean
          title: is_draft
          description: if the rate definition is a draft
          readOnly: true
        product_type:
          title: product_type
          description: (IMMUTABLE) the product type of the rate definition
          $ref: '#/components/schemas/tcn.org.billing.type.ProductType'
        billing_tag:
          title: billing_tag
          description: (OPTIONAL) the billing tag of the rate (if applicable)
          $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition.BillingTag'
        rate:
          title: rate
          description: the amount to rate a unit
          $ref: '#/components/schemas/google.type.Money'
        precision:
          type: integer
          title: precision
          format: int32
          description: "(OPTIONAL) the precision to use (in decimal places) when calculating
            the price. For example,\n a rate of 1.234 with a precision of 2 would
            produce a final price of 1.23. If not\n set, will round to nearest whole
            number."
        unit_size:
          type:
          - integer
          - string
          title: unit_size
          format: int64
          description: "(OPTIONAL) the size of an individual unit (only applicable
            if the RateDefinition is a unit based rate).\n For example, if the rate
            is a unit based rate and the unit size is 300 bytes, an\n event of size
            400 bytes will get billed as if it were 2 units."
      title: DefaultRateDefinition
      required:
      - product_type
      - rate
      additionalProperties: false
      description: DefaultRateDefinition -
    tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition.BillingTag:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the billing tag
        title:
          type: string
          title: title
          description: the title of the billing tag
          readOnly: true
      title: BillingTag
      required:
      - name
      additionalProperties: false
      description: BillingTag -
    tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition.DraftMatchingRule:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the matching rule
        title:
          type: string
          title: title
          description: the title of the matching rule
          readOnly: true
      title: DraftMatchingRule
      required:
      - name
      additionalProperties: false
      description: DraftMatchingRule -
    tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition.MatchingRule:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the matching rule
        title:
          type: string
          title: title
          description: the title of the matching rule
          readOnly: true
      title: MatchingRule
      required:
      - name
      additionalProperties: false
      description: MatchingRule -
    tcn.org.billing.ratedefinition.v1alpha5.RateDefinition:
      type: object
      oneOf:
      - properties:
          draft_matching_rule:
            title: draft_matching_rule
            description: (OPTIONAL) the draft matching rule
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition.DraftMatchingRule'
        title: draft_matching_rule
        required:
        - draft_matching_rule
      - properties:
          matching_rule:
            title: matching_rule
            description: (OPTIONAL) the active matching rule
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition.MatchingRule'
        title: matching_rule
        required:
        - matching_rule
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) the name used to identify the billing plan
        create_time:
          title: create_time
          description: the time the rate definition was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        delete_time:
          title: delete_time
          description: the time the rate definition was deleted.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: the time the rate definition was last updated.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        is_draft:
          type: boolean
          title: is_draft
          description: if the rate definition is a draft
          readOnly: true
        is_customized:
          type: boolean
          title: is_customized
          description: if the rate definition has been customized
          readOnly: true
        product_type:
          title: product_type
          description: (IMMUTABLE) the product type of the rate definition
          $ref: '#/components/schemas/tcn.org.billing.type.ProductType'
        billing_tag:
          title: billing_tag
          description: (OPTIONAL) the billing tag of the rate (if applicable)
          $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition.BillingTag'
        rate:
          title: rate
          description: the amount to rate a unit
          $ref: '#/components/schemas/google.type.Money'
        precision:
          type: integer
          title: precision
          format: int32
          description: "(OPTIONAL) the precision to use (in decimal places) when calculating
            the price. For example,\n a rate of 1.234 with a precision of 2 would
            produce a final price of 1.23. If not\n set, will round to nearest whole
            number."
        unit_size:
          type:
          - integer
          - string
          title: unit_size
          format: int64
          description: "(OPTIONAL) the size of an individual unit (only applicable
            if the RateDefinition is a unit based rate).\n For example, if the rate
            is a unit based rate and the unit size is 300 bytes, an\n event of size
            400 bytes will get billed as if it were 2 units."
      title: RateDefinition
      required:
      - product_type
      - rate
      additionalProperties: false
      description: RateDefinition -
    tcn.org.billing.ratedefinition.v1alpha5.RateDefinition.BillingTag:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the billing tag
        title:
          type: string
          title: title
          description: the title of the billing tag
          readOnly: true
      title: BillingTag
      required:
      - name
      additionalProperties: false
      description: Billing Tag -
    tcn.org.billing.ratedefinition.v1alpha5.RateDefinition.DraftMatchingRule:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the matching rule
        title:
          type: string
          title: title
          description: the title of the matching rule
          readOnly: true
      title: DraftMatchingRule
      required:
      - name
      additionalProperties: false
      description: DraftMatchingRule -
    tcn.org.billing.ratedefinition.v1alpha5.RateDefinition.MatchingRule:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the matching rule
        title:
          type: string
          title: title
          description: the title of the matching rule
          readOnly: true
      title: MatchingRule
      required:
      - name
      additionalProperties: false
      description: Matching Rule -
    tcn.org.billing.ratedefinition.v1alpha5.BatchCreateDefaultRateDefinitionsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "(OPTIONAL) the parent resource where the default rate definitions
            will be created.\n Format: defaultBillingPlans/{default_billing_plan_id}"
        requests:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.CreateDefaultRateDefinitionRequest'
          title: requests
          description: "the default rate definitions to create.\n a maximum of 1000
            rate definitions can be created in a single request."
      title: BatchCreateDefaultRateDefinitionsRequest
      required:
      - requests
      additionalProperties: false
      description: BatchCreateDefaultRateDefinitionsRequest -
    tcn.org.billing.ratedefinition.v1alpha5.BatchCreateDefaultRateDefinitionsResponse:
      type: object
      properties:
        default_rate_definitions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
          title: default_rate_definitions
          description: the default rate definitions that were created.
      title: BatchCreateDefaultRateDefinitionsResponse
      additionalProperties: false
      description: BatchCreateDefaultRateDefinitionsResponse -
    tcn.org.billing.ratedefinition.v1alpha5.BatchDeleteDefaultRateDefinitionsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "(OPTIONAL) the parent resource where the default rate definitions
            will be deleted.\n Format: defaultBillingPlans/{default_billing_plan_id}"
        names:
          type: array
          items:
            type: string
          title: names
          description: "the names of the rate definitions to be deleted.\n a maximum
            of 1000 rate definitions can be deleted in a single request.\n Format:
            defaultBillingPlans/{default_billing_plan_id}/defaultRateDefinitions/{default_rate_definition_id}"
        allow_missing:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the rate definition is missing,
            the request will succeed\n but no action will be taken on the server."
      title: BatchDeleteDefaultRateDefinitionsRequest
      required:
      - names
      additionalProperties: false
      description: BatchDeleteDefaultRateDefinitionsRequest -
    tcn.org.billing.ratedefinition.v1alpha5.BatchResetRateDefinitionsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "(OPTIONAL) the parent resource where the rate definitions
            will be reset.\n Format: orgs/{org}/billingPlans/{billing_plan_id}"
        names:
          type: array
          items:
            type: string
          title: names
          description: "the names of the rate definitions to be reset.\n a maximum
            of 1000 rate definitions can be reset in a single request.\n Format: orgs/{org}/billingPlans/{billing_plan_id}/rateDefinitions/{rate_definition_id}"
        allow_missing:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the rate definition is missing,
            the request will succeed\n but no action will be taken on the server."
      title: BatchResetRateDefinitionsRequest
      required:
      - names
      additionalProperties: false
      description: BatchResetRateDefinitionsRequest -
    tcn.org.billing.ratedefinition.v1alpha5.BatchResetRateDefinitionsResponse:
      type: object
      properties:
        rate_definitions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
          title: rate_definitions
          description: the reset rate definitions.
      title: BatchResetRateDefinitionsResponse
      additionalProperties: false
      description: BatchResetRateDefinitionsResponse -
    tcn.org.billing.ratedefinition.v1alpha5.CreateDefaultRateDefinitionRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "the parent resource where the rate definition will be created.\n
            Format: defaultBillingPlans/{default_billing_plan_id}"
        default_rate_definition_id:
          type: string
          title: default_rate_definition_id
          description: (OPTIONAL) the default rate definition id.
        default_rate_definition:
          title: default_rate_definition
          description: the default rate definition to create.
          $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
      title: CreateDefaultRateDefinitionRequest
      required:
      - parent
      - default_rate_definition
      additionalProperties: false
      description: CreateDefaultRateDefinitionRequest -
    tcn.org.billing.ratedefinition.v1alpha5.DeleteDefaultRateDefinitionRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the default rate definition to delete.\n Format:
            defaultBillingPlans/{default_billing_plan_id}/defaultRateDefinitions/{default_rate_definition_id}"
        allow_missing:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the rate definition is missing,
            the request will succeed\n but no action will be taken on the server."
      title: DeleteDefaultRateDefinitionRequest
      required:
      - name
      additionalProperties: false
      description: DeleteDefaultRateDefinitionRequest -
    tcn.org.billing.ratedefinition.v1alpha5.GetDefaultRateDefinitionRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the default rate definition to get.\n Format:
            defaultBillingPlans/{default_billing_plan_id}/defaultRateDefinitions/{default_rate_definition_id}"
      title: GetDefaultRateDefinitionRequest
      required:
      - name
      additionalProperties: false
      description: GetDefaultRateDefinitionRequest -
    tcn.org.billing.ratedefinition.v1alpha5.GetRateDefinitionRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the rate definition to get.\n Format: orgs/{org}/billingPlans/{billing_plan_id}/rateDefinitions/{rate_definition_id}"
      title: GetRateDefinitionRequest
      required:
      - name
      additionalProperties: false
      description: GetRateDefinitionRequest -
    tcn.org.billing.ratedefinition.v1alpha5.ListDefaultRateDefinitionsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "the parent resource whose default rate definitions will be
            listed.\n Format: defaultBillingPlans/{default_billing_plan_id}"
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) the maximum number of default rate definitions to
            return.
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListDefaultRateDefinitions`
            call.\n Provide this to retrieve the subsequent page."
        skip:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of rate definitions to skip.
      title: ListDefaultRateDefinitionsRequest
      required:
      - parent
      additionalProperties: false
      description: ListDefaultRateDefinitionsRequest -
    tcn.org.billing.ratedefinition.v1alpha5.ListDefaultRateDefinitionsResponse:
      type: object
      properties:
        default_rate_definitions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
          title: default_rate_definitions
          description: the default rate definitions.
        next_page_token:
          type: string
          title: next_page_token
          description: a token to retrieve the next page of default rate definitions.
      title: ListDefaultRateDefinitionsResponse
      additionalProperties: false
      description: ListDefaultRateDefinitionsResponse -
    tcn.org.billing.ratedefinition.v1alpha5.ListRateDefinitionsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "the parent resource whose rate definitions will be listed.\n
            Format: orgs/{org}/billingPlans/{billing_plan_id}"
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) the maximum number of rate definitions to return.
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) a page token, received from a previous `ListRateDefinitions`
            call.\n Provide this to retrieve the subsequent page."
        skip:
          type: integer
          title: skip
          format: int32
          description: (OPTIONAL) the number of rate definitions to skip.
      title: ListRateDefinitionsRequest
      required:
      - parent
      additionalProperties: false
      description: ListRateDefinitionsRequest -
    tcn.org.billing.ratedefinition.v1alpha5.ListRateDefinitionsResponse:
      type: object
      properties:
        rate_definitions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
          title: rate_definitions
          description: the rate definitions.
        next_page_token:
          type: string
          title: next_page_token
          description: a token to retrieve the next page of rate definitions.
      title: ListRateDefinitionsResponse
      additionalProperties: false
      description: ListRateDefinitionsResponse -
    tcn.org.billing.ratedefinition.v1alpha5.ResetRateDefinitionRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "the name of the rate definition to reset.\n Format: orgs/{org}/billingPlans/{billing_plan_id}/rateDefinitions/{rate_definition_id}"
        allow_missing:
          type: boolean
          title: allow_missing
          description: "(OPTIONAL) if set to true, and the rate definition is missing,
            the request will succeed\n but no action will be taken on the server."
      title: ResetRateDefinitionRequest
      required:
      - name
      additionalProperties: false
      description: ResetRateDefinitionRequest -
    tcn.org.billing.ratedefinition.v1alpha5.ResetRateDefinitionResponse:
      type: object
      properties:
        rate_definition:
          title: rate_definition
          description: the rate definition.
          $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
      title: ResetRateDefinitionResponse
      additionalProperties: false
      description: ResetRateDefinitionResponse -
    tcn.org.billing.ratedefinition.v1alpha5.UpdateDefaultRateDefinitionRequest:
      type: object
      properties:
        default_rate_definition:
          title: default_rate_definition
          description: the default rate definition to update.
          $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.DefaultRateDefinition'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the update mask to apply to the default rate definition.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateDefaultRateDefinitionRequest
      required:
      - default_rate_definition
      additionalProperties: false
      description: UpdateDefaultRateDefinitionRequest -
    tcn.org.billing.ratedefinition.v1alpha5.UpdateRateDefinitionRequest:
      type: object
      properties:
        rate_definition:
          title: rate_definition
          description: the rate definition to update.
          $ref: '#/components/schemas/tcn.org.billing.ratedefinition.v1alpha5.RateDefinition'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the update mask to apply to the rate definition.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateRateDefinitionRequest
      required:
      - rate_definition
      additionalProperties: false
      description: UpdateRateDefinitionRequest -
    tcn.org.exiles.v1alpha1.ExileCertificate:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) exile certificate name is the certificate id used
            to identify a certificate
        title:
          type: string
          title: title
          description: exile certificate title is what the certificate is named
        description:
          type: string
          title: description
          description: exile certificate description of certificate
        hash:
          type: string
          title: hash
          description: exile certificate hash to verify certificates
        expiration_time:
          title: expiration_time
          description: exile certificate expired date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        create_time:
          title: create_time
          description: exile certificate created date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        revoked:
          type: boolean
          title: revoked
          description: exile certificate revoked shows if the certificate is still
            valid or revoked
          readOnly: true
        exile_config_id:
          type: string
          title: exile_config_id
          description: (OPTIONAL) exile certificate config id links the exile certificate
            to an exile configuration
        renewal_instance:
          type:
          - integer
          - string
          title: renewal_instance
          format: int64
          description: exile certificate renewal_instance shows the number of times
            the certificate has been renewed
          readOnly: true
      title: ExileCertificate
      required:
      - title
      - description
      - hash
      additionalProperties: false
      description: ExileCertificate defines the structure of an exile certificate
    tcn.org.exiles.v1alpha1.CreateExileCertificateRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The name of the exile certificate to be created.
        exile_certificate:
          title: exile_certificate
          description: ExileCertificate
          $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.ExileCertificate'
      title: CreateExileCertificateRequest
      required:
      - parent
      - exile_certificate
      additionalProperties: false
      description: CreateExileCertificateRequest is the request for creating a exile
        certificate.
    tcn.org.exiles.v1alpha1.CreateExileCertificateResponse:
      type: object
      properties:
        encoded_exile_certificate:
          type: string
          title: encoded_exile_certificate
          format: byte
          description: The base-64 encoded certificate that was created.
        exile_certificate:
          title: exile_certificate
          description: The newly created exile certificate.
          $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.ExileCertificate'
      title: CreateExileCertificateResponse
      required:
      - encoded_exile_certificate
      - exile_certificate
      additionalProperties: false
      description: CreateExileCertificateResponse is the response for creating a exile
        certificate.
    tcn.org.exiles.v1alpha1.GetExileCertificateRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the exile certificate to retrieve.
      title: GetExileCertificateRequest
      required:
      - name
      additionalProperties: false
      description: Request for getting an exile certificate
    tcn.org.exiles.v1alpha1.ListExileCertificatesRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent resource to list exile certificates from
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
      title: ListExileCertificatesRequest
      required:
      - parent
      additionalProperties: false
      description: Request used listing all exile certificates
    tcn.org.exiles.v1alpha1.ListExileCertificatesResponse:
      type: object
      properties:
        exile_certificates:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.exiles.v1alpha1.ExileCertificate'
          title: exile_certificates
          description: The list of exile certificates.
        next_page_token:
          type: string
          title: next_page_token
          description: The next page token.
      title: ListExileCertificatesResponse
      additionalProperties: false
      description: response used listing all exile certificates
    tcn.org.exiles.v1alpha1.RevokeExileCertificateRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the exile certificate to revoke.
      title: RevokeExileCertificateRequest
      required:
      - name
      additionalProperties: false
      description: RevokeExileCertificateRequest is the request for revoking a exile
        certificate.
    tcn.org.exiles.v1alpha1.RevokeExileCertificateResponse:
      type: object
      title: RevokeExileCertificateResponse
      additionalProperties: false
      description: RevokeExileCertificateResponse is the response for revoking a exile
        certificate.
    tcn.org.exiles.v1alpha1.RotateExileCertificateRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the exile certificate to rotate.
      title: RotateExileCertificateRequest
      required:
      - name
      additionalProperties: false
      description: RotateExileCertificateRequest
    tcn.org.exiles.v1alpha1.RotateExileCertificateResponse:
      type: object
      properties:
        encoded_certificate:
          type: string
          title: encoded_certificate
          description: encoded certificate
      title: RotateExileCertificateResponse
      additionalProperties: false
      description: RotateExileCertificateResponse
    tcn.org.type.v1alpha1.InputType:
      type: string
      title: InputType
      enum:
      - INPUT_TYPE_UNSPECIFIED
      - INPUT_TYPE_TEXT_BOX
      - INPUT_TYPE_TEXT_AREA
      - INPUT_TYPE_DROP_DOWN_SELECT_MENU
      - INPUT_TYPE_MULTIPLE_SELECT_MENU
      - INPUT_TYPE_RADIO_BUTTONS
      - INPUT_TYPE_CHECK_BOXES
      description: InputType describes available form input types.
    tcn.org.type.v1alpha1.InputValidation:
      type: string
      title: InputValidation
      enum:
      - INPUT_VALIDATION_UNSPECIFIED
      - INPUT_VALIDATION_NONE
      - INPUT_VALIDATION_ALPHANUMERIC
      - INPUT_VALIDATION_NUMBERS_ONLY
      - INPUT_VALIDATION_TEXT_VERIFICATION
      - INPUT_VALIDATION_REGULAR_EXPRESSION
      description: InputValidation describes validation that may be applied to input
        values.
    tcn.org.huntgroups.v1alpha1.ComplianceMetadataScript:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) complianceMetadataScript identifier
        display_name:
          type: string
          title: display_name
          description: Script display name
        description:
          type: string
          title: description
          description: (OPTIONAL) Script description
        script_fields:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.huntgroups.v1alpha1.ComplianceMetadataScript.ComplianceMetadataField'
          title: script_fields
          description: Metadata fields to be used as inputs on the agent screen.
        create_time:
          title: create_time
          description: The time the script was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: The time the script was last updated.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: ComplianceMetadataScript
      required:
      - display_name
      - script_fields
      additionalProperties: false
      description: ComplianceMetadataScript are for agent added call metadata.
    tcn.org.huntgroups.v1alpha1.ComplianceMetadataScript.ComplianceMetadataField:
      type: object
      properties:
        field_definition_id:
          type:
          - integer
          - string
          title: field_definition_id
          format: int64
          description: The ID of a field definition (CFD).
        required:
          type: boolean
          title: required
          description: Whether the agent must provide input.
        input_validation:
          title: input_validation
          description: Type of validation to use on input entered.
          $ref: '#/components/schemas/tcn.org.type.v1alpha1.InputValidation'
        input_type:
          title: input_type
          description: Input type or form component type, such as text box.
          $ref: '#/components/schemas/tcn.org.type.v1alpha1.InputType'
        response_evaluator_id:
          type:
          - integer
          - string
          title: response_evaluator_id
          format: int64
          description: (OPTIONAL) The ID of a ResponseEvaluator, used only for RegEx
            validation.
      title: ComplianceMetadataField
      required:
      - field_definition_id
      - required
      - input_validation
      - input_type
      additionalProperties: false
      description: ComplianceMetadataField describes field definition, input and validation
        attributes.
    tcn.org.huntgroups.v1alpha1.CreateComplianceMetadataScriptRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: Parent of the script.
        compliance_metadata_script_id:
          type: string
          title: compliance_metadata_script_id
          description: (OPTIONAL) ID of script to create.  If not given it will be
            generated programmatically.
        compliance_metadata_script:
          title: compliance_metadata_script
          description: Script to create.
          $ref: '#/components/schemas/tcn.org.huntgroups.v1alpha1.ComplianceMetadataScript'
      title: CreateComplianceMetadataScriptRequest
      required:
      - parent
      - compliance_metadata_script
      additionalProperties: false
      description: CreateComplianceMetadataScriptRequest
    tcn.org.huntgroups.v1alpha1.DeleteComplianceMetadataScriptRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the script to delete.
      title: DeleteComplianceMetadataScriptRequest
      required:
      - name
      additionalProperties: false
      description: DeleteComplianceMetadataScriptRequest
    tcn.org.huntgroups.v1alpha1.GetComplianceMetadataScriptRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: Name of the script
      title: GetComplianceMetadataScriptRequest
      required:
      - name
      additionalProperties: false
      description: GetComplianceMetadataScriptRequest
    tcn.org.huntgroups.v1alpha1.ListComplianceMetadataScriptsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: Parent of the scripts.
        page_size:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) The maximum number of scripts to return.\n If not
            specified, at most 50 scripts will be returned.\n The maximum value is
            1000.  Values above this will return 1000."
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) A page token to indicate which page to return.\n
            A token for the next page is returned with each request.\n To request
            a subsequent page, all parameters except the token must remain the same."
        filter:
          type: string
          title: filter
          description: (OPTIONAL) The filter to limit the list results.
      title: ListComplianceMetadataScriptsRequest
      required:
      - parent
      additionalProperties: false
      description: ListComplianceMetadataScriptRequest
    tcn.org.huntgroups.v1alpha1.ListComplianceMetadataScriptsResponse:
      type: object
      properties:
        compliance_metadata_scripts:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.huntgroups.v1alpha1.ComplianceMetadataScript'
          title: compliance_metadata_scripts
          description: The list of scripts.
        next_page_token:
          type: string
          title: next_page_token
          description: "Token to specify the next page in subsequent page requests.\n
            If this field is empty, there are no subsequent pages."
      title: ListComplianceMetadataScriptsResponse
      additionalProperties: false
      description: ListComplianceMetadataScriptResponse
    tcn.org.huntgroups.v1alpha1.UpdateComplianceMetadataScriptRequest:
      type: object
      properties:
        compliance_metadata_script:
          title: compliance_metadata_script
          description: Script to update
          $ref: '#/components/schemas/tcn.org.huntgroups.v1alpha1.ComplianceMetadataScript'
        update_mask:
          title: update_mask
          description: (OPTIONAL) Update mask
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateComplianceMetadataScriptRequest
      required:
      - compliance_metadata_script
      additionalProperties: false
      description: UpdateComplianceMetadataScriptRequest
    tcn.org.idp.v1alpha1.IdpClient:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) idpClient identifier
        secret:
          type: string
          title: secret
          description: "(IMMUTABLE) The secret of the idpClient.\n This field cannot
            be updated after creation."
        redirect_uris:
          type: array
          items:
            type: string
          title: redirect_uris
          description: The idpClients allowed redirect uris
        trusted_peers:
          type: array
          items:
            type: string
          title: trusted_peers
          description: The idpClients trusted peers
        title:
          type: string
          title: title
          description: The title of the idpClient
        billing_id:
          type: string
          title: billing_id
          description: (OPTIONAL) The billing id of the idpClient
      title: IdpClient
      required:
      - redirect_uris
      - trusted_peers
      - title
      additionalProperties: false
      description: IdpClient is a type and threshold in array for IDPClient
    tcn.org.idp.v1alpha1.CreateIdpClientRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent resource where this idpClient will be created
        idp_client_id:
          type: string
          title: idp_client_id
          description: (OPTIONAL) The idpClient id for the idpClient
        idp_client:
          title: idp_client
          description: The actual idpClient that you are sending
          $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
      title: CreateIdpClientRequest
      required:
      - parent
      - idp_client
      additionalProperties: false
      description: request message CreateIdpClientRequest
    tcn.org.idp.v1alpha1.DeleteIdpClientRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the idpClient to delete
      title: DeleteIdpClientRequest
      required:
      - name
      additionalProperties: false
      description: delete message DeleteIdpClientRequest
    tcn.org.idp.v1alpha1.GetIdpClientRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the idpClient
      title: GetIdpClientRequest
      required:
      - name
      additionalProperties: false
      description: request message GetIdpClientRequest
    tcn.org.idp.v1alpha1.ListIdpClientsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the idpClient
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) Use to specify the page token
      title: ListIdpClientsRequest
      required:
      - parent
      additionalProperties: false
      description: request message ListIdpClientRequest
    tcn.org.idp.v1alpha1.ListIdpClientsResponse:
      type: object
      properties:
        idp_clients:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
          title: idp_clients
          description: idpClients
        next_page_token:
          type: string
          title: next_page_token
          description: next page token
      title: ListIdpClientsResponse
      additionalProperties: false
      description: response message ListIdpClientsResponse
    tcn.org.idp.v1alpha1.UpdateIdpClientRequest:
      type: object
      properties:
        idp_client:
          title: idp_client
          description: The idpClient to update
          $ref: '#/components/schemas/tcn.org.idp.v1alpha1.IdpClient'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateIdpClientRequest
      required:
      - idp_client
      additionalProperties: false
      description: update message UpdateIdpClientRequest
    tcn.org.organizations.v1alpha1.Organization.ClientSkin:
      type: string
      title: ClientSkin
      enum:
      - CLIENT_SKIN_UNSPECIFIED
      - CLIENT_SKIN_DEFAULT
      - CLIENT_SKIN_TCN_BLUE
      - CLIENT_SKIN_TCN_SEA_GREEN
      - CLIENT_SKIN_RDS_ADVANTAGE
      - CLIENT_SKIN_RSI
      - CLIENT_SKIN_QUICK_CONNECT_SOLUTIONS
      - CLIENT_SKIN_BRAND_BUILDER_SOLUTIONS
      - CLIENT_SKIN_DEALER_SPIKE
      - CLIENT_SKIN_ONTARIO_SYSTEMS
      - CLIENT_SKIN_PEARSON
      - CLIENT_SKIN_THE_DEBT_CORPORATION
      - CLIENT_SKIN_TCN_CANADA
      - CLIENT_SKIN_QUAD_CORP
      - CLIENT_SKIN_BROADBAND_DYNAMICS
      - CLIENT_SKIN_AKTIV_KAPITAL
      - CLIENT_SKIN_COMMERCIAL_CREDIT_ADJUSTERS
      - CLIENT_SKIN_NEPTUNE_INNOVATIONS
      - CLIENT_SKIN_NEPTUNE_BILL_GOSLING
      - CLIENT_SKIN_SOPRA
      - CLIENT_SKIN_TCN_USA
      - CLIENT_SKIN_TELSOLUTIONS
      - CLIENT_SKIN_CREDIT_SOFT
      - CLIENT_SKIN_VOICEMED
      - CLIENT_SKIN_EXPERIAN
      description: Enum representing different client skins/themes.
    tcn.org.organizations.v1alpha1.Organization:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name identifier for an organization
        display_name:
          type: string
          title: display_name
          description: organization display name
        enabled_regions:
          type: object
          title: enabled_regions
          additionalProperties:
            type:
            - integer
            - string
            title: value
            format: int64
          description: Map of regionId to clientSid. Shows an org's enabled regions.
          readOnly: true
        default_region:
          type: string
          title: default_region
          description: Default region org was first enabled for
          readOnly: true
        billing_id:
          type: string
          title: billing_id
          description: organization billing id
          readOnly: true
        client_sid:
          type:
          - integer
          - string
          title: client_sid
          format: int64
          description: organization client sid
          readOnly: true
        manual_only_account:
          type: boolean
          title: manual_only_account
          description: "(OPTIONAL) organization manual only account\n if ever set
            to manual only can never be unset"
        backoffice_theme:
          title: backoffice_theme
          description: organization back-office theme
          $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization.ClientSkin'
        archived:
          type: boolean
          title: archived
          description: Archived specifies this organization as no longer active.
          readOnly: true
        crm_id:
          type: string
          title: crm_id
          description: Salesforce ID used for integrations.
        time_zone:
          type: string
          title: time_zone
          description: "organization time zone\n This represents the string value
            of the api.commons.TimeZone enum."
        callbacks_service_id:
          type: string
          title: callbacks_service_id
          description: organization callbacks service id
          readOnly: true
        p3_owner_id:
          type: string
          title: p3_owner_id
          description: organization parent id
        create_time:
          title: create_time
          description: organization creation date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: last_updated_date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Organization
      required:
      - display_name
      - backoffice_theme
      - crm_id
      - time_zone
      - p3_owner_id
      additionalProperties: false
      description: Organization contains the basic properties for an organization.
    tcn.org.organizations.v1alpha1.Organization.EnabledRegionsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type:
          - integer
          - string
          title: value
          format: int64
      title: EnabledRegionsEntry
      additionalProperties: false
    tcn.org.organizations.v1alpha1.ArchiveOrganizationRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The identifier of the organization to archive.
      title: ArchiveOrganizationRequest
      required:
      - name
      additionalProperties: false
      description: ArchiveOrganizationRequest is the request message for ArchiveOrganization
    tcn.org.organizations.v1alpha1.ArchiveOrganizationResponse:
      type: object
      title: ArchiveOrganizationResponse
      additionalProperties: false
      description: ArchiveOrganizationResponse is the response message for ArchiveOrganization
    tcn.org.organizations.v1alpha1.CreateOrganizationRequest:
      type: object
      properties:
        organization:
          title: organization
          description: The organization to create.
          $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
        allowed_countries:
          type: array
          items:
            type: string
          title: allowed_countries
          description: "Allowed countries is the list of allowed countries preference
            for the organization.\n This represent the string value of the api.commons.Country
            enum.\n This will be stored in the Organization Preferences."
      title: CreateOrganizationRequest
      required:
      - organization
      - allowed_countries
      additionalProperties: false
      description: "(-- api-linter: core::0133::request-id-field=disabled\n     aip.dev/not-precedent:
        The ID of the organization will be\n     generated from the service instead
        of being provided by the client. --)\n (-- api-linter: core::0133::request-unknown-fields=disabled
        --)\n (-- api-linter: core::0133::request-required-fields=disabled\n     aip.dev/not-precedent:
        We want to pass the allowed countries in the request\n     to create an organization.
        And it will be stored in the Organization Preferences. --)\n CreateOrganizationRequest
        is the request message for CreateOrganization."
    tcn.org.organizations.v1alpha1.GetLastScheduledDateRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The identifier of the organization to get the last scheduled
            date for.
      title: GetLastScheduledDateRequest
      required:
      - name
      additionalProperties: false
      description: GetLastScheduledDateRequest is the request message for GetLastScheduledDate.
    tcn.org.organizations.v1alpha1.GetOrganizationRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The identifier of the organization to retrieve.
      title: GetOrganizationRequest
      required:
      - name
      additionalProperties: false
      description: GetOrganizationRequest is the request message for GetOrganization.
    tcn.org.organizations.v1alpha1.LastScheduledDate:
      type: object
      properties:
        last_scheduled_time:
          title: last_scheduled_time
          description: "last scheduled outbound broadcast (a hold over from Backoffice)\n
            Named last_scheduled_time to follow the AIP convention."
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: LastScheduledDate
      additionalProperties: false
      description: LastScheduledDate is the response message for GetLastScheduledDate.
    tcn.org.organizations.v1alpha1.ListOrganizationsRequest:
      type: object
      properties:
        page_size:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) The maximum number of organizations to return.\n
            If unspecified, at most 50 organizations will be returned.\n The maximum
            value is 1000; values above 1000 will be coerced to 1000."
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) A page token, received from a previous `ListOrganizations`
            call.\n Provide this to retrieve the subsequent page.\n When paginating,
            all other parameters provided to `ListOrganizations` must match\n the
            call that provided the page token."
        filter:
          type: string
          title: filter
          description: (OPTIONAL) The filter to apply to list results.
        order_by:
          type: string
          title: order_by
          description: "(OPTIONAL) The field to order the results by.\n Format: \"field_name\"
            or \"field_name desc\"\n Supported fields: display_name, create_time,
            update_time"
      title: ListOrganizationsRequest
      additionalProperties: false
      description: ListOrganizationsRequest is the request message for ListOrganizations.
    tcn.org.organizations.v1alpha1.ListOrganizationsResponse:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
          title: organizations
          description: The list of organizations.
        next_page_token:
          type: string
          title: next_page_token
          description: "A token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      title: ListOrganizationsResponse
      additionalProperties: false
      description: ListOrganizationsResponse is the response message for ListOrganizations.
    tcn.org.organizations.v1alpha1.StreamOwnedOrganizationsRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The identifier of the parent organization to list owned organizations
            for.
      title: StreamOwnedOrganizationsRequest
      required:
      - name
      additionalProperties: false
      description: StreamOwnedOrganizationsRequest is the request message for StreamOwnedOrganizations.
    tcn.org.organizations.v1alpha1.StreamOwnedOrganizationsResponse:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
          title: organizations
          description: The list of organizations owned by the parent organization.
      title: StreamOwnedOrganizationsResponse
      additionalProperties: false
      description: StreamOwnedOrganizationsResponse is the response message for StreamOwnedOrganizations.
    tcn.org.organizations.v1alpha1.UnArchiveOrganizationRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The identifier of the organization to unarchive.
      title: UnArchiveOrganizationRequest
      required:
      - name
      additionalProperties: false
      description: UnArchiveOrganizationRequest is the request message for UnArchiveOrganization
    tcn.org.organizations.v1alpha1.UnArchiveOrganizationResponse:
      type: object
      title: UnArchiveOrganizationResponse
      additionalProperties: false
      description: UnArchiveOrganizationResponse is the response message for UnArchiveOrganization
    tcn.org.organizations.v1alpha1.UpdateOrganizationRequest:
      type: object
      properties:
        organization:
          title: organization
          description: The organization to update.
          $ref: '#/components/schemas/tcn.org.organizations.v1alpha1.Organization'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The field mask to apply to the organization.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateOrganizationRequest
      required:
      - organization
      additionalProperties: false
      description: UpdateOrganizationRequest is the request message for UpdateOrganization.
    tcn.org.permissions.v1alpha1.PermissionGroup:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) The name of the permission group.
        display_name:
          type: string
          title: display_name
          description: The display name of the permission group.
        description:
          type: string
          title: description
          description: (OPTIONAL) The description of the permission group.
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.api.Permission'
          title: permissions
          description: The permissions in the permission group.
        labels:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: labels
          description: (OPTIONAL) The labels assigned to the permission group.
        read_only:
          type: boolean
          title: read_only
          description: Read only flag for the permission group to restrict modification.
          readOnly: true
        create_time:
          title: create_time
          description: The date/time the permission group was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: The date/time the permission group was last updated.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: PermissionGroup
      required:
      - display_name
      - permissions
      additionalProperties: false
      description: PermissionGroup contains the basic properties for a permission
        group.
    tcn.org.permissions.v1alpha1.CreatePermissionGroupRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent of the permission group.
        permission_group:
          title: permission_group
          description: The permission group to create.
          $ref: '#/components/schemas/tcn.org.permissions.v1alpha1.PermissionGroup'
      title: CreatePermissionGroupRequest
      required:
      - parent
      - permission_group
      additionalProperties: false
      description: "(-- api-linter: core::0133::request-id-field=disabled\n     aip.dev/not-precedent:
        We need to do this because backwards compatibility with current apis. --)\n
        CreatePermissionGroupRequest is the request for the CreatePermissionGroup
        method."
    tcn.org.permissions.v1alpha1.DeletePermissionGroupRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the permission group.
      title: DeletePermissionGroupRequest
      required:
      - name
      additionalProperties: false
      description: DeletePermissionGroupRequest is the request for the DeletePermissionGroup
        method.
    tcn.org.permissions.v1alpha1.GetPermissionGroupRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the permission group.
      title: GetPermissionGroupRequest
      required:
      - name
      additionalProperties: false
      description: GetPermissionGroupRequest is the request for the GetPermissionGroup
        method.
    tcn.org.permissions.v1alpha1.ListPermissionGroupsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent of the permission groups.
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) The maximum number of permission groups to return.
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) The page token to use for the next request.
        filter:
          type: string
          title: filter
          description: (OPTIONAL) The filter to apply to list results.
      title: ListPermissionGroupsRequest
      required:
      - parent
      additionalProperties: false
      description: ListPermissionGroupsRequest is the request for the ListPermissionGroups
        method.
    tcn.org.permissions.v1alpha1.ListPermissionGroupsResponse:
      type: object
      properties:
        permission_groups:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.permissions.v1alpha1.PermissionGroup'
          title: permission_groups
          description: The permission groups.
        next_page_token:
          type: string
          title: next_page_token
          description: The next page token.
      title: ListPermissionGroupsResponse
      additionalProperties: false
      description: ListPermissionGroupsResponse is the response for the ListPermissionGroups
        method.
    tcn.org.permissions.v1alpha1.UpdatePermissionGroupRequest:
      type: object
      properties:
        permission_group:
          title: permission_group
          description: The permission group to update.
          $ref: '#/components/schemas/tcn.org.permissions.v1alpha1.PermissionGroup'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The update mask.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdatePermissionGroupRequest
      required:
      - permission_group
      additionalProperties: false
      description: UpdatePermissionGroupRequest is the request for the UpdatePermissionGroup
        method.
    tcn.org.preferences.v1alpha1.AdminClientPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name is the identifier of the admin client preferences
        use_reserved_carrier:
          type: boolean
          title: use_reserved_carrier
          description: Enable the use of reserved carriers.
        reserved_carriers:
          type: array
          items:
            type: string
          title: reserved_carriers
          description: List of reserved carriers.
        agent_screen_recording:
          type: boolean
          title: agent_screen_recording
          description: Whether agent screen recording is enabled.
        whitelist_domains:
          type: array
          items:
            type: string
          title: whitelist_domains
          description: Whitelisted domain names for the organization.
        whitelist_ips:
          type: array
          items:
            type: string
          title: whitelist_ips
          description: Whitelisted IPs for the organization.
        callbacks_service_id:
          type: string
          title: callbacks_service_id
          description: Scheduled callbacks service ID.
        allowed_countries:
          type: array
          items:
            type: string
          title: allowed_countries
          description: "List of allowed countries for the organization.\n This is
            currently the string version of the api.commons.Country enum."
        email_config:
          title: email_config
          description: Email configuration for the organization.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AdminClientPreferences.EmailConfig'
      title: AdminClientPreferences
      required:
      - use_reserved_carrier
      - reserved_carriers
      - agent_screen_recording
      - whitelist_domains
      - whitelist_ips
      - callbacks_service_id
      - allowed_countries
      - email_config
      additionalProperties: false
      description: "AdminClientPreferences represents the preferences for essential
        organization properties.\n This should only be used by account managers and
        customer support."
    tcn.org.preferences.v1alpha1.AdminClientPreferences.EmailConfig:
      type: object
      properties:
        id:
          type: string
          title: id
          description: Email sendgrid API key ID.
        key:
          type: string
          title: key
          description: Email sendgrid API key.
        name:
          type: string
          title: name
          description: Email sendgrid API key name.
      title: EmailConfig
      required:
      - id
      - key
      - name
      additionalProperties: false
      description: EmailConfig represents the email configuration for the organization.
    tcn.org.preferences.v1alpha1.AgentPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) agentPreferences identifier
        default_agent_dial_in:
          type: string
          title: default_agent_dial_in
          description: "(-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
            We need to do this because we use the phrase dial in. --)\n Default agent
            dial-in number"
        pbx_extension_length:
          type: integer
          title: pbx_extension_length
          format: int32
          description: PBX dial extension length, between 3 to 9 digits long.
        default_softphone_microphone_input_volume:
          type: integer
          title: default_softphone_microphone_input_volume
          format: int32
          description: Default agent softphone microphone input volume, 0-100%.
        default_softphone_speaker_output_volume:
          type: integer
          title: default_softphone_speaker_output_volume
          format: int32
          description: Default agent softphone speaker output volume, 0-100%.
        config_dial_in_numbers:
          type: array
          items:
            type: string
          title: config_dial_in_numbers
          description: "(-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
            We need to do this because we use the phrase dial in. --)\n List of agent
            dial-in numbers defined by regional skunk config."
        client_dial_in_numbers:
          type: array
          items:
            type: string
          title: client_dial_in_numbers
          description: "(-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
            We need to do this because we use the phrase dial in. --)\n List of customized
            client-defined dial-in numbers."
        manual_dial_caller_id_privacy:
          type: boolean
          title: manual_dial_caller_id_privacy
          description: Allows agent to use privacy headers on the manual dial caller
            ID.
        use_manual_dial_caller_id_privacy:
          type: boolean
          title: use_manual_dial_caller_id_privacy
          description: The default/initial setting for caller ID privacy.
        message_notifications_disabled:
          type: boolean
          title: message_notifications_disabled
          description: Whether or not to disable message notifications
      title: AgentPreferences
      required:
      - default_agent_dial_in
      - pbx_extension_length
      - default_softphone_microphone_input_volume
      - default_softphone_speaker_output_volume
      - config_dial_in_numbers
      - client_dial_in_numbers
      - manual_dial_caller_id_privacy
      - use_manual_dial_caller_id_privacy
      - message_notifications_disabled
      additionalProperties: false
      description: Preferences controlling direct agent properties
    tcn.org.preferences.v1alpha1.AgentGuiStage:
      type: string
      title: AgentGuiStage
      enum:
      - AGENT_GUI_STAGE_UNSPECIFIED
      - AGENT_GUI_STAGE_AGENT_INTERCOM
      - AGENT_GUI_STAGE_CALL_CONNECTING
      - AGENT_GUI_STAGE_INTERCOM_DESTINATION
      - AGENT_GUI_STAGE_INTERCOM_SOURCE
      - AGENT_GUI_STAGE_MANUAL_CALL
      - AGENT_GUI_STAGE_ON_CALL
      - AGENT_GUI_STAGE_PAUSED
      - AGENT_GUI_STAGE_PBX_CALL
      - AGENT_GUI_STAGE_PREVIEW_CALL
      - AGENT_GUI_STAGE_READY
      - AGENT_GUI_STAGE_TRANSFER_CALL
      - AGENT_GUI_STAGE_TRANSFER_LOST
      - AGENT_GUI_STAGE_WRAP_UP
      description: AgentGuiStage represents stage on the agent GUI.
    tcn.org.preferences.v1alpha1.AgentInfoSortBy:
      type: string
      title: AgentInfoSortBy
      enum:
      - AGENT_INFO_SORT_BY_UNSPECIFIED
      - AGENT_INFO_SORT_BY_NONE
      - AGENT_INFO_SORT_BY_AGENT_ID
      - AGENT_INFO_SORT_BY_AGENT_LAST_NAME
      - AGENT_INFO_SORT_BY_AGENT_STATUS
      - AGENT_INFO_SORT_BY_CALL_COUNT
      - AGENT_INFO_SORT_BY_SECONDS_SINCE_STATUS_CHANGE
      - AGENT_INFO_SORT_BY_HUNT_GROUP_NAME
      - AGENT_INFO_SORT_BY_HUNT_GROUP_SID
      - AGENT_INFO_SORT_BY_SESSION_LOGIN_TIME
      - AGENT_INFO_SORT_BY_MULTI_HOLD_COUNT
      - AGENT_INFO_SORT_BY_SIMPLE_HOLD_COUNT
      - AGENT_INFO_SORT_BY_TOTAL_HOLD_COUNT
      description: AgentInfoSortBy is an enum for the agent info dashboard order-by
        parameter.
    tcn.org.preferences.v1alpha1.AnsweringMachineDetection:
      type: string
      title: AnsweringMachineDetection
      enum:
      - ANSWERING_MACHINE_DETECTION_UNSPECIFIED
      - ANSWERING_MACHINE_DETECTION_OPTIMIZE_MACHINE_DETECTION
      - ANSWERING_MACHINE_DETECTION_OPTIMIZE_MACHINE_DETECTION_SLOW_LIVE
      - ANSWERING_MACHINE_DETECTION_OPTIMIZE_MACHINE_DELIVERY
      - ANSWERING_MACHINE_DETECTION_BALANCED_DETECTION_AND_DELIVERY
      description: Types of answering machine detections
    tcn.org.preferences.v1alpha1.BroadcastTemplateOrdering:
      type: string
      title: BroadcastTemplateOrdering
      enum:
      - BROADCAST_TEMPLATE_ORDERING_UNSPECIFIED
      - BROADCAST_TEMPLATE_ORDERING_BY_NAME_ASC
      - BROADCAST_TEMPLATE_ORDERING_BY_NAME_DESC
      - BROADCAST_TEMPLATE_ORDERING_BY_TEMPLATE_NUMBER_ASC
      - BROADCAST_TEMPLATE_ORDERING_BY_TEMPLATE_NUMBER_DESC
      - BROADCAST_TEMPLATE_ORDERING_BY_MODIFIED_DATE_ASC
      - BROADCAST_TEMPLATE_ORDERING_BY_MODIFIED_DATE_DESC
      description: Order of broadcast templates
    tcn.org.preferences.v1alpha1.DefaultDuplicateHandling:
      type: string
      title: DefaultDuplicateHandling
      enum:
      - DEFAULT_DUPLICATE_HANDLING_UNSPECIFIED
      - DEFAULT_DUPLICATE_HANDLING_KEEP_RECORD_AND_DISCARD_NUMBER
      - DEFAULT_DUPLICATE_HANDLING_DISCARD_RECORD
      - DEFAULT_DUPLICATE_HANDLING_ALLOW_DUPLICATES
      - DEFAULT_DUPLICATE_HANDLING_CREATE_DUPLICATES_LIST
      description: DefaultDuplicateHandling is what happens to duplicate phone numbers
    tcn.org.preferences.v1alpha1.DialOrderType:
      type: string
      title: DialOrderType
      enum:
      - DIAL_ORDER_TYPE_UNSPECIFIED
      - DIAL_ORDER_TYPE_FIRST
      - DIAL_ORDER_TYPE_NATURAL
      - DIAL_ORDER_TYPE_CUSTOM
      description: Dial order type
    tcn.org.preferences.v1alpha1.EvaluationInterval:
      type: string
      title: EvaluationInterval
      enum:
      - EVALUATION_INTERVAL_UNSPECIFIED
      - EVALUATION_INTERVAL_DAY
      - EVALUATION_INTERVAL_WEEK
      - EVALUATION_INTERVAL_MONTH
      description: EvaluationsInterval enumerates common time periods for evaluations.
    tcn.org.preferences.v1alpha1.FileNameSegmentType:
      type: string
      title: FileNameSegmentType
      enum:
      - FILE_NAME_SEGMENT_TYPE_UNSPECIFIED
      - FILE_NAME_SEGMENT_TYPE_BROADCAST_TYPE
      - FILE_NAME_SEGMENT_TYPE_CLIENT_ID
      - FILE_NAME_SEGMENT_TYPE_CUSTOM_TEXT
      - FILE_NAME_SEGMENT_TYPE_CURRENT_DATE
      - FILE_NAME_SEGMENT_TYPE_GROUP_ID
      - FILE_NAME_SEGMENT_TYPE_RECORDING_TYPE
      - FILE_NAME_SEGMENT_TYPE_CALL_ID
      - FILE_NAME_SEGMENT_TYPE_CALLER_ID
      - FILE_NAME_SEGMENT_TYPE_CAMPAIGN_ID
      - FILE_NAME_SEGMENT_TYPE_CALL_TYPE
      - FILE_NAME_SEGMENT_TYPE_CALL_TYPE_ABBREVIATED
      - FILE_NAME_SEGMENT_TYPE_CALL_DIALED_NUMBER
      - FILE_NAME_SEGMENT_TYPE_TTS_FIELD
      - FILE_NAME_SEGMENT_TYPE_START_DATE
      - FILE_NAME_SEGMENT_TYPE_END_DATE
      description: File name Segment type to assign to the recording file name.
    tcn.org.preferences.v1alpha1.QueueInfoSortBy:
      type: string
      title: QueueInfoSortBy
      enum:
      - QUEUE_INFO_SORT_BY_UNSPECIFIED
      - QUEUE_INFO_SORT_BY_NONE
      - QUEUE_INFO_SORT_BY_AVERAGE_LENGTH
      - QUEUE_INFO_SORT_BY_CALL_COUNT
      - QUEUE_INFO_SORT_BY_CALL_SKILLS
      - QUEUE_INFO_SORT_BY_CALL_TYPE
      - QUEUE_INFO_SORT_BY_MAXIMUM_LENGTH
      - QUEUE_INFO_SORT_BY_QUEUED_NOTIFICATION_TYPE
      description: QueueInfoSortBy represents the sort-by values for the queue info
        table.
    tcn.org.preferences.v1alpha1.RecordingFileType:
      type: string
      title: RecordingFileType
      enum:
      - RECORDING_FILE_TYPE_UNSPECIFIED
      - RECORDING_FILE_TYPE_WAV
      - RECORDING_FILE_TYPE_MP3
      description: File type to export recording as.
    tcn.org.preferences.v1alpha1.RedactionKind:
      type: string
      title: RedactionKind
      enum:
      - REDACTION_KIND_UNSPECIFIED
      - REDACTION_KIND_CARDINAL
      - REDACTION_KIND_ORDINAL
      - REDACTION_KIND_ANY
      description: RedactionKind is the kind of redaction to be applied.
    tcn.org.preferences.v1alpha1.RedactionType:
      type: string
      title: RedactionType
      enum:
      - REDACTION_TYPE_UNSPECIFIED
      - REDACTION_TYPE_RANGE
      - REDACTION_TYPE_MAXIMUM
      - REDACTION_TYPE_MINIMUM
      - REDACTION_TYPE_EQUAL
      description: RedactionKind is the type of redaction to be applied.
    tcn.org.preferences.v1alpha1.ScheduleByTimeZoneScope:
      type: string
      title: ScheduleByTimeZoneScope
      enum:
      - SCHEDULE_BY_TIME_ZONE_SCOPE_UNSPECIFIED
      - SCHEDULE_BY_TIME_ZONE_SCOPE_BOTH
      - SCHEDULE_BY_TIME_ZONE_SCOPE_STOP_DATE
      - SCHEDULE_BY_TIME_ZONE_SCOPE_START_DATE
      description: Enum for which time zone scope is being scheduled
    tcn.org.preferences.v1alpha1.StandardImportFormat:
      type: string
      title: StandardImportFormat
      enum:
      - STANDARD_IMPORT_FORMAT_UNSPECIFIED
      - STANDARD_IMPORT_FORMAT_TAB_DELIMITED
      - STANDARD_IMPORT_FORMAT_EXCEL_COMMA_SEPARATED
      - STANDARD_IMPORT_FORMAT_COMMA_SEPARATED
      description: StandardImportFormat
    tcn.org.preferences.v1alpha1.StandardReportFilter:
      type: string
      title: StandardReportFilter
      enum:
      - STANDARD_REPORT_FILTER_UNSPECIFIED
      - STANDARD_REPORT_FILTER_BY_NO_PREFERENCE
      - STANDARD_REPORT_FILTER_BY_ANSWERED_CALLS
      - STANDARD_REPORT_FILTER_BY_ANSWERED_HANGUPS
      - STANDARD_REPORT_FILTER_BY_ANSWERED_LINKCALL
      - STANDARD_REPORT_FILTER_BY_ANY_KEY_PRESSED
      - STANDARD_REPORT_FILTER_BY_BUSY
      - STANDARD_REPORT_FILTER_BY_CANCELED_CALLS
      - STANDARD_REPORT_FILTER_BY_CONFIRM_KEYS_3_THROUGH_6
      - STANDARD_REPORT_FILTER_BY_CONNECTED_CALLS
      - STANDARD_REPORT_FILTER_BY_DNCL_CANCELED
      - STANDARD_REPORT_FILTER_BY_FAILED_CALLS
      - STANDARD_REPORT_FILTER_BY_INVALID_CALLS
      - STANDARD_REPORT_FILTER_BY_LINKCALL_ABANDONED
      - STANDARD_REPORT_FILTER_BY_MACHINE_CALLS
      - STANDARD_REPORT_FILTER_BY_MACHINE_DELIVERY
      - STANDARD_REPORT_FILTER_BY_MACHINE_HANGUP
      - STANDARD_REPORT_FILTER_BY_MACHINE_AND_ANY_KEY
      - STANDARD_REPORT_FILTER_BY_NO_ANSWER
      - STANDARD_REPORT_FILTER_BY_NO_KEYS_PRESSED
      - STANDARD_REPORT_FILTER_BY_NOT_CANCELED_CALLS
      - STANDARD_REPORT_FILTER_BY_UNCONNECTED_CALLS
      - STANDARD_REPORT_FILTER_BY_UNCONNECTED_EXCLUDE_INVALID
      - STANDARD_REPORT_FILTER_BY_0_KEY
      - STANDARD_REPORT_FILTER_BY_1_KEY
      - STANDARD_REPORT_FILTER_BY_2_KEY
      - STANDARD_REPORT_FILTER_BY_3_KEY
      - STANDARD_REPORT_FILTER_BY_4_KEY
      - STANDARD_REPORT_FILTER_BY_5_KEY
      - STANDARD_REPORT_FILTER_BY_6_KEY
      - STANDARD_REPORT_FILTER_BY_7_KEY
      - STANDARD_REPORT_FILTER_BY_8_KEY
      - STANDARD_REPORT_FILTER_BY_9_KEY
      - STANDARD_REPORT_FILTER_BY_STAR_KEY
      - STANDARD_REPORT_FILTER_BY_POUND_KEY
      - STANDARD_REPORT_FILTER_BY_MACHINE_HANGUP_AND_UNCONNECTED
      - STANDARD_REPORT_FILTER_BY_EXCLUDING_CANCELED_AND_INVALID
      description: The choices for standard report filters
    tcn.org.preferences.v1alpha1.AgentStatusSinceStyle:
      type: object
      properties:
        bg_red:
          type: string
          title: bg_red
          description: The background color of the red component.
        bg_green:
          type: string
          title: bg_green
          description: The background color of the green component.
        bg_blue:
          type: string
          title: bg_blue
          description: The background color of the blue component.
        fg_red:
          type: string
          title: fg_red
          description: The foreground (text) color of the red component.
        fg_green:
          type: string
          title: fg_green
          description: The foreground (text) color of the green component.
        fg_blue:
          type: string
          title: fg_blue
          description: The foreground (text) color of the blue component.
        agent_gui_stage:
          title: agent_gui_stage
          description: "The stage of the agent GUI.\n (Previously named \"agent_gui_status\"
            - changed to follow the Google AIP standard)"
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentGuiStage'
        duration:
          type:
          - integer
          - string
          title: duration
          format: int64
          description: The duration in status in seconds.
      title: AgentStatusSinceStyle
      required:
      - bg_red
      - bg_green
      - bg_blue
      - fg_red
      - fg_green
      - fg_blue
      - agent_gui_stage
      - duration
      additionalProperties: false
      description: AgentStatusSinceStyle represents the style of the agent status
        since.
    tcn.org.preferences.v1alpha1.BargeInFiltering:
      type: object
      properties:
        hunt_group:
          title: hunt_group
          description: Hunt group filtering parameters.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BargeInFiltering.HuntGroup'
        agent_status:
          title: agent_status
          description: Agent status filtering parameters.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BargeInFiltering.AgentStatus'
      title: BargeInFiltering
      required:
      - hunt_group
      - agent_status
      additionalProperties: false
      description: Barge-in filtering.
    tcn.org.preferences.v1alpha1.BargeInFiltering.AgentStatus:
      type: object
      properties:
        any:
          type: boolean
          title: any
          description: Any of the below statuses.
        waiting:
          type: boolean
          title: waiting
          description: Waiting status.
        on_call:
          type: boolean
          title: on_call
          description: On call status.
        wrap_up:
          type: boolean
          title: wrap_up
          description: Wrap up status .
        paused:
          type: boolean
          title: paused
          description: Paused status.
        transfer:
          type: boolean
          title: transfer
          description: Transfer status.
        preview:
          type: boolean
          title: preview
          description: Preview status.
        manual:
          type: boolean
          title: manual
          description: Manual status.
        pbx:
          type: boolean
          title: pbx
          description: PBX status.
        intercom:
          type: boolean
          title: intercom
          description: Intercom status .
      title: AgentStatus
      required:
      - any
      - waiting
      - on_call
      - wrap_up
      - paused
      - transfer
      - preview
      - manual
      - pbx
      - intercom
      additionalProperties: false
      description: AgentStatus is a message for agent status filtering parameters.
    tcn.org.preferences.v1alpha1.BargeInFiltering.HuntGroup:
      type: object
      properties:
        any:
          type: boolean
          title: any
          description: Choose any hunt group to filter.
        hunt_group_sid:
          type:
          - integer
          - string
          title: hunt_group_sid
          format: int64
          description: Specific a hunt group SID to filter.
      title: HuntGroup
      required:
      - any
      - hunt_group_sid
      additionalProperties: false
      description: HuntGroup is a message for hunt group filtering parameters.
    tcn.org.preferences.v1alpha1.BroadcastTime:
      type: object
      properties:
        hours:
          type: integer
          title: hours
          format: int32
          description: Hour of the day (0-23).
        minutes:
          type: integer
          title: minutes
          format: int32
          description: Minute of the hour (0-59).
        time_zone:
          type: string
          title: time_zone
          description: Time zone string representing api commons time zone.
      title: BroadcastTime
      required:
      - hours
      - minutes
      - time_zone
      additionalProperties: false
      description: Broadcast start/stop time properties.
    tcn.org.preferences.v1alpha1.ContactAreaCode:
      type: object
      oneOf:
      - properties:
          contact_field_description:
            title: contact_field_description
            description: (OPTIONAL) Contact field description with sid and name is
              used to access a contact field description resource.
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactFieldDescription'
        title: contact_field_description
        required:
        - contact_field_description
      - properties:
          custom:
            type: integer
            title: custom
            format: int32
            description: (OPTIONAL) Client-defined area code number.
        title: custom
        required:
        - custom
      title: ContactAreaCode
      additionalProperties: false
      description: Contact area code type.
    tcn.org.preferences.v1alpha1.ContactFieldDescription:
      type: object
      properties:
        contact_field_description_sid:
          type:
          - integer
          - string
          title: contact_field_description_sid
          format: int64
          description: Contact field description sid.
        contact_field_description_display_name:
          type: string
          title: contact_field_description_display_name
          description: (OPTIONAL) Contact field name.
      title: ContactFieldDescription
      required:
      - contact_field_description_sid
      additionalProperties: false
      description: Contact field description.
    tcn.org.preferences.v1alpha1.CustomDialOrder:
      type: object
      properties:
        dial_order_fields:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactFieldDescription'
          title: dial_order_fields
          description: One or more contact field description sids.
      title: CustomDialOrder
      required:
      - dial_order_fields
      additionalProperties: false
      description: "Custom dial order fields holds one or more contact field descriptions
        to\n indicate which fields in a contact record, and the order."
    tcn.org.preferences.v1alpha1.CustomImportFormat:
      type: object
      properties:
        custom_import_format_sid:
          type:
          - integer
          - string
          title: custom_import_format_sid
          format: int64
          description: Custom import format sid used to identify the contact import
            format.
        custom_import_format_display_name:
          type: string
          title: custom_import_format_display_name
          description: (OPTIONAL) Custom import format name is a string value with
            the name of the contact import format.
      title: CustomImportFormat
      required:
      - custom_import_format_sid
      additionalProperties: false
      description: CustomImportFormat type contains contact import format properties.
    tcn.org.preferences.v1alpha1.DialOrder:
      type: object
      oneOf:
      - properties:
          custom:
            title: custom
            description: "(OPTIONAL) Defines a \"Custom Order\" using one or more
              contact field\n description sids."
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.CustomDialOrder'
        title: custom
        required:
        - custom
      - properties:
          standard:
            title: standard
            description: "(OPTIONAL) Standard order enum, (CUSTOM_DIAL_ORDER should
              not be set here but\n indicated by setting a CustomDialOrder below)."
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DialOrderType'
        title: standard
        required:
        - standard
      title: DialOrder
      additionalProperties: false
      description: "Dial order holds either a type enum, or one or more contact field\n
        description fields for custom order."
    tcn.org.preferences.v1alpha1.FileNameSegment:
      type: object
      properties:
        segment_type:
          title: segment_type
          description: Segment type
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegmentType'
        format_pattern:
          type: string
          title: format_pattern
          description: Format pattern (if applicable)
      title: FileNameSegment
      required:
      - segment_type
      - format_pattern
      additionalProperties: false
      description: File name segment
    tcn.org.preferences.v1alpha1.ImportFormat:
      type: object
      oneOf:
      - properties:
          custom_import_format:
            title: custom_import_format
            description: (OPTIONAL) Custom import format sid is used to access a custom
              import format resource.
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.CustomImportFormat'
        title: custom_import_format
        required:
        - custom_import_format
      - properties:
          standard:
            title: standard
            description: (OPTIONAL) Import format enum choice.
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.StandardImportFormat'
        title: standard
        required:
        - standard
      title: ImportFormat
      additionalProperties: false
      description: Contact import template type.
    tcn.org.preferences.v1alpha1.IncludedCallTypes:
      type: object
      properties:
        outbound:
          type: boolean
          title: outbound
          description: Outbound call type.
        inbound:
          type: boolean
          title: inbound
          description: Inbound call type.
        manual_dial:
          type: boolean
          title: manual_dial
          description: Manual-dial call type.
        preview_dial:
          type: boolean
          title: preview_dial
          description: Preview-dial call type.
      title: IncludedCallTypes
      required:
      - outbound
      - inbound
      - manual_dial
      - preview_dial
      additionalProperties: false
      description: IncludedCallTypes represents the call types that are enabled in
        the agents dashboard.
    tcn.org.preferences.v1alpha1.RecordingsFileNamingConvention:
      type: object
      properties:
        inbound:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          title: inbound
          description: Inbound calls
        manual:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          title: manual
          description: Manual dial calls
        outbound:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          title: outbound
          description: Outbound calls
        preview:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          title: preview
          description: Preview dial calls
      title: RecordingsFileNamingConvention
      required:
      - inbound
      - manual
      - outbound
      - preview
      additionalProperties: false
      description: Call recordings file name convention
    tcn.org.preferences.v1alpha1.RecordingsZipFileNamingConvention:
      type: object
      properties:
        inbound:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          title: inbound
          description: Inbound calls
        manual:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          title: manual
          description: Manual dial calls
        outbound:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          title: outbound
          description: Outbound calls
        combined:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.FileNameSegment'
          title: combined
          description: Combined call types (inbound, manual, and outbound)
      title: RecordingsZipFileNamingConvention
      required:
      - inbound
      - manual
      - outbound
      - combined
      additionalProperties: false
      description: Call recordings file name convention (for *.zip)
    tcn.org.preferences.v1alpha1.RedactRule:
      type: object
      properties:
        kind:
          title: kind
          description: RedactionKind is the kind of redaction to be applied.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RedactionKind'
        type:
          title: type
          description: RedactionType is the type of redaction to be applied.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RedactionType'
        min_consecutive:
          type: integer
          title: min_consecutive
          format: int32
          description: "When value is non zero only numbers composed of at least\n
            `min_consecutive` digits will be redacted. For example, when the\n transcript
            contains the number `one two three four five six`\n redaction will not
            occur when `min_consecutive` is greater than 6.\n This was documented
            as OPTIONAL in the legacy code."
        max_consecutive:
          type: integer
          title: max_consecutive
          format: int32
          description: "(OPTIONAL) Optional. When value is non zero only numbers composed
            of at most\n `max_consecutive` digits will be redacted. For example, when
            the\n transcript contains the number `one two three four five six`\n redaction
            will not occur when `max_consecutive` is less than 6.\n This only applies
            when `REDACTION_TYPE_RANGE` is selected."
        slop:
          type: integer
          title: slop
          format: int32
          description: "slop is the number of extra words that can be in between digits
            and\n still count as a number. For example: slop of 2 with min_consecutive\n
            3 would allow \"one uh two and three\" to count as a number.\n Slop value
            must be between 0 and 5 inclusive."
      title: RedactRule
      required:
      - kind
      - type
      - min_consecutive
      - slop
      additionalProperties: false
      description: RedactRule is the redaction rule to be applied.
    tcn.org.preferences.v1alpha1.ReportFilter:
      type: object
      oneOf:
      - properties:
          custom_report_filter_sid:
            type:
            - integer
            - string
            title: custom_report_filter_sid
            format: int64
            description: Custom report filter xml property SID.
        title: custom_report_filter_sid
        required:
        - custom_report_filter_sid
      - properties:
          standard:
            title: standard
            description: Standard report filter enum choice.
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.StandardReportFilter'
        title: standard
        required:
        - standard
      title: ReportFilter
      additionalProperties: false
      description: Report filter properties.
    tcn.org.preferences.v1alpha1.ScheduleRuleField:
      type: object
      properties:
        schedule_rule_sid:
          type:
          - integer
          - string
          title: schedule_rule_sid
          format: int64
          description: The sid of the schedule rule.
        schedule_rule_display_name:
          type: string
          title: schedule_rule_display_name
          description: The display name of the schedule rule.
      title: ScheduleRuleField
      required:
      - schedule_rule_sid
      - schedule_rule_display_name
      additionalProperties: false
      description: Compliance schedule rule field properties.
    tcn.org.preferences.v1alpha1.AgentQuickViewPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name is the identifier of the agentQuickView preferences
        agent_intercom_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: agent_intercom_styles
          description: The list of styles for the agent intercom status.
        call_connecting_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: call_connecting_styles
          description: The list of styles for the call connecting status.
        intercom_destination_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: intercom_destination_styles
          description: The list of styles for the intercom destination status.
        intercom_source_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: intercom_source_styles
          description: The list of styles for the intercom source status.
        manual_call_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: manual_call_styles
          description: The list of styles for the manual call status.
        on_call_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: on_call_styles
          description: "The list of styles for the in conference status.\n (Previously
            named \"in_conference_styles\" - changed to match the UI and follow the
            Google AIP standard)"
        paused_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: paused_styles
          description: The list of styles for the paused status.
        pbx_call_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: pbx_call_styles
          description: The list of styles for the pbx call status.
        preview_call_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: preview_call_styles
          description: The list of styles for the preview call status.
        ready_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: ready_styles
          description: The list of styles for the ready status.
        transfer_call_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: transfer_call_styles
          description: The list of styles for the transfer call status.
        transfer_lost_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: transfer_lost_styles
          description: The list of styles for the transfer lost status.
        wrap_up_styles:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentStatusSinceStyle'
          title: wrap_up_styles
          description: The list of styles for the wrap up status.
      title: AgentQuickViewPreferences
      required:
      - agent_intercom_styles
      - call_connecting_styles
      - intercom_destination_styles
      - intercom_source_styles
      - manual_call_styles
      - on_call_styles
      - paused_styles
      - pbx_call_styles
      - preview_call_styles
      - ready_styles
      - transfer_call_styles
      - transfer_lost_styles
      - wrap_up_styles
      additionalProperties: false
      description: AgentQuickViewPreferences represents the preferences for agentQuickView
        configurations.
    tcn.org.preferences.v1alpha1.AuthenticationPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) authenticationPreferences identifier
        authorization_via_ip:
          type: boolean
          title: authorization_via_ip
          description: Use IP based authorization
        allowed_ips:
          type: array
          items:
            type: string
          title: allowed_ips
          description: List of whitelisted IPs
        agent_api_key:
          type: string
          title: agent_api_key
          description: Agent API key
        enable_mfa:
          type: boolean
          title: enable_mfa
          description: Whether or not two factor authentication is enabled
        block_unverified_users:
          type: boolean
          title: block_unverified_users
          description: "Whether or not to block login from users without a verified
            email\n This option is only used if two factor authentication is enabled"
        email_mfa_settings:
          title: email_mfa_settings
          description: Contains the settings needed to set up email mfa for an organization
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AuthenticationPreferences.EmailMfaSettings'
        duo_mfa_settings:
          title: duo_mfa_settings
          description: "Contains the settings needed to set up a duo mfa client for
            an organization\n The duo client secret is not included here - it only
            exists on the update api"
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AuthenticationPreferences.DuoMfaSettings'
        allow_force_password_reset_interval:
          type: boolean
          title: allow_force_password_reset_interval
          description: Org enables the ability to set the password reset interval
        password_reset_day_interval:
          type: integer
          title: password_reset_day_interval
          format: int32
          description: An interval in the form of days for users in the org to reset
            passwords
        user_authorization_via_ip:
          type: boolean
          title: user_authorization_via_ip
          description: Use IP based authorization per user
        force_sso_provider:
          type: boolean
          title: force_sso_provider
          description: Restrict sso users from logging in via username and password
        enable_totp:
          type: boolean
          title: enable_totp
          description: Whether or not to enable TOTP for 2FA
      title: AuthenticationPreferences
      required:
      - authorization_via_ip
      - allowed_ips
      - agent_api_key
      - enable_mfa
      - block_unverified_users
      - email_mfa_settings
      - duo_mfa_settings
      - allow_force_password_reset_interval
      - password_reset_day_interval
      - user_authorization_via_ip
      - force_sso_provider
      - enable_totp
      additionalProperties: false
      description: Preferences for controlling the organization's authentication properties
    tcn.org.preferences.v1alpha1.AuthenticationPreferences.DuoMfaSettings:
      type: object
      properties:
        duo_client_id:
          type: string
          title: duo_client_id
          description: Duo Client Id
        duo_api_host:
          type: string
          title: duo_api_host
          description: Duo API Host
        enabled:
          type: boolean
          title: enabled
          description: Enabled boolean
        duo_client_secret:
          type: string
          title: duo_client_secret
          description: "The duo client secret used exclusively for MFA during update
            api requests.\n This field must not be populated in other contexts\n (--
            api-linter: core::0203::field-behavior-required=disabled\n     aip.dev/not-precedent:
            We need to do this because reasons it needs to be input only and we don't
            want to have a one of object. --)"
          writeOnly: true
      title: DuoMfaSettings
      required:
      - duo_client_id
      - duo_api_host
      - enabled
      additionalProperties: false
      description: "A message containing the settings needed to set up a duo mfa client
        for an organization\n The duo client secret is not included here - it only
        exists on the update api"
    tcn.org.preferences.v1alpha1.AuthenticationPreferences.EmailMfaSettings:
      type: object
      properties:
        enabled:
          type: boolean
          title: enabled
          description: Enabled Boolean
      title: EmailMfaSettings
      required:
      - enabled
      additionalProperties: false
      description: A message containing the settings needed for email mfa for an organization
    tcn.org.preferences.v1alpha1.BroadcastPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name is the identifier of the webhook preferences
        display_list_penetration_strategy:
          type: boolean
          title: display_list_penetration_strategy
          description: "Whether the 'Dial List Penetration Strategy' property in templates
            and\n broadcast scheduling is displayed."
        dial_list_penetration_strategy:
          type: boolean
          title: dial_list_penetration_strategy
          description: "List penetration strategy to give priority to dialing each
            number in a\n single record before dialing from other records; false for
            depth first,\n true for breadth first search."
        display_follow_the_sun:
          type: boolean
          title: display_follow_the_sun
          description: Display the 'Follow the Sun' property in templates and broadcasts.
        follow_the_sun:
          type: boolean
          title: follow_the_sun
          description: Whether broadcasts follow the sun (prioritized east to west).
        sequence_terminator_override:
          type: boolean
          title: sequence_terminator_override
          description: "Whether to hide the terminator select menu in the standard
            template\n wizard and include only 'Connected, Live, and Machine' options
            in the\n layered template wizard."
        broadcast_template_ordering:
          title: broadcast_template_ordering
          description: Broadcast scheduling template ordering default value.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BroadcastTemplateOrdering'
        start_time_enabled:
          type: boolean
          title: start_time_enabled
          description: Whether the default broadcast start time is used.
        start_time_default:
          title: start_time_default
          description: Default broadcast start time.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BroadcastTime'
        stop_time_enabled:
          type: boolean
          title: stop_time_enabled
          description: Whether the default broadcast stop time is used.
        stop_time_default:
          title: stop_time_default
          description: Default broadcast stop time.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BroadcastTime'
      title: BroadcastPreferences
      required:
      - display_list_penetration_strategy
      - dial_list_penetration_strategy
      - display_follow_the_sun
      - follow_the_sun
      - sequence_terminator_override
      - broadcast_template_ordering
      - start_time_enabled
      - start_time_default
      - stop_time_enabled
      - stop_time_default
      additionalProperties: false
      description: BroadcastPreferences represents the preferences for broadcast configurations.
    tcn.org.preferences.v1alpha1.BusinessPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name is the identifier of the webhook preferences
        weeks_of_data:
          type: integer
          title: weeks_of_data
          format: int32
          description: "(-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
            We need to do this because the wording of the field. --)\n Number of weeks
            of past data that are accessible."
        time_zone:
          type: string
          title: time_zone
          description: Default time zone for business intelligence, currently it represents
            the ana time zone.
        multi_client_access:
          type: boolean
          title: multi_client_access
          description: Whether to allow multi-client access.
        custom_visualizations:
          type: boolean
          title: custom_visualizations
          description: Enable/disable of custom visualizations in BI.
        time_filter:
          type: string
          title: time_filter
          description: Time filter for custom dashboard and visualizations.
      title: BusinessPreferences
      required:
      - weeks_of_data
      - time_zone
      - multi_client_access
      - custom_visualizations
      - time_filter
      additionalProperties: false
      description: BusinessPreferences represents the preferences for business configurations.
    tcn.org.preferences.v1alpha1.CompliancePreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) CompliancePreferences identifier
        display_cell_phone_scrub:
          type: boolean
          title: display_cell_phone_scrub
          description: "Whether cell phone scrub from campaign view.\n (Show Cell
            Phone Scrub)"
        cell_phone_scrub:
          type: boolean
          title: cell_phone_scrub
          description: "Enable/disable to the ability scrub cell phone numbers.\n
            (Cell Phone Scrub Default)"
        display_off_hours_calls:
          type: boolean
          title: display_off_hours_calls
          description: "Whether after-hours calls are displayed in campaigns.\n (Show
            Time Zone Restriction - previously named \"display_after_hours_calls\")"
        off_hours_calls:
          type: boolean
          title: off_hours_calls
          description: "Enable/disable after-hours calls in campaigns.\n (Default
            Time Zone Restriction - previously named \"after_hours_calls\")"
        display_natural_compliance:
          type: boolean
          title: display_natural_compliance
          description: "Whether the default natural compliance rule set is displayed.\n
            (Display Natural Language Compliance)"
        use_natural_compliance:
          type: boolean
          title: use_natural_compliance
          description: "Enable using the default natural compliance rule set.\n (Use
            Natural Language Compliance)"
        default_compliance_rule_set_id:
          type: string
          title: default_compliance_rule_set_id
          description: "The id of the compliance rule set to use by default (UUID
            of set).\n (Default Compliance Rule Set)"
        display_schedule_rules:
          type: boolean
          title: display_schedule_rules
          description: "Whether schedule rules are displayed in campaigns.\n (Show
            Schedule Rules)"
        use_schedule_rules:
          type: boolean
          title: use_schedule_rules
          description: "Enable the use of the default schedule rules.\n (Default Use
            Schedule Rules)"
        default_schedule_rule:
          title: default_schedule_rule
          description: "Schedule rule to use by default.\n (Default Schedule Rule)"
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ScheduleRuleField'
        do_zip_code_scrub:
          type: boolean
          title: do_zip_code_scrub
          description: "Whether ZIP code scrubbing is enabled.\n (Zip/Postal Code
            Scrub)"
        zip_code_scrub:
          title: zip_code_scrub
          description: "Field for ZIP/postal code scrubbing to use.\n (Zip/Postal
            Code Field)"
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactFieldDescription'
        default_email_compliance_list_id:
          type: string
          title: default_email_compliance_list_id
          description: "The id of th default email compliance list (Name of the scrub
            list).\n (Default Email Compliance List)"
        default_sms_compliance_list_id:
          type: string
          title: default_sms_compliance_list_id
          description: "The id of th default sms compliance list (Name of the scrub
            list).\n (Default SMS Compliance List)"
      title: CompliancePreferences
      required:
      - display_cell_phone_scrub
      - cell_phone_scrub
      - display_off_hours_calls
      - off_hours_calls
      - display_natural_compliance
      - use_natural_compliance
      - default_compliance_rule_set_id
      - display_schedule_rules
      - use_schedule_rules
      - default_schedule_rule
      - do_zip_code_scrub
      - zip_code_scrub
      - default_email_compliance_list_id
      - default_sms_compliance_list_id
      additionalProperties: false
      description: CompliancePreferences is an object containing all fields relating
        to an Org's Compliance preferences.
    tcn.org.preferences.v1alpha1.ContactPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) ContactPreferences identifier
        default_contact_import_format:
          title: default_contact_import_format
          description: Default import format, either custom or standardized.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ImportFormat'
        use_contact_import_format:
          type: boolean
          title: use_contact_import_format
          description: Whether the selected contact import format preference is used.
        default_contact_area_code:
          title: default_contact_area_code
          description: Default area code, either custom or predefined field.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactAreaCode'
        use_contact_area_code:
          type: boolean
          title: use_contact_area_code
          description: Whether the contact area code is enabled.
        discard_record_default_absent_numbers_handling:
          type: boolean
          title: discard_record_default_absent_numbers_handling
          description: Default absent numbers handling; false to keep (default) or
            true to discard.
        default_contacts_import_randomization:
          type: boolean
          title: default_contacts_import_randomization
          description: Whether contacts import randomization is enabled.
        default_email_column:
          title: default_email_column
          description: The contact field to use as the default in emails.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactFieldDescription'
        default_duplicate_handling:
          title: default_duplicate_handling
          description: How duplicate contact numbers are handled by default.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DefaultDuplicateHandling'
      title: ContactPreferences
      required:
      - default_contact_import_format
      - use_contact_import_format
      - default_contact_area_code
      - use_contact_area_code
      - discard_record_default_absent_numbers_handling
      - default_contacts_import_randomization
      - default_email_column
      - default_duplicate_handling
      additionalProperties: false
      description: ContactPreferences is an object containing all fields relating
        to an Org's Contact preferences
    tcn.org.preferences.v1alpha1.DashboardGeneralPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name is the identifier of the dashboard preferences.
        default_info_view:
          type: boolean
          title: default_info_view
          description: Default agent info view; false for icon display, true for table
            view.
        default_table_inclusion:
          type: boolean
          title: default_table_inclusion
          description: Default agent inclusion, true to include all agents.
        default_info_grouping:
          type: boolean
          title: default_info_grouping
          description: Default agent grouping, true to group by hunt groups.
        default_small_icon:
          type: boolean
          title: default_small_icon
          description: Default agent icon size, false for large icons.
        default_descending_sort:
          type: boolean
          title: default_descending_sort
          description: Default agent sort direction, false to sort by ascending.
        table_template_sid:
          type:
          - integer
          - string
          title: table_template_sid
          format: int64
          description: SID for the agent dashboard table template.
        default_info_sort_by_value:
          title: default_info_sort_by_value
          description: "Agent dashboard order-by parameter.\n (-- api-linter: core::0140::prepositions=disabled\n
            \    aip.dev/not-precedent: We need to do this because we use the phrase
            sort by. --)"
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentInfoSortBy'
        default_call_types:
          title: default_call_types
          description: Which call types are enabled in the agents dashboard.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.IncludedCallTypes'
        default_barge_in_filtering:
          title: default_barge_in_filtering
          description: "Controls hunt-group and agent barge-in status parameters.\n
            (-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
            We need to do this because we use the phrase barge-in. --)"
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BargeInFiltering'
      title: DashboardGeneralPreferences
      required:
      - default_info_view
      - default_table_inclusion
      - default_info_grouping
      - default_small_icon
      - default_descending_sort
      - table_template_sid
      - default_info_sort_by_value
      - default_call_types
      - default_barge_in_filtering
      additionalProperties: false
      description: DashboardGeneralPreferences represents the preferences for agent
        general dashboard controls.
    tcn.org.preferences.v1alpha1.DashboardQueuePreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name is the identifier of the dashboard preferences.
        default_info_view:
          type: boolean
          title: default_info_view
          description: Default queue/hold table view; false for icon view, true for
            table view.
        default_info_grouping:
          type: boolean
          title: default_info_grouping
          description: Default queue/hold table grouping; false for no grouping, true
            for group by queue type.
        default_small_icon:
          type: boolean
          title: default_small_icon
          description: Default table icon size; true for small, false for large.
        default_descending_sort:
          type: boolean
          title: default_descending_sort
          description: Default table sort direction; false for descending, true for
            ascending.
        default_agent_skills_filter:
          type:
          - integer
          - string
          title: default_agent_skills_filter
          format: int64
          description: "Default skills filter; holds a regional sid pointing to the
            filter in\n the xml_client_property table."
        default_info_table_template:
          type:
          - integer
          - string
          title: default_info_table_template
          format: int64
          description: "Default table template. holds a regional sid pointing to the
            filter in\n the xml_client_property table."
        default_info_sort_by_value:
          title: default_info_sort_by_value
          description: "Default queue/hold info sort-by value.\n (-- api-linter: core::0140::prepositions=disabled\n
            \    aip.dev/not-precedent: We need to do this because we use the phrase
            sort by. --)"
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.QueueInfoSortBy'
      title: DashboardQueuePreferences
      required:
      - default_info_view
      - default_info_grouping
      - default_small_icon
      - default_descending_sort
      - default_agent_skills_filter
      - default_info_table_template
      - default_info_sort_by_value
      additionalProperties: false
      description: DashboardQueuePreferences represents the preferences for agent
        queue dashboard controls.
    tcn.org.preferences.v1alpha1.EmailSmsPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) EmailSmsPreferences identifier
        use_custom_links:
          type: boolean
          title: use_custom_links
          description: Default Queue/Hold table view.  'false' for icon view, 'true'
            for table view.
        client_acknowledgement:
          type: boolean
          title: client_acknowledgement
          description: Default Queue/Hold table grouping. 'false' for no grouping,
            'true' for group by queue type.
        email_from_addresses:
          type: array
          items:
            type: string
          title: email_from_addresses
          description: "(-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
            We need to do this because from is a keyword but is the best word to describe
            the type of email. --)\n Choices of emails returned from sending a broadcast"
      title: EmailSmsPreferences
      required:
      - use_custom_links
      - client_acknowledgement
      - email_from_addresses
      additionalProperties: false
      description: EmailSmsPreferences is an object for get response and update request
    tcn.org.preferences.v1alpha1.EndOfDayPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name is the identifier of the webhook preferences
        eod_monday:
          type: integer
          title: eod_monday
          format: int32
          description: Delivery time for reports on Monday.
        eod_tuesday:
          type: integer
          title: eod_tuesday
          format: int32
          description: Delivery time for reports on Tuesday.
        eod_wednesday:
          type: integer
          title: eod_wednesday
          format: int32
          description: Delivery time for reports on Wednesday.
        eod_thursday:
          type: integer
          title: eod_thursday
          format: int32
          description: Delivery time for reports on Thursday.
        eod_friday:
          type: integer
          title: eod_friday
          format: int32
          description: Delivery time for reports on Friday.
        eod_saturday:
          type: integer
          title: eod_saturday
          format: int32
          description: Delivery time for reports on Saturday.
        eod_sunday:
          type: integer
          title: eod_sunday
          format: int32
          description: Delivery time for reports on Sunday.
      title: EndOfDayPreferences
      required:
      - eod_monday
      - eod_tuesday
      - eod_wednesday
      - eod_thursday
      - eod_friday
      - eod_saturday
      - eod_sunday
      additionalProperties: false
      description: EndOfDayPreferences is for automated report jobs end-of-day delivery
        times.
    tcn.type.OperatorLanguageDirection:
      type: string
      title: OperatorLanguageDirection
      enum:
      - OPERATOR_LANGUAGE_DIRECTION_UNSPECIFIED
      - OPERATOR_LANGUAGE_DIRECTION_DEFAULT
      - OPERATOR_LANGUAGE_DIRECTION_LEFT_TO_RIGHT
      - OPERATOR_LANGUAGE_DIRECTION_RIGHT_TO_LEFT
      description: OperatorLanguageDirection is an enum for the direction of the language.
    tcn.org.preferences.v1alpha1.OrganizationPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) organizationPreferences identifier
        default_country:
          type: string
          title: default_country
          description: Organization's default country
        time_zone:
          type: string
          title: time_zone
          description: "Operating time zone of organization\n This is currently the
            string version of the api.commons.TimeZone enum."
        backoffice_display_language:
          type: string
          title: backoffice_display_language
          description: "Display language in backoffice for users of the organization\n
            This is currently the string version of the api.commons.DisplayLanguage
            enum."
        operator_display_language:
          type: string
          title: operator_display_language
          description: "Display language in operator for users of the organization\n
            If set, must be a valid language tag supported in Operator.\n IETF BCP
            47 - https://en.wikipedia.org/wiki/IETF_language_tag"
        operator_language_direction:
          title: operator_language_direction
          description: Langauge direction in operator
          $ref: '#/components/schemas/tcn.type.OperatorLanguageDirection'
      title: OrganizationPreferences
      required:
      - default_country
      - time_zone
      - backoffice_display_language
      - operator_display_language
      - operator_language_direction
      additionalProperties: false
      description: OrganizationPreferences are general preferences controlling organization
        properties.
    tcn.org.preferences.v1alpha1.PhonePreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) phonePreferences identifier
        agent_preview_dialing:
          type: boolean
          title: agent_preview_dialing
          description: Determines whether broadcasts may be sent as Preview Dial.
        default_ring_length_threshold:
          type: integer
          title: default_ring_length_threshold
          format: int32
          description: The number of seconds to allow ringing to a 3rd party.
        display_ring_length_threshold:
          type: boolean
          title: display_ring_length_threshold
          description: Determines whether the setting may be changed while scheduling.
        show_caller_id:
          type: boolean
          title: show_caller_id
          description: Determines whether the setting may be show/edited while scheduling.
        default_use_caller_id:
          type: boolean
          title: default_use_caller_id
          description: Determines whether to use Caller ID by default.
        override_linkback_recording:
          type: boolean
          title: override_linkback_recording
          description: "Determines whether broadcast templates may set to record linkbacks\n
            individually."
        caller_id_cfd_sid:
          type:
          - integer
          - string
          title: caller_id_cfd_sid
          format: int64
          description: The 'sid' of the Caller ID field description to use as default.
        default_dial_order:
          title: default_dial_order
          description: The dial order of a contact record, default 'First Number Only'.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DialOrder'
        answering_machine_detection:
          title: answering_machine_detection
          description: Which type of answering machine detection to use.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AnsweringMachineDetection'
        linkback_recording:
          type: boolean
          title: linkback_recording
          description: Determines whether linkback recording is enabled.
      title: PhonePreferences
      required:
      - agent_preview_dialing
      - default_ring_length_threshold
      - display_ring_length_threshold
      - show_caller_id
      - default_use_caller_id
      - override_linkback_recording
      - caller_id_cfd_sid
      - default_dial_order
      - answering_machine_detection
      - linkback_recording
      additionalProperties: false
      description: Preferences for phone dial options, call ID, and other call properties.
    tcn.org.preferences.v1alpha1.RecordingPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name is the identifier of the recording preferences
        convention_enabled:
          type: boolean
          title: convention_enabled
          description: Whether to use custom recordings file name convention.
        file_naming_convention:
          title: file_naming_convention
          description: "File naming convention for recording files.\n Previously called
            file_name_convention."
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RecordingsFileNamingConvention'
        zip_convention_enabled:
          type: boolean
          title: zip_convention_enabled
          description: Whether to use custom recordings file name convention for zip.
        zip_file_naming_convention:
          title: zip_file_naming_convention
          description: "File name convention for archived/compressed zip recording
            files.\n Previously called zip_file_name_convention."
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RecordingsZipFileNamingConvention'
        export_file_type:
          title: export_file_type
          description: Recording export file type (.wav or .mp3).
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RecordingFileType'
      title: RecordingPreferences
      required:
      - convention_enabled
      - file_naming_convention
      - zip_convention_enabled
      - zip_file_naming_convention
      - export_file_type
      additionalProperties: false
      description: RecordingPreferences represents the preferences for recording configurations.
    tcn.org.preferences.v1alpha1.ReportFilterPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name is the identifier of the webhook preferences
        default_auto_report_filter:
          title: default_auto_report_filter
          description: Default filtering for automated reports.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ReportFilter'
        send_empty_auto_reports:
          type: boolean
          title: send_empty_auto_reports
          description: Whether to send auto-reports even if they are empty.
        display_broadcast_resend_filter:
          type: boolean
          title: display_broadcast_resend_filter
          description: Whether or not to display the setting in the 'Resend' window.
        default_broadcast_resend_filter:
          title: default_broadcast_resend_filter
          description: Determines which contact records will be included in the new
            broadcast.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ReportFilter'
      title: ReportFilterPreferences
      required:
      - default_auto_report_filter
      - send_empty_auto_reports
      - display_broadcast_resend_filter
      - default_broadcast_resend_filter
      additionalProperties: false
      description: ReportFilterPreferences represents the preferences for the report
        filter configurations.
    tcn.org.preferences.v1alpha1.SchedulePreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) SchedulePreferences identifier
        display_schedule_using_time_zone:
          type: boolean
          title: display_schedule_using_time_zone
          description: Display campaign schedule by time zone
        use_schedule_using_time_zone:
          type: boolean
          title: use_schedule_using_time_zone
          description: Whether or not by default campaigns are scheduled by time zone
        schedule_using_time_zone_scope:
          title: schedule_using_time_zone_scope
          description: Schedule by time zone scope
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ScheduleByTimeZoneScope'
        display_schedule_as_paused:
          type: boolean
          title: display_schedule_as_paused
          description: Display "schedule as paused" field
        schedule_as_paused:
          type: boolean
          title: schedule_as_paused
          description: Schedule paused by default
        default_completion_threshold:
          type:
          - integer
          - string
          title: default_completion_threshold
          format: int64
          description: Default completion threshold
        display_campaign_linking:
          type: boolean
          title: display_campaign_linking
          description: Display "campaign link" field
        use_campaign_linking:
          type: boolean
          title: use_campaign_linking
          description: Use campaign linking by default
        campaign_links:
          type: object
          title: campaign_links
          additionalProperties:
            type: string
            title: value
          description: Campaign links map of properties, id/name as key, description
            as value.
        default_campaign_link_id:
          type: string
          title: default_campaign_link_id
          description: Default campaign link ID (id in CampaignLink associated with
            default)
        resend_cancelled_campaigns:
          type: boolean
          title: resend_cancelled_campaigns
          description: Whether user canceled campaigns can be resent in the organization.
      title: SchedulePreferences
      required:
      - display_schedule_using_time_zone
      - use_schedule_using_time_zone
      - schedule_using_time_zone_scope
      - display_schedule_as_paused
      - schedule_as_paused
      - default_completion_threshold
      - display_campaign_linking
      - use_campaign_linking
      - campaign_links
      - default_campaign_link_id
      - resend_cancelled_campaigns
      additionalProperties: false
      description: SchedulePreferences is an object for get response and update request
    tcn.org.preferences.v1alpha1.SchedulePreferences.CampaignLinksEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: CampaignLinksEntry
      additionalProperties: false
    tcn.org.preferences.v1alpha1.ScorecardsPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name is the identifier of the score card preferences
        call_sample_percentage:
          type: integer
          title: call_sample_percentage
          format: int32
          description: "The percentage of randomized calls shown to the user for evaluation.\n
            Must be between 1-100."
        max_user_evaluations:
          type: integer
          title: max_user_evaluations
          format: int32
          description: "Maximum number of evaluations per user, per category,\n over
            the given time interval"
        evaluation_interval:
          title: evaluation_interval
          description: The time interval over which calls are listed for scoring.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EvaluationInterval'
      title: ScorecardsPreferences
      required:
      - call_sample_percentage
      - max_user_evaluations
      - evaluation_interval
      additionalProperties: false
      description: ScorecardsPreferences represents the preferences for the score
        card.
    tcn.org.type.v1alpha1.CronFrequency:
      type: string
      title: CronFrequency
      enum:
      - CRON_FREQUENCY_UNSPECIFIED
      - CRON_FREQUENCY_BY_MINUTE
      - CRON_FREQUENCY_HOURLY
      - CRON_FREQUENCY_DAILY
      - CRON_FREQUENCY_WEEKLY
      - CRON_FREQUENCY_MONTHLY
      - CRON_FREQUENCY_YEARLY
      description: CronFrequency specifies the frequency of the cron job.
    tcn.org.type.v1alpha1.CronExpression:
      type: object
      properties:
        seconds_schedule:
          type: string
          title: seconds_schedule
          description: "(OPTIONAL) Seconds (0-59). Optional: Default is \"0\".\n Example:
            \"30\" for the 30th second of the minute."
        minutes:
          type: string
          title: minutes
          description: "Minutes (0-59). Specifies the minute of the hour.\n Example:
            \"0\" for the start of the hour, \"30\" for the 30th minute."
        hours:
          type: string
          title: hours
          description: "Hours (0-23). Specifies the hour of the day.\n Example: \"15\"
            for 3 PM, \"0\" for midnight."
        month_day:
          type: string
          title: month_day
          description: "Day of the month (1-31). Specifies the day of the month.\n
            Example: \"1\" for the 1st day of the month, \"*\" for any day."
        month:
          type: string
          title: month
          description: "Month (1-12). Specifies the month of the year.\n Example:
            \"1\" for January, \"12\" for December, \"*\" for any month."
        week_day:
          type: string
          title: week_day
          description: "Day of the week (0-7, where 0 and 7 both represent Sunday).\n
            Specifies the day of the week.\n Example: \"1\" for Monday, \"5\" for
            Friday, \"*\" for any day of the week."
        year:
          type: string
          title: year
          description: "(OPTIONAL) Year (optional). Specifies the year.\n Example:
            \"2002-2005\" for all years between 2002 and 2005, \"*\" for any year."
        frequency:
          title: frequency
          description: "(OPTIONAL) CronFrequency (optional). Specifies the frequency
            of the cron job.\n Example: \"DAILY\" for a daily cron job."
          $ref: '#/components/schemas/tcn.org.type.v1alpha1.CronFrequency'
      title: CronExpression
      required:
      - minutes
      - hours
      - month_day
      - month
      - week_day
      additionalProperties: false
      description: "CronExpression is a message for the cron expression of a report.\n
        Common symbols used in cron expressions:\n (asterisk) * : Matches any value.\n
        (comma)    , : Specifies a list of values (e.g., 1,3,5).\n (hyphen)   - :
        Specifies a range of values (e.g., 1-5).\n (slash)    / : Specifies increments
        (e.g., */5 for every 5 minutes)."
    tcn.org.preferences.v1alpha1.VoiceAnalyticsPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name is the identifier of the voice analytics
            preferences
        enabled:
          type: boolean
          title: enabled
          description: "When enabled call recordings will be transcribed and archived\n
            by localmixer in voice analytics.\n This was documented as OPTIONAL in
            the legacy code."
        silence_threshold:
          type: integer
          title: silence_threshold
          format: int32
          description: "(OPTIONAL) Minimum milliseconds of silence to occur before
            considered to\n be silence by voice analytics.\n The value must be between
            0 and 1000000."
        talk_overlap_threshold:
          type: integer
          title: talk_overlap_threshold
          format: int32
          description: "(OPTIONAL) Minimum milliseconds of talk over to occur before
            considered to\n be talk over by voice analytics.\n The value must be between
            0 and 1000000.\n Previously named 'talk_over_threshold' - changed to follow
            the Google AIP standard."
        redact_all_ordinal:
          type: boolean
          title: redact_all_ordinal
          description: "(OPTIONAL) Redaction settings\n\n When enabled, the voice
            analytics will redact all the ordinal numbers."
        redact_all_cardinal:
          type: boolean
          title: redact_all_cardinal
          description: (OPTIONAL) When enabled, the voice analytics will redact all
            the cardinal numbers.
        use_cardinal_rules:
          type: boolean
          title: use_cardinal_rules
          description: (OPTIONAL) When enabled, the voice analytics uses the cardinal
            rules for redacting the cardinal numbers.
        cardinal_rules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RedactRule'
          title: cardinal_rules
          description: (OPTIONAL) The cardinal rules to be used for redacting the
            cardinal numbers.
        notification:
          title: notification
          description: "Notification settings\n\n Flagging transcript notification
            preferences.\n This was documented as OPTIONAL in the legacy code.\n It
            defaults to every 15 minutes when not specified.\n Previously named 'notify',
            and it was of type string - changed to follow the Google AIP standard."
          $ref: '#/components/schemas/tcn.org.type.v1alpha1.CronExpression'
        region_id:
          type: string
          title: region_id
          description: (OPTIONAL) The region where the organization the voice analytics
            preferences belong to is located.
      title: VoiceAnalyticsPreferences
      required:
      - enabled
      - notification
      additionalProperties: false
      description: VoiceAnalyticsPreferences represents the preferences for voice
        analytics configurations.
    tcn.org.preferences.v1alpha1.WebhookPreferences:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name is the identifier of the webhook preferences
        push_urls_enabled:
          type: boolean
          title: push_urls_enabled
          description: Whether push URLs are enabled.
        call_result_push_url:
          type: string
          title: call_result_push_url
          description: Call result of the push URL.
        agent_response_push_url:
          type: string
          title: agent_response_push_url
          description: Agent response of the push URL.
      title: WebhookPreferences
      required:
      - push_urls_enabled
      - call_result_push_url
      - agent_response_push_url
      additionalProperties: false
      description: "(-- api-linter: core::0140::uri=disabled\n     aip.dev/not-precedent:
        We want to keep using \"url\" since that's used throughout the system--)\n
        WebhookPreferences represents the preferences for webhook configurations."
    tcn.org.preferences.v1alpha1.GetAdminClientPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name is the identifier of the admin client preferences
      title: GetAdminClientPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetAdminClientPreferencesRequest is the request message for GetAdminClientPreferences.
    tcn.org.preferences.v1alpha1.GetAgentPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the agent preference
      title: GetAgentPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: request message GetAgentPreferencesRequest
    tcn.org.preferences.v1alpha1.GetAgentQuickViewPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the agent quick view preference
      title: GetAgentQuickViewPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetAgentQuickViewPreferencesRequest is the request message for
        GetAgentQuickViewPreferences.
    tcn.org.preferences.v1alpha1.GetAuthenticationPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the authentication preference
      title: GetAuthenticationPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetAuthenticationPreferencesRequest is the request message for
        GetAuthenticationPreferences.
    tcn.org.preferences.v1alpha1.GetBroadcastPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the broadcast preference
      title: GetBroadcastPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetBroadcastPreferencesRequest is the request message for GetBroadcastPreferences.
    tcn.org.preferences.v1alpha1.GetBusinessPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the authentication preference
      title: GetBusinessPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetBusinessPreferencesRequest is the request message for GetBusinessPreferences.
    tcn.org.preferences.v1alpha1.GetCompliancePreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the compliance preference
      title: GetCompliancePreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetCompliancePreferencesRequest is the request message for GetCompliancePreferences.
    tcn.org.preferences.v1alpha1.GetContactPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the Contact preference
      title: GetContactPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetContactPreferencesRequest is the request message for GetContactPreferences.
    tcn.org.preferences.v1alpha1.GetDashboardGeneralPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the dashboard general preference
      title: GetDashboardGeneralPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetDashboardGeneralPreferencesRequest is the request message for
        GetDashboardGeneralPreferences.
    tcn.org.preferences.v1alpha1.GetDashboardQueuePreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the dashboard queue preference
      title: GetDashboardQueuePreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetDashboardQueuePreferencesRequest is the request message for
        GetDashboardQueuePreferences.
    tcn.org.preferences.v1alpha1.GetEmailSmsPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the email sms preference
      title: GetEmailSmsPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetEmailSmsPreferencesRequest is the request message for GetEmailSmsPreferences.
    tcn.org.preferences.v1alpha1.GetEndOfDayPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the end of day preference
      title: GetEndOfDayPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetEndOfDayPreferencesRequest is the request message for GetEndOfDayPreferences.
    tcn.org.preferences.v1alpha1.GetOrganizationPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the organization preference
      title: GetOrganizationPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetOrganizationPreferencesRequest is the request message for GetOrganizationPreferences.
    tcn.org.preferences.v1alpha1.GetPhonePreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the phone preference
      title: GetPhonePreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetPhonePreferencesRequest is the request message for GetPhonePreferences.
    tcn.org.preferences.v1alpha1.GetRecordingPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the record preference
      title: GetRecordingPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: Request for GetRecordingPreferences
    tcn.org.preferences.v1alpha1.GetReportFilterPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the report filter preference
      title: GetReportFilterPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: Request for GetReportFilterPreferences
    tcn.org.preferences.v1alpha1.GetSchedulePreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the schedule preference
      title: GetSchedulePreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetSchedulePreferencesRequest is the request message for GetSchedulePreferences.
        PERMISSION_ORG_VIEW
    tcn.org.preferences.v1alpha1.GetScorecardsPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the score cards preference
      title: GetScorecardsPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetScorecardsPreferencesRequest is the request message for GetScorecardsPreferences.
        PERMISSION_ORG_VIEW
    tcn.org.preferences.v1alpha1.GetVoiceAnalyticsPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the identifier of the voice analytics preference
      title: GetVoiceAnalyticsPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetVoiceAnalyticsPreferencesRequest is the request message for
        GetVoiceAnalyticsPreferences.
    tcn.org.preferences.v1alpha1.GetWebhookPreferencesRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name is the identifier of the webhook preferences
      title: GetWebhookPreferencesRequest
      required:
      - name
      additionalProperties: false
      description: GetWebhookPreferencesRequest is the request message for GetWebhookPreferences.
    tcn.org.preferences.v1alpha1.ListVoiceAnalyticsPreferencesRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent resource to list voice analytics preferences for.
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) The maximum number of preferences to return
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) A page token, received from a previous `ListVoiceAnalyticsPreferences`
            call.\n Provide this to retrieve the subsequent page.\n When paginating,
            all other parameters provided to `ListVoiceAnalyticsPreferences` must
            match\n the call that provided the page token."
      title: ListVoiceAnalyticsPreferencesRequest
      required:
      - parent
      additionalProperties: false
      description: ListVoiceAnalyticsPreferencesRequest is the request message for
        ListVoiceAnalyticsPreferences.
    tcn.org.preferences.v1alpha1.ListVoiceAnalyticsPreferencesResponse:
      type: object
      properties:
        voice_analytics_preferences:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.VoiceAnalyticsPreferences'
          title: voice_analytics_preferences
          description: The list of voice analytics preferences.
        next_page_token:
          type: string
          title: next_page_token
          description: "A token that can be sent as `page_token` to retrieve the next
            page.\n If this field is omitted, there are no subsequent pages."
      title: ListVoiceAnalyticsPreferencesResponse
      additionalProperties: false
      description: ListVoiceAnalyticsPreferencesResponse is the response message for
        ListVoiceAnalyticsPreferences.
    tcn.org.preferences.v1alpha1.UpdateAdminClientPreferencesRequest:
      type: object
      properties:
        admin_client_preferences:
          title: admin_client_preferences
          description: The admin client preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AdminClientPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateAdminClientPreferencesRequest
      required:
      - admin_client_preferences
      additionalProperties: false
      description: UpdateAdminClientPreferencesRequest is the request message for
        UpdateAdminClientPreferences.
    tcn.org.preferences.v1alpha1.UpdateAgentPreferencesRequest:
      type: object
      properties:
        agent_preferences:
          title: agent_preferences
          description: the agent preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateAgentPreferencesRequest
      required:
      - agent_preferences
      additionalProperties: false
      description: request message UpdateAgentPreferencesRequest
    tcn.org.preferences.v1alpha1.UpdateAgentQuickViewPreferencesRequest:
      type: object
      properties:
        agent_quick_view_preferences:
          title: agent_quick_view_preferences
          description: the agent quick view preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AgentQuickViewPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateAgentQuickViewPreferencesRequest
      required:
      - agent_quick_view_preferences
      additionalProperties: false
      description: UpdateAgentQuickViewPreferencesRequest is the request message for
        UpdateAgentQuickViewPreferences.
    tcn.org.preferences.v1alpha1.UpdateAuthenticationPreferencesRequest:
      type: object
      properties:
        authentication_preferences:
          title: authentication_preferences
          description: the authentication preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.AuthenticationPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateAuthenticationPreferencesRequest
      required:
      - authentication_preferences
      additionalProperties: false
      description: UpdateAuthenticationPreferencesRequest is the request message for
        UpdateAuthenticationPreferences.
    tcn.org.preferences.v1alpha1.UpdateBroadcastPreferencesRequest:
      type: object
      properties:
        broadcast_preferences:
          title: broadcast_preferences
          description: the broadcast preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BroadcastPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateBroadcastPreferencesRequest
      required:
      - broadcast_preferences
      additionalProperties: false
      description: UpdateBroadcastPreferencesRequest is the request message for UpdateBroadcastPreferences.
    tcn.org.preferences.v1alpha1.UpdateBusinessPreferencesRequest:
      type: object
      properties:
        business_preferences:
          title: business_preferences
          description: the business preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.BusinessPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateBusinessPreferencesRequest
      required:
      - business_preferences
      additionalProperties: false
      description: UpdateBusinessPreferencesRequest is the request message for UpdateBusinessPreferences.
    tcn.org.preferences.v1alpha1.UpdateCompliancePreferencesRequest:
      type: object
      properties:
        compliance_preferences:
          title: compliance_preferences
          description: the compliance preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.CompliancePreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateCompliancePreferencesRequest
      required:
      - compliance_preferences
      additionalProperties: false
      description: UpdateCompliancePreferencesRequest is the request message for UpdateCompliancePreferences.
    tcn.org.preferences.v1alpha1.UpdateContactPreferencesRequest:
      type: object
      properties:
        contact_preferences:
          title: contact_preferences
          description: the Contact preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ContactPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateContactPreferencesRequest
      required:
      - contact_preferences
      additionalProperties: false
      description: UpdateContactPreferencesRequest is the request message for UpdateContactPreferences.
    tcn.org.preferences.v1alpha1.UpdateDashboardGeneralPreferencesRequest:
      type: object
      properties:
        dashboard_general_preferences:
          title: dashboard_general_preferences
          description: the dashboard general preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardGeneralPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateDashboardGeneralPreferencesRequest
      required:
      - dashboard_general_preferences
      additionalProperties: false
      description: UpdateDashboardGeneralPreferencesRequest is the request message
        for UpdateDashboardGeneralPreferences.
    tcn.org.preferences.v1alpha1.UpdateDashboardQueuePreferencesRequest:
      type: object
      properties:
        dashboard_queue_preferences:
          title: dashboard_queue_preferences
          description: the dashboard queue preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.DashboardQueuePreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateDashboardQueuePreferencesRequest
      required:
      - dashboard_queue_preferences
      additionalProperties: false
      description: UpdateDashboardQueuePreferencesRequest is the request message for
        UpdateDashboardQueuePreferences.
    tcn.org.preferences.v1alpha1.UpdateEmailSmsPreferencesRequest:
      type: object
      properties:
        email_sms_preferences:
          title: email_sms_preferences
          description: the email sms preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EmailSmsPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateEmailSmsPreferencesRequest
      required:
      - email_sms_preferences
      additionalProperties: false
      description: UpdateEmailSmsPreferencesRequest is the request message for UpdateEmailSmsPreferences.
    tcn.org.preferences.v1alpha1.UpdateEndOfDayPreferencesRequest:
      type: object
      properties:
        end_of_day_preferences:
          title: end_of_day_preferences
          description: the end of day preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.EndOfDayPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateEndOfDayPreferencesRequest
      required:
      - end_of_day_preferences
      additionalProperties: false
      description: "(-- api-linter: core::0140::prepositions=disabled\n     aip.dev/not-precedent:
        We need to do this because the name of the preference. --)\n UpdateEndOfDayPreferencesRequest
        is the request message for UpdateEndOfDayPreferences."
    tcn.org.preferences.v1alpha1.UpdateOrganizationPreferencesRequest:
      type: object
      properties:
        organization_preferences:
          title: organization_preferences
          description: the organization preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.OrganizationPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateOrganizationPreferencesRequest
      required:
      - organization_preferences
      additionalProperties: false
      description: UpdateOrganizationPreferencesRequest is the request message for
        UpdateOrganizationPreferences.
    tcn.org.preferences.v1alpha1.UpdatePhonePreferencesRequest:
      type: object
      properties:
        phone_preferences:
          title: phone_preferences
          description: the phone preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.PhonePreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdatePhonePreferencesRequest
      required:
      - phone_preferences
      additionalProperties: false
      description: UpdatePhonePreferencesRequest is the request message for UpdatePhonePreferences.
    tcn.org.preferences.v1alpha1.UpdateRecordingPreferencesRequest:
      type: object
      properties:
        recording_preferences:
          title: recording_preferences
          description: Recording preferences object, required to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.RecordingPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) Field mask for update request
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateRecordingPreferencesRequest
      required:
      - recording_preferences
      additionalProperties: false
      description: Request for UpdateRecordingPreferences
    tcn.org.preferences.v1alpha1.UpdateReportFilterPreferencesRequest:
      type: object
      properties:
        report_filter_preferences:
          title: report_filter_preferences
          description: Report filter preferences object, required to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ReportFilterPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) Field mask for update request
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateReportFilterPreferencesRequest
      required:
      - report_filter_preferences
      additionalProperties: false
      description: Request for UpdateReportFilterPreferences
    tcn.org.preferences.v1alpha1.UpdateSchedulePreferencesRequest:
      type: object
      properties:
        schedule_preferences:
          title: schedule_preferences
          description: Schedule preferences entity.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.SchedulePreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) Field mask for filtering each field.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateSchedulePreferencesRequest
      required:
      - schedule_preferences
      additionalProperties: false
      description: UpdateSchedulePreferencesRequest is the request message for UpdateSchedulePreferences.
        PERMISSION_ORG_EDIT
    tcn.org.preferences.v1alpha1.UpdateScorecardsPreferencesRequest:
      type: object
      properties:
        scorecards_preferences:
          title: scorecards_preferences
          description: Scorecards preferences entity.
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.ScorecardsPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) Field mask for filtering each field.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateScorecardsPreferencesRequest
      required:
      - scorecards_preferences
      additionalProperties: false
      description: UpdateScorecardsPreferencesRequest is the request message for UpdateScorecardsPreferences.
        PERMISSION_ORG_EDIT
    tcn.org.preferences.v1alpha1.UpdateVoiceAnalyticsPreferencesRequest:
      type: object
      properties:
        voice_analytics_preferences:
          title: voice_analytics_preferences
          description: the voice analytics preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.VoiceAnalyticsPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateVoiceAnalyticsPreferencesRequest
      required:
      - voice_analytics_preferences
      additionalProperties: false
      description: UpdateVoiceAnalyticsPreferencesRequest is the request message for
        UpdateVoiceAnalyticsPreferences.
    tcn.org.preferences.v1alpha1.UpdateWebhookPreferencesRequest:
      type: object
      properties:
        webhook_preferences:
          title: webhook_preferences
          description: The webhook preferences to update
          $ref: '#/components/schemas/tcn.org.preferences.v1alpha1.WebhookPreferences'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateWebhookPreferencesRequest
      required:
      - webhook_preferences
      additionalProperties: false
      description: UpdateWebhookPreferencesRequest is the request message for UpdateWebhookPreferences.
    tcn.org.skills.v1alpha1.SkillGroup:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) skill group identifier
        title:
          type: string
          title: title
          description: skill group title
        description:
          type: string
          title: description
          description: skill group description
        skill_sets:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup.SkillSet'
          title: skill_sets
          description: (IMMUTABLE) skill group skill sets
        members:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup.User'
          title: members
          description: (OPTIONAL) users associated with the skill group
        create_time:
          title: create_time
          description: creation date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: update date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: SkillGroup
      required:
      - title
      - description
      additionalProperties: false
      description: SkillGroup -
    tcn.org.skills.v1alpha1.SkillGroup.SkillSet:
      type: object
      properties:
        proficiency:
          type: integer
          title: proficiency
          format: int32
          description: The proficiency of the skill as a percent [1,100].
        skill_sid:
          type:
          - integer
          - string
          title: skill_sid
          format: int64
          description: The sid of the skill
      title: SkillSet
      required:
      - proficiency
      - skill_sid
      additionalProperties: false
      description: skill set for the skill group
    tcn.org.skills.v1alpha1.SkillGroup.User:
      type: object
      properties:
        user_id:
          type: string
          title: user_id
          description: user id of user
        username:
          type: string
          title: username
          description: username of user
          readOnly: true
      title: User
      required:
      - user_id
      additionalProperties: false
      description: the user associated with the skill group.
    tcn.org.skills.v1alpha1.Skill:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) skill group identifier
      title: Skill
      additionalProperties: false
      description: Skill
    tcn.org.skills.v1alpha1.AddSkillRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the skill group to add the skill to.
        skill_set:
          title: skill_set
          description: The skill to add to the skill group.
          $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup.SkillSet'
      title: AddSkillRequest
      required:
      - name
      - skill_set
      additionalProperties: false
      description: Request message for the AddSkill rpc.
    tcn.org.skills.v1alpha1.AssignSkillGroupRequest:
      type: object
      properties:
        org_id:
          type: string
          title: org_id
          description: The ids of the organization of the skill group.
        skill_group_id:
          type: string
          title: skill_group_id
          description: The id of the skill groups to be assigned.
        user_id:
          type: string
          title: user_id
          description: The user id of the user.
      title: AssignSkillGroupRequest
      required:
      - org_id
      - skill_group_id
      - user_id
      additionalProperties: false
      description: Request message for the AssignSkillGroup rpc.
    tcn.org.skills.v1alpha1.AssignSkillGroupResponse:
      type: object
      title: AssignSkillGroupResponse
      additionalProperties: false
      description: Response message for the AssignSkillGroup rpc.
    tcn.org.skills.v1alpha1.CreateSkillGroupRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent resource where this skill group will be created.
        skill_group:
          title: skill_group
          description: The skill group to be created
          $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
      title: CreateSkillGroupRequest
      required:
      - parent
      - skill_group
      additionalProperties: false
      description: Request to create a skill group
    tcn.org.skills.v1alpha1.DeleteSkillGroupRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the skill group to delete
      title: DeleteSkillGroupRequest
      required:
      - name
      additionalProperties: false
      description: Request message to delete a skill group
    tcn.org.skills.v1alpha1.GetSkillGroupRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the skill group to retrieve.
      title: GetSkillGroupRequest
      required:
      - name
      additionalProperties: false
      description: Request for getting a skill group
    tcn.org.skills.v1alpha1.ListSkillGroupsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent resource to list skill groups from
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
        filter:
          type: string
          title: filter
          description: (OPTIONAL) The filter to apply to list results.
      title: ListSkillGroupsRequest
      required:
      - parent
      additionalProperties: false
      description: Request used listing all skill groups
    tcn.org.skills.v1alpha1.ListSkillGroupsResponse:
      type: object
      properties:
        skill_groups:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
          title: skill_groups
          description: The list of skill groups.
        next_page_token:
          type: string
          title: next_page_token
          description: The next page token.
      title: ListSkillGroupsResponse
      additionalProperties: false
      description: response used listing all skill groups
    tcn.org.skills.v1alpha1.RemoveSkillAllGroupsRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the skill to delete
      title: RemoveSkillAllGroupsRequest
      required:
      - name
      additionalProperties: false
      description: Request message for the RemoveSkill rpc.
    tcn.org.skills.v1alpha1.RemoveSkillAllGroupsResponse:
      type: object
      title: RemoveSkillAllGroupsResponse
      additionalProperties: false
      description: Response message for the RemoveSkill rpc.
    tcn.org.skills.v1alpha1.RemoveSkillRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the skill group to remove the skill from.
        skill_sid:
          type:
          - integer
          - string
          title: skill_sid
          format: int64
          description: The skill sid to remove from the skill group.
      title: RemoveSkillRequest
      required:
      - name
      - skill_sid
      additionalProperties: false
      description: Request message for the RemoveSkill rpc.
    tcn.org.skills.v1alpha1.RevokeSkillGroupRequest:
      type: object
      properties:
        org_id:
          type: string
          title: org_id
          description: The ids of the organization of the skill group.
        skill_group_id:
          type: string
          title: skill_group_id
          description: The id of the skill groups to be revoked.
        user_id:
          type: string
          title: user_id
          description: The user id of the user.
      title: RevokeSkillGroupRequest
      required:
      - org_id
      - skill_group_id
      - user_id
      additionalProperties: false
      description: Request message for the RevokeSkillGroup rpc.
    tcn.org.skills.v1alpha1.RevokeSkillGroupResponse:
      type: object
      title: RevokeSkillGroupResponse
      additionalProperties: false
      description: Response message for the RevokeSkillGroup rpc.
    tcn.org.skills.v1alpha1.UpdateSkillGroupRequest:
      type: object
      properties:
        skill_group:
          title: skill_group
          description: The skill group to update.
          $ref: '#/components/schemas/tcn.org.skills.v1alpha1.SkillGroup'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The list of fields to update.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateSkillGroupRequest
      required:
      - skill_group
      additionalProperties: false
      description: Request to update a skill group
    tcn.org.tokens.v1alpha1.APIToken:
      type: object
      oneOf:
      - properties:
          expire_time:
            title: expire_time
            description: When the token expirates
            $ref: '#/components/schemas/google.protobuf.Timestamp'
        title: expire_time
        required:
        - expire_time
      - properties:
          ttl:
            title: ttl
            description: Time to live (until expiration)
            $ref: '#/components/schemas/google.protobuf.Duration'
        title: ttl
        required:
        - ttl
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) (IMMUTABLE) Unique identifier
        display_name:
          type: string
          title: display_name
          description: (IMMUTABLE) API token name
        description:
          type: string
          title: description
          description: (IMMUTABLE) API token description
        user_id:
          type: string
          title: user_id
          description: (IMMUTABLE) User the token is associated with
        username:
          type: string
          title: username
          description: Usernme of the user
          readOnly: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.api.Permission'
          title: permissions
          description: (IMMUTABLE) API token associated permissions
        create_time:
          title: create_time
          description: Creation date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        last_use_time:
          title: last_use_time
          description: Last used date
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        revoke_time:
          title: revoke_time
          description: When (and if) the token was revoked (nil if unrevoked)
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: APIToken
      additionalProperties: false
      description: "(-- api-linter: core::0123::resource-singular=disabled\n     aip.dev/not-precedent:
        We need to do this because apiToken is more readable than aPIToken. --)\n\n
        APIToken is the message for a user's personal access token with associated\n
        permissions."
    tcn.org.tokens.v1alpha1.AuthenticateAPITokenRequest:
      type: object
      properties:
        token:
          type: string
          title: token
          description: The name of the API token that was used
      title: AuthenticateAPITokenRequest
      required:
      - token
      additionalProperties: false
      description: Request to authenticate an API token
    tcn.org.tokens.v1alpha1.GenerateAPITokenRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent resource where this API token will be created.
        api_token_id:
          type: string
          title: api_token_id
          description: "(OPTIONAL) The ID to use for the API token, wahich will become
            the final component\n of the API token's resource name\n\n There are no
            restrictions."
        api_token:
          title: api_token
          description: The API token to be created.
          $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
      title: GenerateAPITokenRequest
      required:
      - parent
      - api_token
      additionalProperties: false
      description: Request to generate an API token
    tcn.org.tokens.v1alpha1.GenerateAPITokenResponse:
      type: object
      properties:
        api_token:
          title: api_token
          description: The created API token.
          $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
        token:
          type: string
          title: token
          description: The token, only returned upon generation and to be kept.
      title: GenerateAPITokenResponse
      additionalProperties: false
      description: Response from generating an API token
    tcn.org.tokens.v1alpha1.GetAPITokenRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The API token to retrieve.
      title: GetAPITokenRequest
      required:
      - name
      additionalProperties: false
      description: Request to get an API token
    tcn.org.tokens.v1alpha1.ListAPITokensRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: The parent resource to list API tokens from.
        filter:
          type: string
          title: filter
          description: (OPTIONAL) Standard filter string
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Returned page.
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) Used to specify the page token.
        order_by:
          type: string
          title: order_by
          description: (OPTIONAL) Which fields and what sorting order to return the
            resources in.
      title: ListAPITokensRequest
      required:
      - parent
      additionalProperties: false
      description: Request to list all API tokens
    tcn.org.tokens.v1alpha1.ListAPITokensResponse:
      type: object
      properties:
        api_tokens:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.tokens.v1alpha1.APIToken'
          title: api_tokens
          description: The list of API tokens.
        next_page_token:
          type: string
          title: next_page_token
          description: The next page token.
      title: ListAPITokensResponse
      additionalProperties: false
      description: Response used for listing all API tokens
    tcn.org.tokens.v1alpha1.ListKeysResponse:
      type: object
      properties:
        json_keys:
          type: string
          title: json_keys
          description: List of signing keys
      title: ListKeysResponse
      additionalProperties: false
      description: "(-- api-linter: core::0158::response-next-page-token-field=disabled\n
        \    api-linter: core::0158::response-repeated-first-field=disabled\n     api-linter:
        core::0132::response-unknown-fields=disabled\n     aip.dev/not-precedent:
        This is intended to return a json list of web keys. --)\n Response to list
        the signing keys used for API tokens"
    tcn.org.tokens.v1alpha1.RecordAPITokenUseRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the API token that was used
      title: RecordAPITokenUseRequest
      required:
      - name
      additionalProperties: false
      description: Request to record that an API token was used
    tcn.org.tokens.v1alpha1.RevokeAPITokenRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The API token to revoke.
      title: RevokeAPITokenRequest
      required:
      - name
      additionalProperties: false
      description: Request to revoke a API token
    tcn.org.users.v1alpha1.OperatorApplication:
      type: string
      title: OperatorApplication
      enum:
      - OPERATOR_APPLICATION_UNSPECIFIED
      - OPERATOR_APPLICATION_AGENT_APP
      - OPERATOR_APPLICATION_ORGANIZATION_MANAGEMENT_APP
      - OPERATOR_APPLICATION_CUSTOMER_JOURNEY_SERVICES_APP
      - OPERATOR_APPLICATION_LIST_MANAGEMENT_SERVICES_APP
      - OPERATOR_APPLICATION_AGENT_MANAGER_APP
      - OPERATOR_APPLICATION_NATURAL_LANGUAGE_COMPLIANCE_APP
      - OPERATOR_APPLICATION_VOICE_ANALYTICS_APP
      - OPERATOR_APPLICATION_SCRIPTS_APP
      - OPERATOR_APPLICATION_ROOM303_APP
      - OPERATOR_APPLICATION_OMNI_BOSS_APP
      - OPERATOR_APPLICATION_WFM_APP
      - OPERATOR_APPLICATION_PAYMENTS_APP
      - OPERATOR_APPLICATION_SUPPORT_APP
      - OPERATOR_APPLICATION_BUSINESS_INTELLIGENCE_APP
      - OPERATOR_APPLICATION_BACKOFFICE_APP
      - OPERATOR_APPLICATION_SCORECARDS_APP
      - OPERATOR_APPLICATION_DEV_TOOLS_APP
      - OPERATOR_APPLICATION_LEARNING_CENTER_APP
      - OPERATOR_APPLICATION_DELIVERY_SERVICE_APP
      - OPERATOR_APPLICATION_PERFORMANCE_MANAGEMENT_APP
      - OPERATOR_APPLICATION_TICKETS_APP
      - OPERATOR_APPLICATION_AGENT_BETA_APP
      - OPERATOR_APPLICATION_NEWSROOM_APP
      - OPERATOR_APPLICATION_CONTACTMANAGER_APP
      - OPERATOR_APPLICATION_KNOWLEDGE_BASE_APP
      description: Operator Application enum
    tcn.org.users.v1alpha1.User:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) name identifier for an organization
        username:
          type: string
          title: username
          description: The Username of the user.
        p3_permission_group:
          title: p3_permission_group
          description: (OPTIONAL) The ID of the p3 permission group the user has.
          $ref: '#/components/schemas/tcn.org.users.v1alpha1.User.P3PermissionGroup'
        partner_agent_id:
          type: string
          title: partner_agent_id
          description: (OPTIONAL) The User's partner agent id.
        region_sid_map:
          type: object
          title: region_sid_map
          additionalProperties:
            title: value
            $ref: '#/components/schemas/tcn.org.users.v1alpha1.User.RegionSids'
          description: The user's regional sids. The key of the map is a region id.
          readOnly: true
        default_region:
          type: string
          title: default_region
          description: region_id of a the user's default region
        email:
          type: string
          title: email
          description: The User's email.
        email_verified:
          type: boolean
          title: email_verified
          description: if the users email is verified
          readOnly: true
        login_disabled:
          type: boolean
          title: login_disabled
          description: Whether or not the user is disabled.
          readOnly: true
        caller_ids:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: caller_ids
          description: (OPTIONAL) login preferences
        linkback_numbers:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: linkback_numbers
          description: (OPTIONAL) a users array of linkback numbers
        given_name:
          type: string
          title: given_name
          description: The user's first/given name.
        family_name:
          type: string
          title: family_name
          description: The user's last/family name.
        create_time:
          title: create_time
          description: The date/time the user was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: The date/time the user was last updated.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        password_reset_required:
          type: boolean
          title: password_reset_required
          description: (OPTIONAL) Whether or not the user must reset their password
            on next login.
        last_password_reset_time:
          title: last_password_reset_time
          description: The time of the user's latest password reset
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        connection_id:
          title: connection_id
          description: "(OPTIONAL) connection id is the id of the auth connection
            that the\n user is coming from if it is a delegated user. If the user\n
            is not delgated this will be nil."
          $ref: '#/components/schemas/google.protobuf.StringValue'
        time_zone_override:
          type: string
          title: time_zone_override
          description: (OPTIONAL) User TimeZone with wrapper for nullable timezone
        default_application:
          title: default_application
          description: "UserSettings\n default_app for a user"
          $ref: '#/components/schemas/tcn.org.users.v1alpha1.OperatorApplication'
        user_caller_id:
          type: string
          title: user_caller_id
          description: (OPTIONAL) User caller id
        agent_profile_group_id:
          type: string
          title: agent_profile_group_id
          description: (OPTIONAL) users assigned agent profile group
        agent:
          type: boolean
          title: agent
          description: a bool signalling whether or not the user is also an agent
          readOnly: true
        account_owner:
          type: boolean
          title: account_owner
          description: a bool to determine whether or not user is account owner
          readOnly: true
        whitelisted_ips:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: whitelisted_ips
          description: (OPTIONAL) Whitelisted IPs for the user
        mfa_deadline_time:
          title: mfa_deadline_time
          description: "Timestamp beyond which the user is required to have multi
            factor authentication set up\n Only populated when getting user session
            data"
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        password_reset_deadline_time:
          title: password_reset_deadline_time
          description: Timestamp of of when a user must reset their password before
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        permission_groups:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.users.v1alpha1.User.PermissionGroup'
          title: permission_groups
          description: The permission groups that the new user will have.
        hunt_group:
          title: hunt_group
          description: (OPTIONAL) The hunt group that the user belongs to.
          $ref: '#/components/schemas/tcn.org.users.v1alpha1.User.HuntGroup'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.users.v1alpha1.User.Skill'
          title: skills
          description: (OPTIONAL) A list of the skills associated with the user
      title: User
      required:
      - username
      - default_region
      - email
      - given_name
      - family_name
      - default_application
      - permission_groups
      additionalProperties: false
      description: User contains the basic properties for a user.
    tcn.org.users.v1alpha1.User.HuntGroup:
      type: object
      properties:
        hunt_group_sid:
          type:
          - integer
          - string
          title: hunt_group_sid
          format: int64
          description: The sid of the hunt group the agent is assigned to
        hunt_group_display_name:
          type: string
          title: hunt_group_display_name
          description: The name of the hunt group the agent is assigned to
          readOnly: true
      title: HuntGroup
      required:
      - hunt_group_sid
      additionalProperties: false
      description: Object to contain the hunt group fields
    tcn.org.users.v1alpha1.User.P3PermissionGroup:
      type: object
      properties:
        p3_permission_group_id:
          type: string
          title: p3_permission_group_id
          description: Unique id for this p3 permission group.
        p3_permission_group_display_name:
          type: string
          title: p3_permission_group_display_name
          description: Name to identify by.
          readOnly: true
      title: P3PermissionGroup
      required:
      - p3_permission_group_id
      additionalProperties: false
      description: P3PermissionGroup defines the p3 permission group entity.
    tcn.org.users.v1alpha1.User.PermissionGroup:
      type: object
      properties:
        permission_group_id:
          type: string
          title: permission_group_id
          description: Unique id for this permission group.
        permission_group_display_name:
          type: string
          title: permission_group_display_name
          description: Name to identify by.
          readOnly: true
      title: PermissionGroup
      required:
      - permission_group_id
      additionalProperties: false
      description: PermissionGroup defines the permission group entity.
    tcn.org.users.v1alpha1.User.RegionSidMapEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          title: value
          $ref: '#/components/schemas/tcn.org.users.v1alpha1.User.RegionSids'
      title: RegionSidMapEntry
      additionalProperties: false
    tcn.org.users.v1alpha1.User.RegionSids:
      type: object
      properties:
        login_sid:
          type:
          - integer
          - string
          title: login_sid
          format: int64
          description: The login sid for the region.
          readOnly: true
        agent_sid:
          type:
          - integer
          - string
          title: agent_sid
          format: int64
          description: THe agent sid for the region.
          readOnly: true
        client_sid:
          type:
          - integer
          - string
          title: client_sid
          format: int64
          description: THe client sid for the region.
          readOnly: true
      title: RegionSids
      additionalProperties: false
      description: The entity object used in the region_sid_map.
    tcn.org.users.v1alpha1.User.Skill:
      type: object
      properties:
        skill_sid:
          type:
          - integer
          - string
          title: skill_sid
          format: int64
          description: The sid of the skill
        skill_display_name:
          type: string
          title: skill_display_name
          description: The name of the skill
          readOnly: true
      title: Skill
      required:
      - skill_sid
      additionalProperties: false
      description: Object to contain the skill name and id
    tcn.org.users.v1alpha1.ArchiveUserRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the user
      title: ArchiveUserRequest
      required:
      - name
      additionalProperties: false
      description: The request for ArchiveUser
    tcn.org.users.v1alpha1.ArchiveUserResponse:
      type: object
      title: ArchiveUserResponse
      additionalProperties: false
      description: The response for ArchiveUser
    tcn.org.users.v1alpha1.CreateUserRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the user
        user:
          title: user
          description: user to create
          $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
        password:
          type: string
          title: password
          description: password for new user
      title: CreateUserRequest
      required:
      - parent
      - user
      - password
      additionalProperties: false
      description: "(-- api-linter: core::0133::request-id-field=disabled\n     aip.dev/not-precedent:
        The ID of the user will be\n     generated from the service instead of being
        provided by the client.\n     api-linter: core::0133::request-unknown-fields=disabled\n
        \    aip.dev/not-precedent: The password of the user is required\n     api-linter:
        core::0133::request-required-fields=disabled\n     aip.dev/not-precedent:
        The password of the user is required\n --)\n request message CreateUserRequest"
    tcn.org.users.v1alpha1.GetUserRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the user
      title: GetUserRequest
      required:
      - name
      additionalProperties: false
      description: request message GetUserRequest
    tcn.org.users.v1alpha1.ListUsersRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: parent of the user
        page_size:
          type: integer
          title: page_size
          format: int32
          description: "(OPTIONAL) The maximum number of users to return.\n If unspecified,
            at most 50 users will be returned.\n The maximum value is 1000; values
            above 1000 will be coerced to 1000."
        page_token:
          type: string
          title: page_token
          description: "(OPTIONAL) A page token, received from a previous `ListUsers`
            call.\n Provide this to retrieve the subsequent page.\n When paginating,
            all other parameters provided to `ListUsers` must match\n the call that
            provided the page token."
        filter:
          type: string
          title: filter
          description: (OPTIONAL) The filter to apply to list results.
      title: ListUsersRequest
      required:
      - parent
      additionalProperties: false
      description: ListUsersRequest is the request message for ListUsers.
    tcn.org.users.v1alpha1.ListUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
          title: users
          description: The list of users.
        next_page_token:
          type: string
          title: next_page_token
          description: "A token, which can be sent as `page_token` to retrieve the
            next page.\n If this field is omitted, there are no subsequent pages."
      title: ListUsersResponse
      additionalProperties: false
      description: ListUsersResponse is the response message for ListUsers.
    tcn.org.users.v1alpha1.UnArchiveUserRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: name of the user
      title: UnArchiveUserRequest
      required:
      - name
      additionalProperties: false
      description: The request for UnArchiveUser
    tcn.org.users.v1alpha1.UnArchiveUserResponse:
      type: object
      title: UnArchiveUserResponse
      additionalProperties: false
      description: The response for UnArchiveUser
    tcn.org.users.v1alpha1.UpdateUserRequest:
      type: object
      properties:
        user:
          title: user
          description: user to update
          $ref: '#/components/schemas/tcn.org.users.v1alpha1.User'
        update_mask:
          title: update_mask
          description: (OPTIONAL) update mask
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateUserRequest
      required:
      - user
      additionalProperties: false
      description: request message UpdateUserRequest
    tcn.ruleengine.ruleset.v1alpha1.Action:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the action
        alias:
          type: string
          title: alias
          description: The alias name of the action
        params:
          type: array
          items:
            $ref: '#/components/schemas/tcn.ruleengine.ruleset.v1alpha1.Param'
          title: params
          description: The list of parameters of the action
      title: Action
      required:
      - name
      - alias
      - params
      additionalProperties: false
      description: Action -
    tcn.ruleengine.ruleset.v1alpha1.EventMetadata:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) The name of the metadata
        body:
          type: string
          title: body
          description: The body of the metadata
      title: EventMetadata
      required:
      - body
      additionalProperties: false
      description: EventMetadata -
    tcn.ruleengine.ruleset.v1alpha1.Param:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the parameter
        value:
          type: string
          title: value
          description: The value of the parameter
      title: Param
      required:
      - name
      - value
      additionalProperties: false
      description: Param -
    tcn.ruleengine.ruleset.v1alpha1.Rule:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the rule
        desc:
          type: string
          title: desc
          description: The description of the rule
        when:
          type: string
          title: when
          description: JSON format of the when trigger
        conditions:
          type: array
          items:
            type: string
          title: conditions
          description: JSON list of conditions
        actions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.ruleengine.ruleset.v1alpha1.Action'
          title: actions
          description: The set of actions of the rule
        is_active:
          type: boolean
          title: is_active
          description: The state of the rule
      title: Rule
      required:
      - name
      - desc
      - when
      - conditions
      - actions
      - is_active
      additionalProperties: false
      description: Rule -
    tcn.ruleengine.ruleset.v1alpha1.RuleSet:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) Name is the identifier for a rule set
        rules:
          type: array
          items:
            $ref: '#/components/schemas/tcn.ruleengine.ruleset.v1alpha1.Rule'
          title: rules
          description: The set of rules
      title: RuleSet
      required:
      - rules
      additionalProperties: false
      description: RuleSet -
    tcn.ruleengine.ruleset.v1alpha1.GetEventMetadataRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name of the metadata
      title: GetEventMetadataRequest
      required:
      - name
      additionalProperties: false
      description: GetEventMetadataRequest is the message used for getting an event
        metadata
    tcn.ruleengine.ruleset.v1alpha1.GetRuleSetRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: The name for the rule set
      title: GetRuleSetRequest
      required:
      - name
      additionalProperties: false
      description: GetRuleSetRequest is the message used for getting a rule set
    tcn.ruleengine.ruleset.v1alpha1.UpdateRuleSetRequest:
      type: object
      properties:
        rule_set:
          title: rule_set
          description: The rule set to update
          $ref: '#/components/schemas/tcn.ruleengine.ruleset.v1alpha1.RuleSet'
        update_mask:
          title: update_mask
          description: (OPTIONAL) The field mask to apply to the rule set.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateRuleSetRequest
      required:
      - rule_set
      additionalProperties: false
      description: UpdateRuleSetRequest is the message used for updating a rule set
    tcn.tickets.ticket.v1alpha1.Span:
      type: string
      title: Span
      enum:
      - SPAN_UNSPECIFIED
      - SPAN_IN_MINUTE
      - SPAN_IN_HOUR
      - SPAN_IN_DAY
      - SPAN_IN_WEEK
      - SPAN_IN_MONTH
      - SPAN_IN_YEAR
      description: Span
    tcn.tickets.ticket.v1alpha1.TicketActionStatus:
      type: string
      title: TicketActionStatus
      enum:
      - TICKET_ACTION_STATUS_UNSPECIFIED
      - TICKET_ACTION_STATUS_AVILABLE
      - TICKET_STATUS_NOT_AVILABLE
      description: ticket_action_status
    tcn.tickets.ticket.v1alpha1.TicketStatus:
      type: string
      title: TicketStatus
      enum:
      - TICKET_STATUS_UNSPECIFIED
      - TICKET_STATUS_NEW
      - TICKET_STATUS_OPEN
      - TICKET_STATUS_CLOSE
      description: ticket_status
    tcn.tickets.ticket.v1alpha1.ActionType:
      type: object
      properties:
        value:
          type:
          - integer
          - string
          title: value
          format: int64
          description: action id values
        action_title:
          type: string
          title: action_title
          description: action_title
      title: ActionType
      required:
      - value
      - action_title
      additionalProperties: false
      description: ActionType
    tcn.tickets.ticket.v1alpha1.CallbackContext:
      type: object
      properties:
        caller_line_identification:
          type: string
          title: caller_line_identification
          description: (OPTIONAL) caller_line_identification
        phone_number:
          type: string
          title: phone_number
          description: (OPTIONAL) phone_number
        region_code:
          type: string
          title: region_code
          description: (OPTIONAL) region_code
        caller_title:
          type: string
          title: caller_title
          description: (OPTIONAL) caller_title
        caller_region_code:
          type: string
          title: caller_region_code
          description: (OPTIONAL) caller_region_code
      title: CallbackContext
      additionalProperties: false
      description: Message for Voice Callback Context
    tcn.tickets.ticket.v1alpha1.EmailbackContext:
      type: object
      properties:
        contact_title:
          type: string
          title: contact_title
          description: (OPTIONAL) contact_title
        sender_email:
          type: string
          title: sender_email
          description: (OPTIONAL) sender_email
        receiver_email:
          type: string
          title: receiver_email
          description: (OPTIONAL) receiver_email
      title: EmailbackContext
      additionalProperties: false
      description: Message for EMAIL Callback Context
    tcn.tickets.ticket.v1alpha1.Metadata:
      type: object
      properties:
        title:
          type: string
          title: title
          description: title -
        value:
          type: string
          title: value
          description: value -
      title: Metadata
      required:
      - title
      - value
      additionalProperties: false
      description: Metadata - Contains a key value pair of strings, Will have metadata
        of an agent conversations
    tcn.tickets.ticket.v1alpha1.SlaConditions:
      type: object
      properties:
        condition_id:
          type:
          - integer
          - string
          title: condition_id
          format: int64
          description: (OPTIONAL) condition_id
        title:
          type: string
          title: title
          description: (OPTIONAL) title
      title: SlaConditions
      additionalProperties: false
      description: SlaConditions
    tcn.tickets.ticket.v1alpha1.SmsbackContext:
      type: object
      properties:
        contact_title:
          type: string
          title: contact_title
          description: (OPTIONAL) contact_title
        sender_sms:
          type: string
          title: sender_sms
          description: (OPTIONAL) sender_sms
        receiver_sms:
          type: string
          title: receiver_sms
          description: (OPTIONAL) receiver_sms
        sender_region_code:
          type: string
          title: sender_region_code
          description: (OPTIONAL) sender_region_code
        receiver_region_code:
          type: string
          title: receiver_region_code
          description: (OPTIONAL) receiver_region_code
      title: SmsbackContext
      additionalProperties: false
      description: Message for SMS Callback Context
    tcn.tickets.ticket.v1alpha1.TemplateDescription:
      type: object
      properties:
        ticket_template_id:
          type:
          - integer
          - string
          title: ticket_template_id
          format: int64
          description: (OPTIONAL) ticket_template_id
        title:
          type: string
          title: title
          description: (OPTIONAL) title
      title: TemplateDescription
      additionalProperties: false
      description: TemplateDescription
    tcn.tickets.ticket.v1alpha1.TicketActionDescription:
      type: object
      properties:
        start_time:
          title: start_time
          description: Start Date of the ACTION
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        ticket_action_status:
          title: ticket_action_status
          description: Ticket action status can be 1 == AVAILABLE and 2 == NOT AVAILABLE
          readOnly: true
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketActionStatus'
        action_type:
          title: action_type
          description: Action Type
          readOnly: true
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ActionType'
      title: TicketActionDescription
      additionalProperties: false
      description: TicketActionDescription
    tcn.tickets.ticket.v1alpha1.TimeSpan:
      type: object
      properties:
        value:
          type:
          - integer
          - string
          title: value
          format: int64
          description: Value of of the time_span
        span:
          title: span
          description: Span - In minutes,hour,day,week,month,year
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Span'
      title: TimeSpan
      required:
      - value
      - span
      additionalProperties: false
      description: TimeSpan
    tcn.tickets.ticket.v1alpha1.Project:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) project identifier
        title:
          type: string
          title: title
          description: project name
        project_code:
          type: string
          title: project_code
          description: project code
        enabled:
          type: boolean
          title: enabled
          description: (OPTIONAL) True/False Identifies if a template is active or
            inactive
        template_description:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TemplateDescription'
          title: template_description
          description: (OPTIONAL) A list of template base details
      title: Project
      required:
      - title
      - project_code
      additionalProperties: false
      description: Project -
    tcn.tickets.ticket.v1alpha1.Sla:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) sla identifier
        title:
          type: string
          title: title
          description: sla name
        description:
          type: string
          title: description
          description: sla description
        time_span:
          title: time_span
          description: sla time_span
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TimeSpan'
      title: Sla
      required:
      - title
      - description
      - time_span
      additionalProperties: false
      description: sla -
    tcn.tickets.ticket.v1alpha1.Ticket:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) identifier - ticket_code
        project_sid:
          type:
          - integer
          - string
          title: project_sid
          format: int64
          description: The imported/enabled ticket_project project_sid from omni.project
        project_title:
          type: string
          title: project_title
          description: project_title
        title:
          type: string
          title: title
          description: The title of the ticket
        description:
          type: string
          title: description
          description: (OPTIONAL) The description of the ticket
        creater_id:
          type: string
          title: creater_id
          description: The userId (uuid) who created the ticket
        create_time:
          title: create_time
          description: The created time of the Ticket Object
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        metadatas:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Metadata'
          title: metadatas
          description: (OPTIONAL) A list of conversation context meatadata
        slas:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: slas
          description: (OPTIONAL) A list of sla  assotiated with a ticket
        ticket_actions:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: ticket_actions
          description: (OPTIONAL) A list of actions  assotiated with a ticket
        ticket_status:
          title: ticket_status
          description: (OPTIONAL) Status of the ticket - NEW,OPEN,CLOSED
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketStatus'
        ticket_assignees:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: ticket_assignees
          description: (OPTIONAL) assignee list
        ticket_participants:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: ticket_participants
          description: (OPTIONAL) participant list - Any user who participates in
            the ticket life cycle
      title: Ticket
      required:
      - project_sid
      - project_title
      - title
      - creater_id
      additionalProperties: false
      description: Ticket - Fields for Ticket creation, List tickets and view ticket
    tcn.tickets.ticket.v1alpha1.TicketAction:
      type: object
      oneOf:
      - properties:
          email_context:
            title: email_context
            description: (OPTIONAL) Email Callback Context
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.EmailbackContext'
        title: email_context
        required:
        - email_context
      - properties:
          sms_context:
            title: sms_context
            description: (OPTIONAL) SMS Callback Context
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.SmsbackContext'
        title: sms_context
        required:
        - sms_context
      - properties:
          voice_context:
            title: voice_context
            description: (OPTIONAL) Voice Callback Context
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.CallbackContext'
        title: voice_context
        required:
        - voice_context
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) identifier - ticket_action_id
        action_identification:
          type:
          - integer
          - string
          title: action_identification
          format: int64
          description: (OPTIONAL) action id from ACTION_MASTER table
        start_time:
          title: start_time
          description: (OPTIONAL) Start Date of the ACTION
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        expiry_time:
          title: expiry_time
          description: (OPTIONAL) Expiry date of the ACTION
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        ticket_action_status:
          title: ticket_action_status
          description: (OPTIONAL) Ticket action status can be 1 == AVAILABLE and 2
            == NOT AVAILABLE
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketActionStatus'
        action_skills:
          type: array
          items:
            type: string
          title: action_skills
          description: Skills needed for the action to be completed
        slas:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: slas
          description: (OPTIONAL) SLA Id for the ACTION
        work_done_detail:
          type: string
          title: work_done_detail
          description: (OPTIONAL) work done by detail
        action_type:
          title: action_type
          description: (OPTIONAL) Action Type
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ActionType'
        ticket_code:
          type: string
          title: ticket_code
          description: ticket_code
        ticket_action_description:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketActionDescription'
          title: ticket_action_description
          description: (OPTIONAL) This data is used only for the list_ticket UI screen
            purpose.
      title: TicketAction
      required:
      - action_skills
      - ticket_code
      additionalProperties: false
      description: TICKET_ACTION - New messgae have actions mapped to tickets
    tcn.tickets.ticket.v1alpha1.TicketTemplate:
      type: object
      properties:
        name:
          type: string
          title: name
          description: (IDENTIFIER) identifier of Ticket Template
        template_json:
          type: string
          title: template_json
          description: A formatted string which the FE uses to retrieve all template
            related information
        template_entity_version:
          type: string
          title: template_entity_version
          description: Version of the Template
        title:
          type: string
          title: title
          description: Name of the Template
        creater_id:
          type: string
          title: creater_id
          description: (OPTIONAL) Template created by user
        author:
          type: string
          title: author
          description: (OPTIONAL) Template modified by user
        create_time:
          title: create_time
          description: Template create time
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        update_time:
          title: update_time
          description: Template modified time
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        enabled:
          type: boolean
          title: enabled
          description: (OPTIONAL) True/False Identifies if a template is active or
            inactive
      title: TicketTemplate
      required:
      - template_json
      - template_entity_version
      - title
      additionalProperties: false
      description: Ticket Template
    tcn.tickets.ticket.v1alpha1.AssignTicketTemplateRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the TicketTemplate
        project_id:
          type:
          - integer
          - string
          title: project_id
          format: int64
          description: (OPTIONAL) template proejct_id
      title: AssignTicketTemplateRequest
      required:
      - name
      additionalProperties: false
      description: get assign ticket_template based on name and project_id used to
        getting particular data
    tcn.tickets.ticket.v1alpha1.AssignTicketTemplateResponse:
      type: object
      properties:
        is_assigned:
          type: boolean
          title: is_assigned
          description: closing status
      title: AssignTicketTemplateResponse
      additionalProperties: false
      description: AssignTicketTemplateResponse -  Response Messages
    tcn.tickets.ticket.v1alpha1.CloseTicketActionRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the TicketAction
        comment:
          type: string
          title: comment
          description: description of the comment
      title: CloseTicketActionRequest
      required:
      - name
      - comment
      additionalProperties: false
      description: CloseTicketActionRequest -
    tcn.tickets.ticket.v1alpha1.CloseTicketActionResponse:
      type: object
      properties:
        is_status:
          type: boolean
          title: is_status
          description: closing status
      title: CloseTicketActionResponse
      additionalProperties: false
      description: CloseTicketActionResponse - Close TicketAction Response Messages
    tcn.tickets.ticket.v1alpha1.CloseTicketRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the Ticket
        comment:
          type: string
          title: comment
          description: description of the comment
      title: CloseTicketRequest
      required:
      - name
      - comment
      additionalProperties: false
      description: CloseTicketRequest -
    tcn.tickets.ticket.v1alpha1.CloseTicketResponse:
      type: object
      properties:
        is_status:
          type: boolean
          title: is_status
          description: closing status
      title: CloseTicketResponse
      additionalProperties: false
      description: CloseTicketResponse - Close Ticket Response Messages
    tcn.tickets.ticket.v1alpha1.CreateProjectRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the
        project:
          title: project
          description: the project to be created
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
      title: CreateProjectRequest
      required:
      - parent
      - project
      additionalProperties: false
      description: request used to create a Project
    tcn.tickets.ticket.v1alpha1.CreateSlaRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the
        sla:
          title: sla
          description: the sla to be created
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
      title: CreateSlaRequest
      required:
      - parent
      - sla
      additionalProperties: false
      description: request used to create a Sla
    tcn.tickets.ticket.v1alpha1.CreateTicketActionRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the
        ticket_action:
          title: ticket_action
          description: the ticket_action to be created
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
      title: CreateTicketActionRequest
      required:
      - parent
      - ticket_action
      additionalProperties: false
      description: request used to create a ticket_action
    tcn.tickets.ticket.v1alpha1.CreateTicketRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the
        ticket:
          title: ticket
          description: the ticket to be created
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
      title: CreateTicketRequest
      required:
      - parent
      - ticket
      additionalProperties: false
      description: request used to create a ticket
    tcn.tickets.ticket.v1alpha1.CreateTicketTemplateRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the
        ticket_template:
          title: ticket_template
          description: the ticket_template to be created
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
      title: CreateTicketTemplateRequest
      required:
      - parent
      - ticket_template
      additionalProperties: false
      description: request used to create a ticket_templete
    tcn.tickets.ticket.v1alpha1.DeleteProjectRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the Project
        force:
          type: boolean
          title: force
          description: (OPTIONAL) If set to true, any project from this org will also
            be deleted.
      title: DeleteProjectRequest
      required:
      - name
      additionalProperties: false
      description: request used to delete a Project
    tcn.tickets.ticket.v1alpha1.DeleteSlaRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the Sla
      title: DeleteSlaRequest
      required:
      - name
      additionalProperties: false
      description: request used to delete a Sla
    tcn.tickets.ticket.v1alpha1.GetProjectRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the project
      title: GetProjectRequest
      required:
      - name
      additionalProperties: false
      description: get single Project based on name and mask used to getting particular
        data
    tcn.tickets.ticket.v1alpha1.GetSlaRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the Sla
      title: GetSlaRequest
      required:
      - name
      additionalProperties: false
      description: get single Sla based on name and mask used to getting particular
        data
    tcn.tickets.ticket.v1alpha1.GetTicketActionRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the TicketAction
      title: GetTicketActionRequest
      required:
      - name
      additionalProperties: false
      description: get single ticket_action based on name and mask used to getting
        particular data
    tcn.tickets.ticket.v1alpha1.GetTicketRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the Ticket
      title: GetTicketRequest
      required:
      - name
      additionalProperties: false
      description: get single ticket based on name and mask used to getting particular
        data
    tcn.tickets.ticket.v1alpha1.GetTicketTemplateRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: the name of the TicketTemplate
        project_id:
          type:
          - integer
          - string
          title: project_id
          format: int64
          description: "(OPTIONAL) (-- api-linter: core::0131::request-unknown-fields=disabled\n
            \    aip.dev/not-precedent: We really need this field because reasons.
            --)\n project_id"
      title: GetTicketTemplateRequest
      required:
      - name
      additionalProperties: false
      description: get single ticket_template based on name and mask used to getting
        particular data
    tcn.tickets.ticket.v1alpha1.ListActionsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed TicketAction
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListActionsRequest
      required:
      - parent
      additionalProperties: false
      description: "(-- api-linter: core::0132::request-parent-reference=disabled\n
        \    aip.dev/not-precedent: We need to do this because reasons. --)\n get
        all action's types  particular data"
    tcn.tickets.ticket.v1alpha1.ListActionsResponse:
      type: object
      properties:
        action_types:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.ActionType'
          title: action_types
          description: "Action Type\n (-- api-linter: core::0132::response-unknown-fields=disabled\n
            \    aip.dev/not-precedent: We really need this field because reasons.
            --)"
        next_page_token:
          type: string
          title: next_page_token
          description: the next page token
      title: ListActionsResponse
      additionalProperties: false
      description: get all action's types  particular data
    tcn.tickets.ticket.v1alpha1.ListProjectsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed Project
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListProjectsRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of Project
    tcn.tickets.ticket.v1alpha1.ListProjectsResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
          title: projects
          description: the list of project
        next_page_token:
          type: string
          title: next_page_token
          description: the next page token
      title: ListProjectsResponse
      additionalProperties: false
      description: response used listing all project
    tcn.tickets.ticket.v1alpha1.ListSlaConditionsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed SlaConditions
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListSlaConditionsRequest
      required:
      - parent
      additionalProperties: false
      description: "(-- api-linter: core::0132::request-parent-reference=disabled\n
        \    aip.dev/not-precedent: We need to do this because reasons. --)\n get
        all action's types  particular data"
    tcn.tickets.ticket.v1alpha1.ListSlaConditionsResponse:
      type: object
      properties:
        sla_conditions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.SlaConditions'
          title: sla_conditions
          description: "SlaConditions Type\n (-- api-linter: core::0132::response-unknown-fields=disabled\n
            \    aip.dev/not-precedent: We really need this field because reasons.
            --)"
        next_page_token:
          type: string
          title: next_page_token
          description: the next page token
      title: ListSlaConditionsResponse
      additionalProperties: false
      description: get all action's types  particular data
    tcn.tickets.ticket.v1alpha1.ListSlasRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed Sla
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListSlasRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of Sla
    tcn.tickets.ticket.v1alpha1.ListSlasResponse:
      type: object
      properties:
        slas:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
          title: slas
          description: the list of Sla
        next_page_token:
          type: string
          title: next_page_token
          description: the next page token
      title: ListSlasResponse
      additionalProperties: false
      description: response used listing all Sla
    tcn.tickets.ticket.v1alpha1.ListTicketActionsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed TicketAction
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListTicketActionsRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of ticket_action
    tcn.tickets.ticket.v1alpha1.ListTicketActionsResponse:
      type: object
      properties:
        ticket_actions:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
          title: ticket_actions
          description: the list of TicketAction
        next_page_token:
          type: string
          title: next_page_token
          description: the next page token
      title: ListTicketActionsResponse
      additionalProperties: false
      description: response used listing all ticket_action
    tcn.tickets.ticket.v1alpha1.ListTicketTemplatesRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed TicketTemplates
        project_id:
          type:
          - integer
          - string
          title: project_id
          format: int64
          description: "(OPTIONAL) (-- api-linter: core::0132::request-unknown-fields=disabled\n
            \    aip.dev/not-precedent: We really need this field because reasons.
            --)\n project_id"
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListTicketTemplatesRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of tickets
    tcn.tickets.ticket.v1alpha1.ListTicketTemplatesResponse:
      type: object
      properties:
        ticket_templates:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
          title: ticket_templates
          description: the list of TicketTemplate
        next_page_token:
          type: string
          title: next_page_token
          description: the next page token
      title: ListTicketTemplatesResponse
      additionalProperties: false
      description: response used listing all ticket_templates
    tcn.tickets.ticket.v1alpha1.ListTicketsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: the parent of the listed Ticket
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) returned page
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) used to specify the page token
        filter:
          type: string
          title: filter
          description: (OPTIONAL) used to specify the filter
      title: ListTicketsRequest
      required:
      - parent
      additionalProperties: false
      description: request used to get a list of tickets
    tcn.tickets.ticket.v1alpha1.ListTicketsResponse:
      type: object
      properties:
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
          title: tickets
          description: the list of Ticket
        next_page_token:
          type: string
          title: next_page_token
          description: the next page token
      title: ListTicketsResponse
      additionalProperties: false
      description: response used listing all tickets
    tcn.tickets.ticket.v1alpha1.UpdateProjectRequest:
      type: object
      properties:
        project:
          title: project
          description: the Project to be updated
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Project'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the update mask
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateProjectRequest
      required:
      - project
      additionalProperties: false
      description: request used to update a Project
    tcn.tickets.ticket.v1alpha1.UpdateSlaRequest:
      type: object
      properties:
        sla:
          title: sla
          description: the Sla to be updated
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Sla'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the update mask
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateSlaRequest
      required:
      - sla
      additionalProperties: false
      description: request used to update a Sla
    tcn.tickets.ticket.v1alpha1.UpdateTicketActionRequest:
      type: object
      properties:
        ticket_action:
          title: ticket_action
          description: the TicketAction to be updated
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketAction'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the update mask
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateTicketActionRequest
      required:
      - ticket_action
      additionalProperties: false
      description: request used to update a ticket_action
    tcn.tickets.ticket.v1alpha1.UpdateTicketRequest:
      type: object
      properties:
        ticket:
          title: ticket
          description: the Ticket to be updated
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.Ticket'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the update mask
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateTicketRequest
      required:
      - ticket
      additionalProperties: false
      description: request used to update a ticket
    tcn.tickets.ticket.v1alpha1.UpdateTicketTemplateRequest:
      type: object
      properties:
        ticket_template:
          title: ticket_template
          description: the TicketTemplate to be updated
          $ref: '#/components/schemas/tcn.tickets.ticket.v1alpha1.TicketTemplate'
        update_mask:
          title: update_mask
          description: (OPTIONAL) the update mask
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateTicketTemplateRequest
      required:
      - ticket_template
      additionalProperties: false
      description: request used to update a ticket_template
    tcn.wfo.scorecards.v1alpha1.CategoryType:
      type: string
      title: CategoryType
      enum:
      - CATEGORY_TYPE_UNSPECIFIED
      - CATEGORY_TYPE_DEFAULT
      - CATEGORY_TYPE_SKILLED
      description: "Category type describes the category.\n DEFAULT: Category is for
        matching conversations with no other filters. (external, manual, etc.)\n SKILLED:
        Category contains a list of skill profiles and/or skill profile groups."
    tcn.wfo.scorecards.v1alpha1.Category:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "(IDENTIFIER) Name of the category.\n Format is `orgs/{org_id}/regions/{region_id}/categories/{category_id}`"
        author:
          title: author
          description: User that created the category.
          readOnly: true
          $ref: '#/components/schemas/tcn.wfo.scorecards.v1alpha1.Category.User'
        title:
          type: string
          title: title
          description: The title of the category.
        description:
          type: string
          title: description
          description: (OPTIONAL) The description of the category.
        create_time:
          title: create_time
          description: Time the category was created.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        delete_time:
          title: delete_time
          description: Time the category was deleted.
          readOnly: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        category_type:
          title: category_type
          description: Category types specifies the type of category (SKILLED | DEFAULT)
          $ref: '#/components/schemas/tcn.wfo.scorecards.v1alpha1.CategoryType'
        skill_profiles:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: skill_profiles
          description: (OPTIONAL) List of skill profile sids
        skill_profile_groups:
          type: array
          items:
            type: string
            description: '(OPTIONAL) '
          title: skill_profile_groups
          description: (OPTIONAL) List of skill profiles group sids
      title: Category
      required:
      - title
      - category_type
      additionalProperties: false
      description: "Category wraps a set of skills (or labels).\n A scorecard will
        filter what to evaluate\n based on the category."
    tcn.wfo.scorecards.v1alpha1.Category.User:
      type: object
      properties:
        user:
          type: string
          title: user
          description: user is the user id
        fullname:
          type: string
          title: fullname
          description: fullname is the user's full name
          readOnly: true
      title: User
      required:
      - user
      additionalProperties: false
      description: "User represents a user\n the data we want to display."
    tcn.wfo.scorecards.v1alpha1.CreateCategoryRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "Parent of the category.\n Format: `orgs/{org_id}/regions/{region_id}/categories/{category_id}`"
        category:
          title: category
          description: Category to create.
          $ref: '#/components/schemas/tcn.wfo.scorecards.v1alpha1.Category'
      title: CreateCategoryRequest
      required:
      - parent
      - category
      additionalProperties: false
      description: "(-- api-linter: core::0133::request-id-field=disabled\n     aip.dev/not-precedent:
        The id of the category is\n     generated by the service.\n --)\n CreateCategoryRequest
        specifies request parameters to\n create a category."
    tcn.wfo.scorecards.v1alpha1.DeleteCategoryRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "Name of the category.\n Format: `orgs/{org_id}/regions/{region_id}/categories/{category_id}`"
      title: DeleteCategoryRequest
      required:
      - name
      additionalProperties: false
      description: "DeleteCategoryRequest specifies request parameters to\n delete
        a category."
    tcn.wfo.scorecards.v1alpha1.GetCategoryRequest:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "Name of the category.\n Format: `orgs/{org_id}/regions/{region_id}/categories/{category_id}`"
      title: GetCategoryRequest
      required:
      - name
      additionalProperties: false
      description: "GetCategoryRequest specifies request parameters to\n get a category."
    tcn.wfo.scorecards.v1alpha1.ListCategoriesRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "Parent category.\n Format: `orgs/{org_id}/regions/{region_id}`"
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Number of categories to return.
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) Token for retreiving the next page of results.
        filter:
          type: string
          title: filter
          description: (OPTIONAL) Filter for categories.
        order_by:
          type: string
          title: order_by
          description: (OPTIONAL) Sort order for categories.
      title: ListCategoriesRequest
      required:
      - parent
      additionalProperties: false
      description: "ListCategoriesRequest specifies request parameters to\n list categories."
    tcn.wfo.scorecards.v1alpha1.ListCategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/tcn.wfo.scorecards.v1alpha1.Category'
          title: categories
          description: List of categories returned.
        next_page_token:
          type: string
          title: next_page_token
          description: Token for retreiving the next page of results.
      title: ListCategoriesResponse
      additionalProperties: false
      description: ListCategoriesResponse returns a list of categories.
    tcn.wfo.scorecards.v1alpha1.UpdateCategoryRequest:
      type: object
      properties:
        category:
          title: category
          description: "Category to update.\n\n The category's name field is used
            to identify the category to update.\n Format: `orgs/{org_id}/regions/{region_id}/categories/{category_id}`"
          $ref: '#/components/schemas/tcn.wfo.scorecards.v1alpha1.Category'
        update_mask:
          title: update_mask
          description: (OPTIONAL) Update mask for the category.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: UpdateCategoryRequest
      required:
      - category
      additionalProperties: false
      description: "UpdateCategoryRequest specifies request parameters to\n update
        a category."
    tcn.wfo.vana.v1alpha1.CallType:
      type: string
      title: CallType
      enum:
      - CALL_TYPE_INBOUND
      - CALL_TYPE_OUTBOUND
      - CALL_TYPE_PREVIEW
      - CALL_TYPE_MANUAL
      - CALL_TYPE_MAC
      description: Enumeration of call types.
    tcn.wfo.vana.v1alpha1.RecordingType:
      type: string
      title: RecordingType
      enum:
      - RECORDING_TYPE_TCN
      - RECORDING_TYPE_EXTERNAL
      - RECORDING_TYPE_VOICEMAIL
      description: Enumeration of recording types.
    tcn.wfo.vana.v1alpha1.GenerateRecordingDownloadUriRequest:
      type: object
      properties:
        recording:
          type: string
          title: recording
          description: "Required. The recording resource name.\n Format: \"orgs/{org}/regions/{region}/zones/{zone}/recordings/{recording}\""
        file_type:
          type: string
          title: file_type
          description: (OPTIONAL) Optional. File type which can be wav or mp3. Defaults
            to wav.
      title: GenerateRecordingDownloadUriRequest
      required:
      - recording
      additionalProperties: false
      description: The generate recording download uri request.
    tcn.wfo.vana.v1alpha1.GenerateRecordingDownloadUriResponse:
      type: object
      properties:
        uri:
          type: string
          title: uri
          description: The generated recording download uri.
      title: GenerateRecordingDownloadUriResponse
      additionalProperties: false
      description: The generate recording download uri response.
    tcn.wfo.vana.v1alpha1.Recording:
      type: object
      properties:
        name:
          type: string
          title: name
          description: "(IDENTIFIER) Output only. The fully qualified resource name
            of the recording.\n Format: \"orgs/{org}/regions/{region}/zones/{zone}/recordings/{recording}\""
        call_sid:
          type:
          - integer
          - string
          title: call_sid
          format: int64
          description: The unique identifier of the call recorded.
        call_type:
          title: call_type
          description: The type of call recorded.
          $ref: '#/components/schemas/tcn.wfo.vana.v1alpha1.CallType'
        duration:
          title: duration
          description: The duration of the recording.
          $ref: '#/components/schemas/google.protobuf.Duration'
        agent_phone:
          type: string
          title: agent_phone
          description: The phone number of the agent.
        client_phone:
          type: string
          title: client_phone
          description: The phone number of the client.
        campaign:
          type: string
          title: campaign
          description: The name of the campaign.
        recording_type:
          title: recording_type
          description: The type of the recording.
          $ref: '#/components/schemas/tcn.wfo.vana.v1alpha1.RecordingType'
        start_time:
          title: start_time
          description: The start time of the recording.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        agent_user_ids:
          type: array
          items:
            type: string
          title: agent_user_ids
          description: The user IDs of participating agents.
      title: Recording
      additionalProperties: false
      description: The recording resource.
    tcn.wfo.vana.v1alpha1.SearchRecordingsRequest:
      type: object
      properties:
        parent:
          type: string
          title: parent
          description: "Required. The parent resource name.\n Format: \"orgs/{org}/regions/{region}/zones/{zone}\""
        page_size:
          type: integer
          title: page_size
          format: int32
          description: (OPTIONAL) Optional. Number of recordings to return. Defaults
            to 10.
        page_token:
          type: string
          title: page_token
          description: (OPTIONAL) Optional. A token to retrieve the next page of results.
        filter:
          type: string
          title: filter
          description: (OPTIONAL) Optional. AIP-160 filter expression for search results.
        order_by:
          type: string
          title: order_by
          description: "(OPTIONAL) Optional. Comma-separated list of fields to order
            by, followed by `asc`\n or `desc` postfix. Case insensitive."
        read_mask:
          title: read_mask
          description: (OPTIONAL) Optional. Mask specifying which fields to read.
            Defaults to all fields.
          $ref: '#/components/schemas/google.protobuf.FieldMask'
      title: SearchRecordingsRequest
      required:
      - parent
      additionalProperties: false
      description: The search recordings request.
    tcn.wfo.vana.v1alpha1.SearchRecordingsResponse:
      type: object
      properties:
        recordings:
          type: array
          items:
            $ref: '#/components/schemas/tcn.wfo.vana.v1alpha1.Recording'
          title: recordings
          description: The list of recordings found.
        next_page_token:
          type: string
          title: next_page_token
          description: Token for the next page of results.
      title: SearchRecordingsResponse
      additionalProperties: false
      description: The search recordings response.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: Bearer
      bearerFormat: JWT
security:
- bearerAuth: []
tags:
- name: BusinessIntelligenceService
  description: BusinessIntelligenceService defines the api for business intelligence.
- name: DashboardsService
  description: DashboardsService is the public API for the bi/dashboards service.
- name: CredentialService
  description: delivery credential service
- name: EncryptionService
  description: encryption service
- name: TransportSchemaService
  description: transport schema service
- name: JobsService
  description: "JobsService\n (-- api-linter: core::0121::resource-must-support-get=disabled\n
    \    aip.dev/not-precedent: dont need a get method --)"
- name: RejectionsService
  description: "RejectionService\n (-- api-linter: core::0121::resource-must-support-get=disabled\n
    \    aip.dev/not-precedent: We do not need a get method --)"
- name: AttachmentService
  description: Attachments service is the public api for the omni/attachments service.
- name: CampaignService
  description: Campaigns service is the public api for the omni/campaigns service.
- name: CannedMessageService
  description: CannedMessageService -
- name: ChatWidgetService
  description: ChatWidgetService is the public api for the omni/chatwidgetdata service.
- name: ComplianceService
  description: Compliance service is the public api for the omni/complianceConfig
    service.
- name: ConnectedInboxService
  description: ConnectedInboxService is the public api for the omni/connectedInbox
    service.
- name: ContactListService
  description: ContactListService is the public api for the omni/contactlist service.
- name: ConversationService
  description: Conversation service is the public api for the omni/conversation service.
- name: DispositionService
  description: Dispositions service is the public api for the omni/dispositions service.
- name: EventlogService
  description: Eventlog Service -
- name: MessageService
  description: MessageService is the public api for the omni/message service.
- name: MsgTextCleanerService
  description: Msg Text Cleaner service definition.
- name: OauthService
  description: OAuth service is the public api for the omni/oauthConfig service.
- name: P3SchedulerService
  description: Defines the gRPC service named P3SchedulerService.
- name: ProjectService
  description: Projects service is the public api for the omni/projects service.
- name: RoutingRuleService
  description: RoutingRuleService is the public api for the omni/routingrule service.
- name: SendgridService
  description: "Sendgrid Service will make sure all the account settings are valid
    defined by PerformSendgridAccountChecksRequest message.\n The method will return
    a PerformSendgridAccountChecksResponse message/entity that will\n return empty
    or error depending on the result after verifying account settings with sendgrid
    for this client"
- name: SignatureService
  description: Signatures service is the public api for the omni/signatures service.
- name: SmsNumberService
  description: SmsNumberService is the public api for the omni/smsnumber service.
- name: TaskService
  description: TaskService is the public api for the omni/task service.
- name: TaskCountsService
  description: TaskCountsService is the public api for the omni/taskcounts service.
- name: UnsubscribeLinkService
  description: UnsubscribeLinks service is the public api for the omni/unsubscribelinks
    service.
- name: VerifiedEmailService
  description: VerifiedEmailService is the public api for the omni/verifiedEmails
    service.
- name: WhatsAppNumberService
  description: WhatsAppNumberService is the public api for the omni/whatsappnumber
    service.
- name: AgentProfileGroupsService
  description: AgentProfileGroupService
- name: BillingPlanService
  description: BillingPlanService manages billing plans.
- name: BillingTagService
  description: BillingTagService manages billing tags.
- name: EventService
  description: EventService -
- name: InvoiceService
  description: InvoiceService -
- name: MatchingRuleService
  description: MatchingRuleService -
- name: RateDefinitionService
  description: RateDefinitionService -
- name: ExilesService
  description: ExilesService
- name: HuntgroupsService
  description: HuntgroupsService
- name: IdpClientService
  description: IdpClientService
- name: OrganizationsService
  description: OrganizationsService is the service that provides methods to manage
    organizations.
- name: PermissionsService
  description: PermissionsService is the service for managing permissions.
- name: PreferencesService
  description: "(-- api-linter: core::0121::resource-must-support-list=disabled\n
    \    aip.dev/not-precedent: PreferencesService doesn't support list calls. --)\n
    PreferencesService is the service that provides and handles preferences/settings.
    AdminClientPreferences"
- name: SkillsService
  description: SkillsService
- name: TokensService
  description: TokensService
- name: UsersService
  description: UsersService
- name: RuleEngineService
  description: RuleEngineService is the public API for the ruleengine/ruleset service.
- name: TicketService
  description: Ticket service is the public api for the tickets.
- name: ScorecardsService
  description: ScorecardsService provides methods to manage scorecards
- name: RecordingService
  description: The recording service.
servers:
- url: https://api.cbf.tcn.com
  description: Server located in United States (Primary)
- url: https://api.bom.tcn.com
  description: Server located in India
- url: https://api.chs.tcn.com
  description: Server located in United States (East)
- url: https://api.fra.tcn.com
  description: Server located in European Union (Germany)
- url: https://api.lon.tcn.com
  description: Server located in United Kingdom
- url: https://api.syd.tcn.com
  description: Server located in Australia
- url: https://api.yul.tcn.com
  description: Server located in Canada
